[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 0.21399998664855957
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0078988
┌ Info: Price and cut time (b-and-b)
└   t = 0.4605152
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 352
└   sum(fire_plans.plans_per_fire) = 122
┌ Info: Time check
└   time() - start_time = 0.681999921798706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117713
┌ Info: Price and cut time (b-and-b)
└   t = 0.3018878
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 2
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 5
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 385
└   sum(fire_plans.plans_per_fire) = 164
┌ Info: Time check
└   time() - start_time = 1.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0130789
┌ Info: Price and cut time (b-and-b)
└   t = 0.1185414
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 3
│   lb = 1.1394932911329647
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 7
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 428
└   sum(fire_plans.plans_per_fire) = 182
┌ Info: Time check
└   time() - start_time = 1.1349999904632568
┌ Info: Exploring node
└   branch_and_bound_node.ix = 4
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011381
┌ Info: Price and cut time (b-and-b)
└   t = 0.1969964
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 4
│   lb = 1.1394932911329647
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 4
└   length(nodes) = 9
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 460
└   sum(fire_plans.plans_per_fire) = 209
┌ Info: Time check
└   time() - start_time = 1.3610000610351562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 5
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100779
┌ Info: Price and cut time (b-and-b)
└   t = 0.2408425
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 5
│   lb = 1.1400216063449233
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 5
└   length(nodes) = 11
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 492
└   sum(fire_plans.plans_per_fire) = 242
┌ Info: Time check
└   time() - start_time = 1.6140000820159912
┌ Info: Exploring node
└   branch_and_bound_node.ix = 8
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0112537
┌ Info: Price and cut time (b-and-b)
└   t = 0.0452394
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 8
│   lb = 1.1400216063449233
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 6
└   length(nodes) = 13
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 521
└   sum(fire_plans.plans_per_fire) = 249
┌ Info: Time check
└   time() - start_time = 1.6779999732971191
┌ Info: Exploring node
└   branch_and_bound_node.ix = 9
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100977
┌ Info: Price and cut time (b-and-b)
└   t = 0.2238908
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 9
│   lb = 1.1412974329150785
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 7
└   length(nodes) = 15
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 572
└   sum(fire_plans.plans_per_fire) = 280
┌ Info: Time check
└   time() - start_time = 1.9140000343322754
┌ Info: Exploring node
└   branch_and_bound_node.ix = 12
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100222
┌ Info: Price and cut time (b-and-b)
└   t = 0.11918
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 12
│   lb = 1.1412974329150785
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 8
└   length(nodes) = 17
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 596
└   sum(fire_plans.plans_per_fire) = 293
┌ Info: Time check
└   time() - start_time = 2.052999973297119
┌ Info: Exploring node
└   branch_and_bound_node.ix = 13
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0099264
┌ Info: Price and cut time (b-and-b)
└   t = 0.1282381
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 13
│   lb = 1.1425566883442646
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 9
└   length(nodes) = 19
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 628
└   sum(fire_plans.plans_per_fire) = 312
┌ Info: Time check
└   time() - start_time = 2.188999891281128
┌ Info: Exploring node
└   branch_and_bound_node.ix = 16
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118349
┌ Info: Price and cut time (b-and-b)
└   t = 0.1597478
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 16
│   lb = 1.1425566883442646
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 10
└   length(nodes) = 21
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 663
└   sum(fire_plans.plans_per_fire) = 331
┌ Info: Time check
└   time() - start_time = 2.367000102996826
┌ Info: Exploring node
└   branch_and_bound_node.ix = 17
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107543
┌ Info: Price and cut time (b-and-b)
└   t = 0.2471983
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 17
│   lb = 1.142589553658512
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 11
└   length(nodes) = 23
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 736
└   sum(fire_plans.plans_per_fire) = 361
┌ Info: Time check
└   time() - start_time = 2.628000020980835
┌ Info: Exploring node
└   branch_and_bound_node.ix = 18
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0119406
┌ Info: Price and cut time (b-and-b)
└   t = 0.2121569
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 18
│   lb = 1.142589553658512
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 12
└   length(nodes) = 25
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 763
└   sum(fire_plans.plans_per_fire) = 385
┌ Info: Time check
└   time() - start_time = 2.8529999256134033
┌ Info: Exploring node
└   branch_and_bound_node.ix = 19
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102262
┌ Info: Price and cut time (b-and-b)
└   t = 0.1308087
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 19
│   lb = 1.1428186717848638
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 13
└   length(nodes) = 27
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 808
└   sum(fire_plans.plans_per_fire) = 400
┌ Info: Time check
└   time() - start_time = 3.005000114440918
┌ Info: Exploring node
└   branch_and_bound_node.ix = 26
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0192544
┌ Info: Price and cut time (b-and-b)
└   t = 0.0737253
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 26
│   lb = 1.1428186717848638
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 14
└   length(nodes) = 29
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 819
└   sum(fire_plans.plans_per_fire) = 409
┌ Info: Time check
└   time() - start_time = 3.1089999675750732
┌ Info: Exploring node
└   branch_and_bound_node.ix = 27
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0127693
┌ Info: Price and cut time (b-and-b)
└   t = 0.1880055
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 27
│   lb = 1.1430907935480137
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 15
└   length(nodes) = 31
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 852
└   sum(fire_plans.plans_per_fire) = 433
┌ Info: Time check
└   time() - start_time = 3.302000045776367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 6
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0097565
┌ Info: Price and cut time (b-and-b)
└   t = 0.1716197
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 6
│   lb = 1.1430907935480137
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 16
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 881
└   sum(fire_plans.plans_per_fire) = 458
┌ Info: Time check
└   time() - start_time = 3.500999927520752
┌ Info: Exploring node
└   branch_and_bound_node.ix = 7
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106654
┌ Info: Price and cut time (b-and-b)
└   t = 0.2690132
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 7
│   lb = 1.1434420258439608
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 17
└   length(nodes) = 35
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 957
└   sum(fire_plans.plans_per_fire) = 499
┌ Info: Time check
└   time() - start_time = 3.7809998989105225
┌ Info: Exploring node
└   branch_and_bound_node.ix = 20
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0129149
┌ Info: Price and cut time (b-and-b)
└   t = 0.0788253
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 20
│   lb = 1.1434420258439608
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 18
└   length(nodes) = 37
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 967
└   sum(fire_plans.plans_per_fire) = 507
┌ Info: Time check
└   time() - start_time = 3.885999917984009
┌ Info: Exploring node
└   branch_and_bound_node.ix = 21
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118107
┌ Info: Price and cut time (b-and-b)
└   t = 0.1977929
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 21
│   lb = 1.1435589719334984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 19
└   length(nodes) = 39
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1020
└   sum(fire_plans.plans_per_fire) = 530
┌ Info: Time check
└   time() - start_time = 4.0929999351501465
┌ Info: Exploring node
└   branch_and_bound_node.ix = 24
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0122429
┌ Info: Price and cut time (b-and-b)
└   t = 0.0672171
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 24
│   lb = 1.1435589719334984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 20
└   length(nodes) = 41
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1030
└   sum(fire_plans.plans_per_fire) = 536
┌ Info: Time check
└   time() - start_time = 4.184999942779541
┌ Info: Exploring node
└   branch_and_bound_node.ix = 25
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0138486
┌ Info: Price and cut time (b-and-b)
└   t = 0.1942655
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 25
│   lb = 1.1440083301212471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 21
└   length(nodes) = 43
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1112
└   sum(fire_plans.plans_per_fire) = 559
┌ Info: Time check
└   time() - start_time = 4.392999887466431
┌ Info: Exploring node
└   branch_and_bound_node.ix = 40
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0126074
┌ Info: Price and cut time (b-and-b)
└   t = 0.1749787
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 40
│   lb = 1.1440083301212471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 22
└   length(nodes) = 45
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1152
└   sum(fire_plans.plans_per_fire) = 587
┌ Info: Time check
└   time() - start_time = 4.5959999561309814
┌ Info: Exploring node
└   branch_and_bound_node.ix = 41
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0121947
┌ Info: Price and cut time (b-and-b)
└   t = 0.1742607
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 41
│   lb = 1.1443277432577144
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 23
└   length(nodes) = 47
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1166
└   sum(fire_plans.plans_per_fire) = 608
┌ Info: Time check
└   time() - start_time = 4.775000095367432
┌ Info: Exploring node
└   branch_and_bound_node.ix = 14
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.009951
┌ Info: Price and cut time (b-and-b)
└   t = 0.1400751
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 14
│   lb = 1.1443277432577144
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 24
└   length(nodes) = 49
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1201
└   sum(fire_plans.plans_per_fire) = 631
┌ Info: Time check
└   time() - start_time = 4.941999912261963
┌ Info: Exploring node
└   branch_and_bound_node.ix = 15
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100813
┌ Info: Price and cut time (b-and-b)
└   t = 0.318527
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
[ Info: Full time limit reached
