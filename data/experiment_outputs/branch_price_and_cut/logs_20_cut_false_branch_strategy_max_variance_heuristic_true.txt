[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 26.51799988746643
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0082231
┌ Info: Price and cut time (b-and-b)
└   t = 3.2105097
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   2  17  2  0  0
│     0   0   0  4  4  4  6  6  6   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  7  8  7  9  9  9  12   1  1  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: Price and cut time (heuristic)
└   t = 0.3889145
┌ Info: found sol
│   t = 0.2252956
│   obj = 2.969471366216199
└   obj_bound = 2.9694713662161987
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  5  5  5   7   7   7   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  8  9  8  10  10  10  13   2  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: Price and cut time (heuristic)
└   t = 1.2553987
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0014368
│   obj = 2.819759146024125
└   obj_bound = 2.8197591460241247
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  6   6  6   8   8   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  9  10  9  11  11  11  14   3  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: Price and cut time (heuristic)
└   t = 0.7801616
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.0840943
│   obj = 2.813706692874152
└   obj_bound = 2.813706692874152
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   5  20  5  3  3
│      3   3   3   7   7   7   9   9   9   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  10  11  10  12  12  12  15   4  4  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: Price and cut time (heuristic)
└   t = 0.6617201
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.4618123
│   obj = 2.8066302704480677
└   obj_bound = 2.8066302704480677
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  21  6  4  4
│      4   4   4   8   8   8  10  10  10   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4  11  12  11  13  13  13  16   5  5  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: Price and cut time (heuristic)
└   t = 0.3289095
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 4.3522886
│   obj = 2.8066302704480677
└   obj_bound = 2.8066302704480677
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5   7  22  7  5  5
│      5   5   5   9   9   9  11  11  11   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     11  23  25  10   5   5   5   5   5   5   5  6  5  5
│      5   5   5  12  13  12  14  14  14  17   6  6  5  5
└     11   5   6   5   6   5   5   5   5   7   5  6  5  5
┌ Info: Price and cut time (heuristic)
└   t = 0.3034078
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.2723591
│   obj = 2.806630270448068
└   obj_bound = 2.806630270448068
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.8066302704480677
┌ Info: current bounds
│   node_ix = 1
│   lb = 2.670914114050459
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2190
└   sum(fire_plans.plans_per_fire) = 678
┌ Info: Time check
└   time() - start_time = 46.758999824523926
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0205505
┌ Info: Price and cut time (b-and-b)
└   t = 0.9100283
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 2
│   lb = 2.670914114050459
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 5
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2314
└   sum(fire_plans.plans_per_fire) = 730
┌ Info: Time check
└   time() - start_time = 47.7039999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.019542
┌ Info: Price and cut time (b-and-b)
└   t = 1.0728643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 3
│   lb = 2.6716795740827624
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 7
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2448
└   sum(fire_plans.plans_per_fire) = 794
┌ Info: Time check
└   time() - start_time = 48.811999797821045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 4
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215118
┌ Info: Price and cut time (b-and-b)
└   t = 0.6377633
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 4
│   lb = 2.6716795740827624
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 4
└   length(nodes) = 9
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2545
└   sum(fire_plans.plans_per_fire) = 828
┌ Info: Time check
└   time() - start_time = 49.48399996757507
┌ Info: Exploring node
└   branch_and_bound_node.ix = 5
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0177857
┌ Info: Price and cut time (b-and-b)
└   t = 0.6420166
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 5
│   lb = 2.671713562875981
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 5
└   length(nodes) = 11
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2753
└   sum(fire_plans.plans_per_fire) = 872
┌ Info: Time check
└   time() - start_time = 50.169999837875366
┌ Info: Exploring node
└   branch_and_bound_node.ix = 10
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0193762
┌ Info: Price and cut time (b-and-b)
└   t = 0.4604642
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 10
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   2  17  2  0  0
│     0   0   0  5  6  6  7   5   4   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  6  6  5  9  11  12  12   0  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4194775
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.122819
│   obj = 2.8066302704480677
└   obj_bound = 2.8066302704480677
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  6  7  7   8   6   5   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  6  10  12  13  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0744797
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6720261
│   obj = 2.8044309313990206
└   obj_bound = 2.8044285105531226
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   4  19  4  2  2
│      2   2   2  7  8  8   9   7   6   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  22  7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  7  11  13  14  14   2  3  2  2
└      8   2   3  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4163948
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0399429
│   obj = 2.8044309313990206
└   obj_bound = 2.804428614291109
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3  3  3  3   3   3   3   5  20  5  3  3
│      3   3   3  8  9  9  10   8   7   3   3  3  3  3
│     12   5   3  3  3  3   3   3   3   3   3  3  3  3
│      9  21  23  8  3  3   3   3   3   3   3  4  3  3
│      3   3   3  9  9  8  12  14  15  15   3  4  3  3
└      9   3   4  3  4  3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8414975
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.0447223
│   obj = 2.8044309313990206
└   obj_bound = 2.8044309313990206
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.8044309313990206
┌ Info: current bounds
│   node_ix = 10
│   lb = 2.671713562875981
└   ub = 2.8044309313990206
┌ Info: number of nodes
│   node_explored_count = 6
└   length(nodes) = 13
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3502
└   sum(fire_plans.plans_per_fire) = 1134
┌ Info: Time check
└   time() - start_time = 57.94099998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 11
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262488
┌ Info: Price and cut time (b-and-b)
└   t = 0.9388178
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 11
│   lb = 2.671720360343676
└   ub = 2.8044309313990206
┌ Info: number of nodes
│   node_explored_count = 7
└   length(nodes) = 15
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3797
└   sum(fire_plans.plans_per_fire) = 1189
┌ Info: Time check
└   time() - start_time = 58.919999837875366
┌ Info: Exploring node
└   branch_and_bound_node.ix = 12
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025953
┌ Info: Price and cut time (b-and-b)
└   t = 0.4756328
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 12
│   lb = 2.671720360343676
└   ub = 2.8044309313990206
┌ Info: number of nodes
│   node_explored_count = 8
└   length(nodes) = 17
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3926
└   sum(fire_plans.plans_per_fire) = 1209
┌ Info: Time check
└   time() - start_time = 59.43299984931946
┌ Info: Exploring node
└   branch_and_bound_node.ix = 13
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0171956
┌ Info: Price and cut time (b-and-b)
└   t = 0.8557013
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 13
│   lb = 2.671727710899804
└   ub = 2.8044309313990206
┌ Info: number of nodes
│   node_explored_count = 9
└   length(nodes) = 19
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4169
└   sum(fire_plans.plans_per_fire) = 1247
┌ Info: Time check
└   time() - start_time = 60.319000005722046
┌ Info: Exploring node
└   branch_and_bound_node.ix = 16
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.039916
┌ Info: Price and cut time (b-and-b)
└   t = 1.2697592
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 16
│   lb = 2.671727710899804
└   ub = 2.8044309313990206
┌ Info: number of nodes
│   node_explored_count = 10
└   length(nodes) = 21
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4367
└   sum(fire_plans.plans_per_fire) = 1292
┌ Info: Time check
└   time() - start_time = 61.64100003242493
┌ Info: Exploring node
└   branch_and_bound_node.ix = 17
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0191175
┌ Info: Price and cut time (b-and-b)
└   t = 1.2606906
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 17
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  8  6  6   3   4   4   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  4  6  5  12  11  11  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6955976
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2458455
│   obj = 2.8036815660345793
└   obj_bound = 2.8036815660345793
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  9  7  7   4   5   5   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  5  7  6  13  12  12  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.423232
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.8119788
│   obj = 2.7850923634776565
└   obj_bound = 2.7850923634776565
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   4  19  4  2  2
│      2   2   2  10  8  8   5   6   6   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  20  22   7  2  2   2   2   2   2   2  3  2  2
│      2   2   2   6  8  7  14  13  13  14   2  3  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6595596
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7804391
│   obj = 2.785092363477657
└   obj_bound = 2.785092363477657
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3  3   3   3   3   5  20  5  3  3
│      3   3   3  11  9  9   6   7   7   3   3  3  3  3
│     12   5   3   3  3  3   3   3   3   3   3  3  3  3
│      9  21  23   8  3  3   3   3   3   3   3  4  3  3
│      3   3   3   7  9  8  15  14  14  15   3  4  3  3
└      9   3   4   3  4  3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6504576
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3789669
│   obj = 2.7850923634776565
└   obj_bound = 2.7850923634776565
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7850923634776565
┌ Info: current bounds
│   node_ix = 17
│   lb = 2.6720423567094698
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 11
└   length(nodes) = 23
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4998
└   sum(fire_plans.plans_per_fire) = 1624
┌ Info: Time check
└   time() - start_time = 71.18999981880188
┌ Info: Exploring node
└   branch_and_bound_node.ix = 6
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0173614
┌ Info: Price and cut time (b-and-b)
└   t = 0.6705167
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 6
│   lb = 2.6720423567094698
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 12
└   length(nodes) = 25
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5151
└   sum(fire_plans.plans_per_fire) = 1667
┌ Info: Time check
└   time() - start_time = 71.88800001144409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 7
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0170766
┌ Info: Price and cut time (b-and-b)
└   t = 0.8329295
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 7
│   lb = 2.6720788260539377
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 13
└   length(nodes) = 27
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5355
└   sum(fire_plans.plans_per_fire) = 1715
┌ Info: Time check
└   time() - start_time = 72.74899983406067
┌ Info: Exploring node
└   branch_and_bound_node.ix = 24
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0179231
┌ Info: Price and cut time (b-and-b)
└   t = 0.576221
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 24
│   lb = 2.6720788260539377
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 14
└   length(nodes) = 29
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5525
└   sum(fire_plans.plans_per_fire) = 1741
┌ Info: Time check
└   time() - start_time = 73.35500001907349
┌ Info: Exploring node
└   branch_and_bound_node.ix = 25
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0174986
┌ Info: Price and cut time (b-and-b)
└   t = 0.8862717
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 25
│   lb = 2.6722013808204226
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 15
└   length(nodes) = 31
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5725
└   sum(fire_plans.plans_per_fire) = 1791
┌ Info: Time check
└   time() - start_time = 74.26999998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 28
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225152
┌ Info: Price and cut time (b-and-b)
└   t = 0.5487527
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 28
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   2  17  2  0  0
│     0   0   0  6  3  4  6  6  6   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  5  9  7  9  9  9  12   0  1  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3977495
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1314228
│   obj = 2.7850923634776565
└   obj_bound = 2.7848334303023132
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   3  18  3  1  1
│      1   1   1  7   4  5   7   7   7   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  8  10  10  10  13   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0857308
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2948094
│   obj = 2.7850923634776565
└   obj_bound = 2.78482186574603
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  8   5  6   8   8   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  9  11  11  11  14   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8075513
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3805559
│   obj = 2.7850923634776565
└   obj_bound = 2.7850923634776565
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7850923634776565
┌ Info: current bounds
│   node_ix = 28
│   lb = 2.6722013808204226
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 16
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6299
└   sum(fire_plans.plans_per_fire) = 2025
┌ Info: Time check
└   time() - start_time = 78.41799998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 29
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0181173
┌ Info: Price and cut time (b-and-b)
└   t = 0.6413118
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 29
│   lb = 2.6722179785664157
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 17
└   length(nodes) = 35
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6475
└   sum(fire_plans.plans_per_fire) = 2065
┌ Info: Time check
└   time() - start_time = 79.0920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 32
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228124
┌ Info: Price and cut time (b-and-b)
└   t = 0.9611062
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 32
│   lb = 2.6722179785664157
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 18
└   length(nodes) = 37
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6569
└   sum(fire_plans.plans_per_fire) = 2099
┌ Info: Time check
└   time() - start_time = 80.09099984169006
┌ Info: Exploring node
└   branch_and_bound_node.ix = 33
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241765
┌ Info: Price and cut time (b-and-b)
└   t = 1.4049287
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 33
│   lb = 2.6722383966207226
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 19
└   length(nodes) = 39
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6838
└   sum(fire_plans.plans_per_fire) = 2167
┌ Info: Time check
└   time() - start_time = 81.53199982643127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 18
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0198677
┌ Info: Price and cut time (b-and-b)
└   t = 1.0378677
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 18
│   lb = 2.6722383966207226
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 20
└   length(nodes) = 41
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6913
└   sum(fire_plans.plans_per_fire) = 2206
┌ Info: Time check
└   time() - start_time = 82.6029999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 19
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0206634
┌ Info: Price and cut time (b-and-b)
└   t = 1.2300205
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 19
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   2  17  2  0  0
│     0   0   0   0  6  6  9   5   4   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  11  6  5  6  11  11  12   0  1  0  0
└     6   0   1   0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4120325
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1187379
│   obj = 2.785092363477657
└   obj_bound = 2.785092363477657
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   3  18  3  1  1
│      1   1   1   1  7  7  10   6   5   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  7  6   7  12  12  13   1  2  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2802747
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4321809
│   obj = 2.785092363477657
└   obj_bound = 2.7848329097505964
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   4  19  4  2  2
│      2   2   2   2  8  8  11   7   6   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  20  22   7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  7   8  13  13  14   2  3  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0172004
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9801333
│   obj = 2.785092363477657
└   obj_bound = 2.785092363477657
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.785092363477657
┌ Info: current bounds
│   node_ix = 19
│   lb = 2.6722643572444382
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 21
└   length(nodes) = 43
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7545
└   sum(fire_plans.plans_per_fire) = 2485
┌ Info: Time check
└   time() - start_time = 88.54900002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 20
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272983
┌ Info: Price and cut time (b-and-b)
└   t = 0.9422662
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 20
│   lb = 2.6722643572444382
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 22
└   length(nodes) = 45
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7624
└   sum(fire_plans.plans_per_fire) = 2513
┌ Info: Time check
└   time() - start_time = 89.53099989891052
┌ Info: Exploring node
└   branch_and_bound_node.ix = 21
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228405
┌ Info: Price and cut time (b-and-b)
└   t = 0.8578069
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 21
│   lb = 2.672266749638839
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 23
└   length(nodes) = 47
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7743
└   sum(fire_plans.plans_per_fire) = 2543
┌ Info: Time check
└   time() - start_time = 90.42699980735779
┌ Info: Exploring node
└   branch_and_bound_node.ix = 8
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0211058
┌ Info: Price and cut time (b-and-b)
└   t = 1.0130416
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 8
│   lb = 2.672266749638839
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 24
└   length(nodes) = 49
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7894
└   sum(fire_plans.plans_per_fire) = 2581
┌ Info: Time check
└   time() - start_time = 91.47099995613098
┌ Info: Exploring node
└   branch_and_bound_node.ix = 9
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0182624
┌ Info: Price and cut time (b-and-b)
└   t = 0.8452143
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 9
│   lb = 2.672407286181927
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 25
└   length(nodes) = 51
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8023
└   sum(fire_plans.plans_per_fire) = 2622
┌ Info: Time check
└   time() - start_time = 92.36099982261658
┌ Info: Exploring node
└   branch_and_bound_node.ix = 30
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0210272
┌ Info: Price and cut time (b-and-b)
└   t = 0.8861339
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 30
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0   0  0   2  17  2  0  0
│     0   0   0   1   2  5  7  10  9   0   0  0  0  0
│     9   2   0   0   0  0  0   0  0   0   0  0  0  0
│     6  18  20   5   0  0  0   0  0   0   0  1  0  0
│     0   0   0  10  11  6  9   6  7  12   0  1  0  0
└     6   0   1   0   1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3559292
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1625734
│   obj = 2.785092363477657
└   obj_bound = 2.78487191129894
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   3  18  3  1  1
│      1   1   1   2   3  6   8  11  10   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  11  12  7  10   7   8  13   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4870753
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5358615
│   obj = 2.7850923634776565
└   obj_bound = 2.7849650155833126
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  19  4  2  2
│      2   2   2   3   4  7   9  12  11   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  12  13  8  11   8   9  14   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6189769
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1836061
│   obj = 2.7850923634776565
└   obj_bound = 2.7850923634776565
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.785092363477657
┌ Info: current bounds
│   node_ix = 30
│   lb = 2.672407286181927
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 26
└   length(nodes) = 53
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8659
└   sum(fire_plans.plans_per_fire) = 2873
┌ Info: Time check
└   time() - start_time = 98.07200002670288
┌ Info: Exploring node
└   branch_and_bound_node.ix = 31
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255909
┌ Info: Price and cut time (b-and-b)
└   t = 1.5470065
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 31
│   lb = 2.6724148284833102
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 27
└   length(nodes) = 55
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8863
└   sum(fire_plans.plans_per_fire) = 2943
┌ Info: Time check
└   time() - start_time = 99.65899991989136
┌ Info: Exploring node
└   branch_and_bound_node.ix = 26
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0185492
┌ Info: Price and cut time (b-and-b)
└   t = 0.679839
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 26
│   lb = 2.6724148284833102
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 28
└   length(nodes) = 57
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9011
└   sum(fire_plans.plans_per_fire) = 2974
┌ Info: Time check
└   time() - start_time = 100.36999988555908
┌ Info: Exploring node
└   branch_and_bound_node.ix = 27
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0171893
┌ Info: Price and cut time (b-and-b)
└   t = 0.6615449
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 27
│   lb = 2.6724189230484447
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 29
└   length(nodes) = 59
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9192
└   sum(fire_plans.plans_per_fire) = 3010
┌ Info: Time check
└   time() - start_time = 101.0609998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 58
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0211167
┌ Info: Price and cut time (b-and-b)
└   t = 1.1031865
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 58
│   lb = 2.6724189230484447
└   ub = 2.7850923634776565
┌ Info: number of nodes
│   node_explored_count = 30
└   length(nodes) = 61
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9287
└   sum(fire_plans.plans_per_fire) = 3049
┌ Info: Time check
└   time() - start_time = 102.19700002670288
┌ Info: Exploring node
└   branch_and_bound_node.ix = 59
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0214582
┌ Info: Price and cut time (b-and-b)
└   t = 0.9975125
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 59
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   2  17  2  0  0
│     0   0   0  2   1   1  9  9  8   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  9  11  10  6  6  7  12   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3264372
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0662716
│   obj = 2.785092363477657
└   obj_bound = 2.7848174202557745
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1   3  18  3  1  1
│      1   1   1   3   2   2  10  10  9   1   1  1  1  1
│     10   3   1   1   1   1   1   1  1   1   1  1  1  1
│      7  19  21   6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  10  12  11   7   7  8  13   1  2  1  1
└      7   1   2   1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.035487
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4383388
│   obj = 2.7850923634776565
└   obj_bound = 2.7848425510153483
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  4  2  2
│      2   2   2   4   3   3  11  11  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  11  13  12   8   8   9  14   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8916528
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.416232
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   5  20  5  3  3
│      3   3   3   5   4   4  12  12  11   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  12  14  13   9   9  10  15   3  4  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5098498
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3571113
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  21  6  4  4
│      4   4   4   6   5   5  13  13  12   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4  13  15  14  10  10  11  16   4  5  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6106682
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.7218437
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7847580720876093
┌ Info: current bounds
│   node_ix = 59
│   lb = 2.672521422292056
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 31
└   length(nodes) = 63
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10158
└   sum(fire_plans.plans_per_fire) = 3368
┌ Info: Time check
└   time() - start_time = 111.39699983596802
┌ Info: Exploring node
└   branch_and_bound_node.ix = 48
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0204089
┌ Info: Price and cut time (b-and-b)
└   t = 0.7489617
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 48
│   lb = 2.672521422292056
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 32
└   length(nodes) = 65
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10329
└   sum(fire_plans.plans_per_fire) = 3410
┌ Info: Time check
└   time() - start_time = 112.17999982833862
┌ Info: Exploring node
└   branch_and_bound_node.ix = 49
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229158
┌ Info: Price and cut time (b-and-b)
└   t = 0.793179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 49
│   lb = 2.6725429870002144
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 33
└   length(nodes) = 67
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10391
└   sum(fire_plans.plans_per_fire) = 3447
┌ Info: Time check
└   time() - start_time = 113.00799989700317
┌ Info: Exploring node
└   branch_and_bound_node.ix = 56
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024828
┌ Info: Price and cut time (b-and-b)
└   t = 0.6452141
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 56
│   lb = 2.6725429870002144
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 34
└   length(nodes) = 69
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10504
└   sum(fire_plans.plans_per_fire) = 3473
┌ Info: Time check
└   time() - start_time = 113.68899989128113
┌ Info: Exploring node
└   branch_and_bound_node.ix = 57
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0190416
┌ Info: Price and cut time (b-and-b)
└   t = 1.0768637
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 57
│   lb = 2.6726033071047715
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 35
└   length(nodes) = 71
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10675
└   sum(fire_plans.plans_per_fire) = 3521
┌ Info: Time check
└   time() - start_time = 114.79699993133545
┌ Info: Exploring node
└   branch_and_bound_node.ix = 66
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0207842
┌ Info: Price and cut time (b-and-b)
└   t = 0.7519156
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 66
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0  0   2  17  2  0  0
│     0   0   0  5  6  3   5   6  6   0   0  0  0  0
│     9   2   0  0  0  0   0   0  0   0   0  0  0  0
│     6  18  20  5  0  0   0   0  0   0   0  1  0  0
│     0   0   0  6  6  8  10  10  9  12   0  1  0  0
└     6   0   1  0  1  0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.35028
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1021891
│   obj = 2.7847580720876097
└   obj_bound = 2.7844930589302863
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  6  7  4   6   7   7   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  9  11  11  10  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9631939
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3021302
│   obj = 2.7847580720876097
└   obj_bound = 2.784484985722276
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  7  8   5   7   8   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  10  12  12  11  14   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7554762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.9685708
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7847580720876097
┌ Info: current bounds
│   node_ix = 66
│   lb = 2.6726033071047715
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 36
└   length(nodes) = 73
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11285
└   sum(fire_plans.plans_per_fire) = 3747
┌ Info: Time check
└   time() - start_time = 120.47899985313416
┌ Info: Exploring node
└   branch_and_bound_node.ix = 67
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277544
┌ Info: Price and cut time (b-and-b)
└   t = 0.7614848
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 67
│   lb = 2.6726033071047715
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 37
└   length(nodes) = 75
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11456
└   sum(fire_plans.plans_per_fire) = 3775
┌ Info: Time check
└   time() - start_time = 121.28099989891052
┌ Info: Exploring node
└   branch_and_bound_node.ix = 72
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.021048
┌ Info: Price and cut time (b-and-b)
└   t = 1.0563599
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 72
│   lb = 2.6726033071047715
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 38
└   length(nodes) = 77
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11611
└   sum(fire_plans.plans_per_fire) = 3827
┌ Info: Time check
└   time() - start_time = 122.36999988555908
┌ Info: Exploring node
└   branch_and_bound_node.ix = 73
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0216463
┌ Info: Price and cut time (b-and-b)
└   t = 1.3886405
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 73
│   lb = 2.672671809228302
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 39
└   length(nodes) = 79
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11778
└   sum(fire_plans.plans_per_fire) = 3891
┌ Info: Time check
└   time() - start_time = 123.79299998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 14
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0212338
┌ Info: Price and cut time (b-and-b)
└   t = 1.0456734
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 14
│   lb = 2.672671809228302
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 40
└   length(nodes) = 81
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11946
└   sum(fire_plans.plans_per_fire) = 3934
┌ Info: Time check
└   time() - start_time = 124.87399983406067
┌ Info: Exploring node
└   branch_and_bound_node.ix = 15
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0205331
┌ Info: Price and cut time (b-and-b)
└   t = 1.0113994
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 15
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  8  9  7   3   3   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  3  3  5  13  13  13  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3706036
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1235573
│   obj = 2.7847580720876097
└   obj_bound = 2.7845110336008894
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   3  18  3  1  1
│      1   1   1  9  10  8   4   4   4   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  4   4  6  14  14  14  13   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1770241
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5898393
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  10  11  9   5   5   5   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   5   5  7  15  15  15  14   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8848749
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.432057
│   obj = 2.7847580720876093
└   obj_bound = 2.7847580720876093
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7847580720876097
┌ Info: current bounds
│   node_ix = 15
│   lb = 2.67270560397749
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 41
└   length(nodes) = 83
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12423
└   sum(fire_plans.plans_per_fire) = 4205
┌ Info: Time check
└   time() - start_time = 130.94899988174438
┌ Info: Exploring node
└   branch_and_bound_node.ix = 34
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264609
┌ Info: Price and cut time (b-and-b)
└   t = 0.7967964
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 34
│   lb = 2.67270560397749
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 42
└   length(nodes) = 85
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12486
└   sum(fire_plans.plans_per_fire) = 4234
┌ Info: Time check
└   time() - start_time = 131.7849998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 35
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0218746
┌ Info: Price and cut time (b-and-b)
└   t = 1.0877411
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 35
│   lb = 2.6727852707427147
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 43
└   length(nodes) = 87
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12668
└   sum(fire_plans.plans_per_fire) = 4289
┌ Info: Time check
└   time() - start_time = 132.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 50
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217701
┌ Info: Price and cut time (b-and-b)
└   t = 0.8090584
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 50
│   lb = 2.6727852707427147
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 44
└   length(nodes) = 89
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12811
└   sum(fire_plans.plans_per_fire) = 4343
┌ Info: Time check
└   time() - start_time = 133.7519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 51
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0430688
┌ Info: Price and cut time (b-and-b)
└   t = 0.7428452
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 51
│   lb = 2.6728127754089916
└   ub = 2.7847580720876093
┌ Info: number of nodes
│   node_explored_count = 45
└   length(nodes) = 91
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12921
└   sum(fire_plans.plans_per_fire) = 4377
┌ Info: Time check
└   time() - start_time = 134.5479998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 90
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221184
┌ Info: Price and cut time (b-and-b)
└   t = 0.4934841
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 90
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   2  17  2  0  0
│     0   0   0  6  6  3  6  7   3   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  5  6  8  9  9  12  12   0  1  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3503329
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1055494
│   obj = 2.7847580720876093
└   obj_bound = 2.7844851176527516
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  7  7  4   7   8   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  9  10  10  13  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2566467
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3738176
│   obj = 2.7847112280051767
└   obj_bound = 2.7847112280051762
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  8  8   5   8   9   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  10  11  11  14  14   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5786395
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4826347
│   obj = 2.7847112280051767
└   obj_bound = 2.7847112280051767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3  3  3   3   3   3   3   5  20  5  3  3
│      3   3   3  9  9   6   9  10   6   3   3  3  3  3
│     12   5   3  3  3   3   3   3   3   3   3  3  3  3
│      9  21  23  8  3   3   3   3   3   3   3  4  3  3
│      3   3   3  8  9  11  12  12  15  15   3  4  3  3
└      9   3   4  3  4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7009241
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.8812882
│   obj = 2.7813299840771766
└   obj_bound = 2.7813299840771766
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  21  6  4  4
│      4   4   4  10  10   7  10  11   7   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4   9  10  12  13  13  16  16   4  5  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5435883
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5564541
│   obj = 2.781329984077176
└   obj_bound = 2.781329984077176
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5   7  22  7  5  5
│      5   5   5  11  11   8  11  12   8   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     11  23  25  10   5   5   5   5   5   5   5  6  5  5
│      5   5   5  10  11  13  14  14  17  17   5  6  5  5
└     11   5   6   5   6   5   5   5   5   7   5  6  5  5
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.501632
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3883281
│   obj = 2.7813299840771766
└   obj_bound = 2.7813299840771766
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7813299840771766
┌ Info: current bounds
│   node_ix = 90
│   lb = 2.6728127754089916
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 46
└   length(nodes) = 93
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13545
└   sum(fire_plans.plans_per_fire) = 4714
┌ Info: Time check
└   time() - start_time = 145.6949999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 91
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.020698
┌ Info: Price and cut time (b-and-b)
└   t = 0.9956271
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 91
│   lb = 2.672876783820665
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 47
└   length(nodes) = 95
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13707
└   sum(fire_plans.plans_per_fire) = 4762
┌ Info: Time check
└   time() - start_time = 146.72299981117249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 92
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254886
┌ Info: Price and cut time (b-and-b)
└   t = 1.1520517
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 92
│   lb = 2.672876783820665
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 48
└   length(nodes) = 97
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13876
└   sum(fire_plans.plans_per_fire) = 4806
┌ Info: Time check
└   time() - start_time = 147.91299986839294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 93
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215653
┌ Info: Price and cut time (b-and-b)
└   t = 1.1675973
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 93
│   lb = 2.672891289746584
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 49
└   length(nodes) = 99
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14053
└   sum(fire_plans.plans_per_fire) = 4851
┌ Info: Time check
└   time() - start_time = 149.11500000953674
┌ Info: Exploring node
└   branch_and_bound_node.ix = 44
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024355
┌ Info: Price and cut time (b-and-b)
└   t = 0.9532848
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 44
│   lb = 2.672891289746584
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 50
└   length(nodes) = 101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14128
└   sum(fire_plans.plans_per_fire) = 4876
┌ Info: Time check
└   time() - start_time = 150.10599994659424
┌ Info: Exploring node
└   branch_and_bound_node.ix = 45
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245571
┌ Info: Price and cut time (b-and-b)
└   t = 1.357059
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 45
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   2  17  2  0  0
│     0   0   0  7  6  7  7   4   3   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  19  6  0  0  0   0   0   0   0  0  0  0
│     0   0   0  3  6  6  9  12  13  12   0  1  0  0
└     6   0   0  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4746277
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2197408
│   obj = 2.7813299840771766
└   obj_bound = 2.781329984077176
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  8  7  8   8   5   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  20  7  1  1   1   1   1   1   1  1  1  1
│      1   1   1  4  7  7  10  13  14  13   1  2  1  1
└      7   1   1  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4912246
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2804273
│   obj = 2.7813299840771766
└   obj_bound = 2.7813299840771766
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   4  19  4  2  2
│      2   2   2  9  8  9   9   6   5   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  21  8  2  2   2   2   2   2   2  2  2  2
│      2   2   2  5  8  8  11  14  15  14   2  3  2  2
└      8   2   2  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6004302
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3931634
│   obj = 2.7813299840771766
└   obj_bound = 2.781329984077176
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7813299840771766
┌ Info: current bounds
│   node_ix = 45
│   lb = 2.6729074959673964
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 51
└   length(nodes) = 103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14791
└   sum(fire_plans.plans_per_fire) = 5168
┌ Info: Time check
└   time() - start_time = 155.3899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 36
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0209962
┌ Info: Price and cut time (b-and-b)
└   t = 0.8290146
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 36
│   lb = 2.6729074959673964
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 52
└   length(nodes) = 105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14867
└   sum(fire_plans.plans_per_fire) = 5199
┌ Info: Time check
└   time() - start_time = 156.25300002098083
┌ Info: Exploring node
└   branch_and_bound_node.ix = 37
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250476
┌ Info: Price and cut time (b-and-b)
└   t = 0.7629554
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 37
│   lb = 2.672927137551936
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 53
└   length(nodes) = 107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14956
└   sum(fire_plans.plans_per_fire) = 5227
┌ Info: Time check
└   time() - start_time = 157.05299997329712
┌ Info: Exploring node
└   branch_and_bound_node.ix = 94
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0191798
┌ Info: Price and cut time (b-and-b)
└   t = 0.9931258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 94
│   lb = 2.672927137551936
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 54
└   length(nodes) = 109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15172
└   sum(fire_plans.plans_per_fire) = 5273
┌ Info: Time check
└   time() - start_time = 158.0789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 95
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220622
┌ Info: Price and cut time (b-and-b)
└   t = 1.0105179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 95
│   lb = 2.6730025706064042
└   ub = 2.7813299840771766
┌ Info: number of nodes
│   node_explored_count = 55
└   length(nodes) = 111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15352
└   sum(fire_plans.plans_per_fire) = 5319
┌ Info: Time check
└   time() - start_time = 159.125
┌ Info: Exploring node
└   branch_and_bound_node.ix = 40
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245707
┌ Info: Price and cut time (b-and-b)
└   t = 1.0909117
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 40
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   2  17  2  0  0
│     0   0   0  5  6  6  9   3   2   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  6  6  5  7  13  14  12   0  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.528901
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1461685
│   obj = 2.7812113637937594
└   obj_bound = 2.7812113637937594
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  6  7  7  10   4   3   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  6   8  14  15  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2282229
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2384638
│   obj = 2.781211363793759
└   obj_bound = 2.780946444052117
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   4  19  4  2  2
│      2   2   2  7  8  8  11   5   4   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  22  7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  7   9  15  16  14   2  3  2  2
└      8   2   3  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9495006
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5505317
│   obj = 2.7812113637937594
└   obj_bound = 2.7812113637937594
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812113637937594
┌ Info: current bounds
│   node_ix = 40
│   lb = 2.6730025706064042
└   ub = 2.7812113637937594
┌ Info: number of nodes
│   node_explored_count = 56
└   length(nodes) = 113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16026
└   sum(fire_plans.plans_per_fire) = 5580
┌ Info: Time check
└   time() - start_time = 164.32999992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 41
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024391
┌ Info: Price and cut time (b-and-b)
└   t = 1.2349132
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 41
│   lb = 2.673030027091805
└   ub = 2.7812113637937594
┌ Info: number of nodes
│   node_explored_count = 57
└   length(nodes) = 115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16252
└   sum(fire_plans.plans_per_fire) = 5639
┌ Info: Time check
└   time() - start_time = 165.60399985313416
┌ Info: Exploring node
└   branch_and_bound_node.ix = 60
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264325
┌ Info: Price and cut time (b-and-b)
└   t = 1.1766204
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 60
│   lb = 2.673030027091805
└   ub = 2.7812113637937594
┌ Info: number of nodes
│   node_explored_count = 58
└   length(nodes) = 117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16481
└   sum(fire_plans.plans_per_fire) = 5684
┌ Info: Time check
└   time() - start_time = 166.82099986076355
┌ Info: Exploring node
└   branch_and_bound_node.ix = 61
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0227808
┌ Info: Price and cut time (b-and-b)
└   t = 0.672101
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 61
│   lb = 2.6730634255021557
└   ub = 2.7812113637937594
┌ Info: number of nodes
│   node_explored_count = 59
└   length(nodes) = 119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16541
└   sum(fire_plans.plans_per_fire) = 5708
┌ Info: Time check
└   time() - start_time = 167.52999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 46
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026665
┌ Info: Price and cut time (b-and-b)
└   t = 1.3131563
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 46
│   lb = 2.6730634255021557
└   ub = 2.7812113637937594
┌ Info: number of nodes
│   node_explored_count = 60
└   length(nodes) = 121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16701
└   sum(fire_plans.plans_per_fire) = 5745
┌ Info: Time check
└   time() - start_time = 168.88299989700317
┌ Info: Exploring node
└   branch_and_bound_node.ix = 47
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0213904
┌ Info: Price and cut time (b-and-b)
└   t = 1.3855461
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 47
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  5  6  6  6   4   5   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  6  6  5  9  12  11  13   1  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4049735
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1659732
│   obj = 2.7812113637937594
└   obj_bound = 2.7812113637937594
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  6  7  7   7   5   6   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  6  10  13  12  14   2  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3057325
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3875168
│   obj = 2.7812096503655153
└   obj_bound = 2.780934415218759
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   3  19  5  2  2
│      2   2   2  7  8  8   8   6   7   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  22  7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  7  11  14  13  15   3  3  2  2
└      8   2   3  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2573381
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3547784
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3  3  3  3   3   3   3   4  20  6  3  3
│      3   3   3  8  9  9   9   7   8   3   3  3  3  3
│     12   5   3  3  3  3   3   3   3   3   3  3  3  3
│      9  21  23  8  3  3   3   3   3   3   3  4  3  3
│      3   3   3  9  9  8  12  15  14  16   4  4  3  3
└      9   3   4  3  4  3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6424056
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8403569
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655144
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 47
│   lb = 2.6730845350071344
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 61
└   length(nodes) = 123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17439
└   sum(fire_plans.plans_per_fire) = 6024
┌ Info: Time check
└   time() - start_time = 177.29099988937378
┌ Info: Exploring node
└   branch_and_bound_node.ix = 104
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0193802
┌ Info: Price and cut time (b-and-b)
└   t = 0.9484774
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 104
│   lb = 2.6730845350071344
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 62
└   length(nodes) = 125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17575
└   sum(fire_plans.plans_per_fire) = 6054
┌ Info: Time check
└   time() - start_time = 178.2739999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 105
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0243452
┌ Info: Price and cut time (b-and-b)
└   t = 0.9504919
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 105
│   lb = 2.6731423624163337
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 63
└   length(nodes) = 127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17716
└   sum(fire_plans.plans_per_fire) = 6095
┌ Info: Time check
└   time() - start_time = 179.26199984550476
┌ Info: Exploring node
└   branch_and_bound_node.ix = 62
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0209565
┌ Info: Price and cut time (b-and-b)
└   t = 0.7276762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 62
│   lb = 2.6731423624163337
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 64
└   length(nodes) = 129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17823
└   sum(fire_plans.plans_per_fire) = 6127
┌ Info: Time check
└   time() - start_time = 180.02199983596802
┌ Info: Exploring node
└   branch_and_bound_node.ix = 63
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0226038
┌ Info: Price and cut time (b-and-b)
└   t = 0.9551169
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 63
│   lb = 2.6731640629304945
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 65
└   length(nodes) = 131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17950
└   sum(fire_plans.plans_per_fire) = 6168
┌ Info: Time check
└   time() - start_time = 181.01399993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 22
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236419
┌ Info: Price and cut time (b-and-b)
└   t = 0.8026086
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 22
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  6  6  6   3   4   5   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  5  6  5  12  11  10  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3416041
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1060453
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  7  7  7   4   5   6   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  6  13  12  11  13   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.294904
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5316014
│   obj = 2.7812096503655153
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   4  19  4  2  2
│      2   2   2  8  8  8   5   6   7   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  22  7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  7  14  13  12  14   2  3  2  2
└      8   2   3  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7395554
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1437124
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 22
│   lb = 2.6731640629304945
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 66
└   length(nodes) = 133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18675
└   sum(fire_plans.plans_per_fire) = 6423
┌ Info: Time check
└   time() - start_time = 186.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 23
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265668
┌ Info: Price and cut time (b-and-b)
└   t = 0.8614943
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 23
│   lb = 2.673177383691963
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 67
└   length(nodes) = 135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18895
└   sum(fire_plans.plans_per_fire) = 6459
┌ Info: Time check
└   time() - start_time = 187.40499997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 54
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234597
┌ Info: Price and cut time (b-and-b)
└   t = 0.9503604
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 54
│   lb = 2.673177383691963
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 68
└   length(nodes) = 137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19050
└   sum(fire_plans.plans_per_fire) = 6494
┌ Info: Time check
└   time() - start_time = 188.39199995994568
┌ Info: Exploring node
└   branch_and_bound_node.ix = 55
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237145
┌ Info: Price and cut time (b-and-b)
└   t = 0.9482963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 55
│   lb = 2.6732631255876576
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 69
└   length(nodes) = 139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19212
└   sum(fire_plans.plans_per_fire) = 6538
┌ Info: Time check
└   time() - start_time = 189.37800002098083
┌ Info: Exploring node
└   branch_and_bound_node.ix = 118
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228607
┌ Info: Price and cut time (b-and-b)
└   t = 0.7625963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 118
│   lb = 2.6732631255876576
└   ub = 2.7812096503655153
┌ Info: number of nodes
│   node_explored_count = 70
└   length(nodes) = 141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19360
└   sum(fire_plans.plans_per_fire) = 6572
┌ Info: Time check
└   time() - start_time = 190.1769998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 119
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0227273
┌ Info: Price and cut time (b-and-b)
└   t = 0.9232395
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 119
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0   3  17  2  0  0
│     0   0   0   0   0  6  9  9  6   0   0  0  0  0
│     9   2   0   0   0  0  0  0  0   0   0  0  0  0
│     6  18  20   3   0  0  0  0  0   0   0  1  0  0
│     0   0   0  12  12  5  6  6  9  11   0  1  0  0
└     6   0   1   0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5163818
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1154846
│   obj = 2.781209650365515
└   obj_bound = 2.780934972293019
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   4  18  3  1  1
│      1   1   1   1   1  7  10  10   7   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   4   1  1   1   1   1   1   1  2  1  1
│      1   1   1  13  13  6   7   7  10  12   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1398917
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0937818
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   5  19  4  2  2
│      2   2   2   2   2  8  11  11   8   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   5   2  2   2   2   2   2   2  3  2  2
│      2   2   2  14  14  7   8   8  11  13   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7288737
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2774486
│   obj = 2.781209650365515
└   obj_bound = 2.7809643774772024
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.781209650365515
┌ Info: current bounds
│   node_ix = 119
│   lb = 2.673284014159883
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 71
└   length(nodes) = 143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20000
└   sum(fire_plans.plans_per_fire) = 6801
┌ Info: Time check
└   time() - start_time = 196.51399993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 132
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0524398
┌ Info: Price and cut time (b-and-b)
└   t = 0.9194267
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 132
│   lb = 2.673284014159883
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 72
└   length(nodes) = 145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20118
└   sum(fire_plans.plans_per_fire) = 6829
┌ Info: Time check
└   time() - start_time = 197.52199983596802
┌ Info: Exploring node
└   branch_and_bound_node.ix = 133
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271444
┌ Info: Price and cut time (b-and-b)
└   t = 1.408002
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 133
│   lb = 2.673308104965441
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 73
└   length(nodes) = 147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20341
└   sum(fire_plans.plans_per_fire) = 6891
┌ Info: Time check
└   time() - start_time = 198.97199988365173
┌ Info: Exploring node
└   branch_and_bound_node.ix = 80
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0227056
┌ Info: Price and cut time (b-and-b)
└   t = 0.7580952
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 80
│   lb = 2.673308104965441
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 74
└   length(nodes) = 149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20411
└   sum(fire_plans.plans_per_fire) = 6915
┌ Info: Time check
└   time() - start_time = 199.76600003242493
┌ Info: Exploring node
└   branch_and_bound_node.ix = 81
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215946
┌ Info: Price and cut time (b-and-b)
└   t = 1.1301239
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 81
│   lb = 2.673323402539142
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 75
└   length(nodes) = 151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20580
└   sum(fire_plans.plans_per_fire) = 6955
┌ Info: Time check
└   time() - start_time = 200.92999982833862
┌ Info: Exploring node
└   branch_and_bound_node.ix = 134
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228017
┌ Info: Price and cut time (b-and-b)
└   t = 0.9924377
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 134
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  9  6  8   3   3   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  2  6  3  13  13  13  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.484128
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1352186
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  10  7  9   4   4   4   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1   3  7  4  14  14  14  13   1  2  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1598427
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4321582
│   obj = 2.7812096503655153
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  11  8  10   5   5   5   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   4  8   5  15  15  15  14   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1734159
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.934285
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 134
│   lb = 2.673323402539142
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 76
└   length(nodes) = 153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21164
└   sum(fire_plans.plans_per_fire) = 7214
┌ Info: Time check
└   time() - start_time = 206.8329999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 135
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0453593
┌ Info: Price and cut time (b-and-b)
└   t = 1.7730379
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 135
│   lb = 2.6733482217008713
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 77
└   length(nodes) = 155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21416
└   sum(fire_plans.plans_per_fire) = 7294
┌ Info: Time check
└   time() - start_time = 208.66899991035461
┌ Info: Exploring node
└   branch_and_bound_node.ix = 42
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029069
┌ Info: Price and cut time (b-and-b)
└   t = 1.1053841
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 42
│   lb = 2.6733482217008713
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 78
└   length(nodes) = 157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21495
└   sum(fire_plans.plans_per_fire) = 7328
┌ Info: Time check
└   time() - start_time = 209.8159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 43
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217609
┌ Info: Price and cut time (b-and-b)
└   t = 1.9777049
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 43
│   lb = 2.67337426930815
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 79
└   length(nodes) = 159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21729
└   sum(fire_plans.plans_per_fire) = 7407
┌ Info: Time check
└   time() - start_time = 211.82999992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 68
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265821
┌ Info: Price and cut time (b-and-b)
└   t = 0.726828
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 68
│   lb = 2.67337426930815
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 80
└   length(nodes) = 161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21830
└   sum(fire_plans.plans_per_fire) = 7427
┌ Info: Time check
└   time() - start_time = 212.59599995613098
┌ Info: Exploring node
└   branch_and_bound_node.ix = 69
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.019889
┌ Info: Price and cut time (b-and-b)
└   t = 1.4201529
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 69
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0  0   2  17  2  0  0
│     0   0   0  5   2  2  9  6  7   0   0  0  0  0
│     9   2   0  0   0  0  0  0  0   0   0  0  0  0
│     6  18  20  5   0  0  0  0  0   0   0  1  0  0
│     0   0   0  6  10  9  6  9  9  12   0  1  0  0
└     6   0   1  0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4506611
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1311878
│   obj = 2.7812096503655153
└   obj_bound = 2.780992373379583
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   3  18  3  1  1
│      1   1   1  6   3   3  10   7   8   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  10   7  10  10  13   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4221652
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3340364
│   obj = 2.781209650365515
└   obj_bound = 2.780945472629851
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  19  4  2  2
│      2   2   2  7   4   4  11   8   9   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  11   8  11  11  14   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7934347
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3612951
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 69
│   lb = 2.67339830226245
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 81
└   length(nodes) = 163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22650
└   sum(fire_plans.plans_per_fire) = 7702
┌ Info: Time check
└   time() - start_time = 218.0590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 112
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314205
┌ Info: Price and cut time (b-and-b)
└   t = 1.1187885
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 112
│   lb = 2.67339830226245
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 82
└   length(nodes) = 165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22734
└   sum(fire_plans.plans_per_fire) = 7743
┌ Info: Time check
└   time() - start_time = 219.22299981117249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 113
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284193
┌ Info: Price and cut time (b-and-b)
└   t = 1.8564334
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 113
│   lb = 2.673465751495597
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 83
└   length(nodes) = 167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22952
└   sum(fire_plans.plans_per_fire) = 7807
┌ Info: Time check
└   time() - start_time = 221.12199997901917
┌ Info: Exploring node
└   branch_and_bound_node.ix = 52
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238644
┌ Info: Price and cut time (b-and-b)
└   t = 1.0924573
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 52
│   lb = 2.673465751495597
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 84
└   length(nodes) = 169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23096
└   sum(fire_plans.plans_per_fire) = 7840
┌ Info: Time check
└   time() - start_time = 222.25300002098083
┌ Info: Exploring node
└   branch_and_bound_node.ix = 53
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314276
┌ Info: Price and cut time (b-and-b)
└   t = 0.944047
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 53
│   lb = 2.67357890174359
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 85
└   length(nodes) = 171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23217
└   sum(fire_plans.plans_per_fire) = 7874
┌ Info: Time check
└   time() - start_time = 223.26899981498718
┌ Info: Exploring node
└   branch_and_bound_node.ix = 74
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238291
┌ Info: Price and cut time (b-and-b)
└   t = 1.5178313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 74
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0  0   2  17  3  0  0
│     0   0   0   0  6  3   6  7  9   0   0  0  0  0
│     9   2   0   0  0  0   0  0  0   0   0  0  0  0
│     6  18  20   5  0  0   0  0  0   0   0  1  0  0
│     0   0   0  11  6  8  10  9  6  12   1  1  0  0
└     6   0   1   0  1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6766341
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1393817
│   obj = 2.7812096503655153
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   3  18  4  1  1
│      1   1   1   1  7  4   7   8  10   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  7  9  11  10   7  13   2  2  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1055393
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5317426
│   obj = 2.7812096503655153
└   obj_bound = 2.780986621123803
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   4  19  5  2  2
│      2   2   2   2  8   5   8   9  11   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  10  12  11   8  14   3  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9188237
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1816028
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 74
│   lb = 2.67357890174359
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 86
└   length(nodes) = 173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23892
└   sum(fire_plans.plans_per_fire) = 8166
┌ Info: Time check
└   time() - start_time = 229.9210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 75
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0435285
┌ Info: Price and cut time (b-and-b)
└   t = 1.5696526
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 75
│   lb = 2.673597821574839
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 87
└   length(nodes) = 175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24044
└   sum(fire_plans.plans_per_fire) = 8209
┌ Info: Time check
└   time() - start_time = 231.5519998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 38
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308508
┌ Info: Price and cut time (b-and-b)
└   t = 0.8586498
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 38
│   lb = 2.673597821574839
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 88
└   length(nodes) = 177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24222
└   sum(fire_plans.plans_per_fire) = 8242
┌ Info: Time check
└   time() - start_time = 232.45499992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 39
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282775
┌ Info: Price and cut time (b-and-b)
└   t = 1.606276
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 39
│   lb = 2.6736211412395243
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 89
└   length(nodes) = 179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24420
└   sum(fire_plans.plans_per_fire) = 8296
┌ Info: Time check
└   time() - start_time = 234.1029999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 82
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303094
┌ Info: Price and cut time (b-and-b)
└   t = 0.5034334
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 82
│   lb = 2.6736211412395243
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 90
└   length(nodes) = 181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24516
└   sum(fire_plans.plans_per_fire) = 8320
┌ Info: Time check
└   time() - start_time = 234.64999985694885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 83
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255987
┌ Info: Price and cut time (b-and-b)
└   t = 0.9487024
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 83
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  9  9  6   3   2   2   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  2  3  5  13  14  14  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4452636
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1893571
│   obj = 2.7812096503655153
└   obj_bound = 2.780951048453366
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   3  18  3  1  1
│      1   1   1  10  10  7   4   3   3   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   3   4  6  14  15  15  13   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2202735
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9253007
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  11  11  8   5   4   4   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   4   5  7  15  16  16  14   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7561621
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1981261
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 83
│   lb = 2.6736444988789163
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 91
└   length(nodes) = 183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25084
└   sum(fire_plans.plans_per_fire) = 8572
┌ Info: Time check
└   time() - start_time = 240.8329999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 86
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280958
┌ Info: Price and cut time (b-and-b)
└   t = 1.289691
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 86
│   lb = 2.6736444988789163
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 92
└   length(nodes) = 185
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25296
└   sum(fire_plans.plans_per_fire) = 8615
┌ Info: Time check
└   time() - start_time = 242.16400003433228
┌ Info: Exploring node
└   branch_and_bound_node.ix = 87
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309672
┌ Info: Price and cut time (b-and-b)
└   t = 1.1336635
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 87
│   lb = 2.6736757391147177
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 93
└   length(nodes) = 187
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25450
└   sum(fire_plans.plans_per_fire) = 8650
┌ Info: Time check
└   time() - start_time = 243.34099984169006
┌ Info: Exploring node
└   branch_and_bound_node.ix = 182
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283156
┌ Info: Price and cut time (b-and-b)
└   t = 1.2668899
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 182
│   lb = 2.6736757391147177
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 94
└   length(nodes) = 189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25546
└   sum(fire_plans.plans_per_fire) = 8692
┌ Info: Time check
└   time() - start_time = 244.6489999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 183
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267368
┌ Info: Price and cut time (b-and-b)
└   t = 1.8390408
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 183
│   lb = 2.6736962677573417
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 95
└   length(nodes) = 191
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25786
└   sum(fire_plans.plans_per_fire) = 8770
┌ Info: Time check
└   time() - start_time = 246.5279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 180
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025778
┌ Info: Price and cut time (b-and-b)
└   t = 1.2312898
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 180
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  6  9  9   3   3   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  5  3  3  13  13  13  12   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4232804
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1516589
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   3  18  3  1  1
│      1   1   1  7  10  10   4   4   4   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6   4   4  14  14  14  13   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1512752
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4096463
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  19  4  2  2
│      2   2   2  8  11  11   5   5   5   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7   5   5  15  15  15  14   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0268825
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4379185
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 180
│   lb = 2.6736962677573417
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 96
└   length(nodes) = 193
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26196
└   sum(fire_plans.plans_per_fire) = 9004
┌ Info: Time check
└   time() - start_time = 251.88299989700317
┌ Info: Exploring node
└   branch_and_bound_node.ix = 181
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255288
┌ Info: Price and cut time (b-and-b)
└   t = 1.5034524
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 181
│   lb = 2.6737199241674405
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 97
└   length(nodes) = 195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26377
└   sum(fire_plans.plans_per_fire) = 9068
┌ Info: Time check
└   time() - start_time = 253.44400000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 168
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274408
┌ Info: Price and cut time (b-and-b)
└   t = 1.2464499
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 168
│   lb = 2.6737199241674405
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 98
└   length(nodes) = 197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26578
└   sum(fire_plans.plans_per_fire) = 9125
┌ Info: Time check
└   time() - start_time = 254.7300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 169
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289753
┌ Info: Price and cut time (b-and-b)
└   t = 0.784408
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 169
│   lb = 2.673732971188646
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 99
└   length(nodes) = 199
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26714
└   sum(fire_plans.plans_per_fire) = 9161
┌ Info: Time check
└   time() - start_time = 255.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 84
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267963
┌ Info: Price and cut time (b-and-b)
└   t = 0.8105344
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 84
│   lb = 2.673732971188646
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 100
└   length(nodes) = 201
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26783
└   sum(fire_plans.plans_per_fire) = 9194
┌ Info: Time check
└   time() - start_time = 256.4099998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 85
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236745
┌ Info: Price and cut time (b-and-b)
└   t = 0.9810738
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 85
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0  0   2  17  2  0  0
│     0   0   0  2  3  6  6   6  9   0   0  0  0  0
│     9   2   0  0  0  0  0   0  0   0   0  0  0  0
│     6  18  20  5  0  0  0   0  0   0   0  1  0  0
│     0   0   0  9  9  6  9  10  6  12   0  1  0  0
└     6   0   1  0  1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3520473
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2048346
│   obj = 2.7812096503655153
└   obj_bound = 2.7809517151109304
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   3  18  3  1  1
│      1   1   1   3   4  7   7   7  10   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  10  7  10  11   7  13   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.328549
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3653037
│   obj = 2.7812096503655153
└   obj_bound = 2.780951175678996
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  19  4  2  2
│      2   2   2   4   5  8   8   8  11   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  11  11  8  11  12   8  14   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9295819
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.0143914
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 85
│   lb = 2.673742762362537
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 101
└   length(nodes) = 203
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27382
└   sum(fire_plans.plans_per_fire) = 9454
┌ Info: Time check
└   time() - start_time = 263.06900000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 156
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285857
┌ Info: Price and cut time (b-and-b)
└   t = 1.1987458
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 156
│   lb = 2.673742762362537
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 102
└   length(nodes) = 205
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27539
└   sum(fire_plans.plans_per_fire) = 9493
┌ Info: Time check
└   time() - start_time = 264.3109998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 157
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0469353
┌ Info: Price and cut time (b-and-b)
└   t = 0.7543612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 157
│   lb = 2.6737579766735124
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 103
└   length(nodes) = 207
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27598
└   sum(fire_plans.plans_per_fire) = 9515
┌ Info: Time check
└   time() - start_time = 265.125
┌ Info: Exploring node
└   branch_and_bound_node.ix = 78
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270657
┌ Info: Price and cut time (b-and-b)
└   t = 0.7671886
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 78
│   lb = 2.6737579766735124
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 104
└   length(nodes) = 209
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27684
└   sum(fire_plans.plans_per_fire) = 9540
┌ Info: Time check
└   time() - start_time = 265.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 79
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225531
┌ Info: Price and cut time (b-and-b)
└   t = 0.9151538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 79
│   lb = 2.673757976673513
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 105
└   length(nodes) = 211
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27953
└   sum(fire_plans.plans_per_fire) = 9588
┌ Info: Time check
└   time() - start_time = 266.8829998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 208
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258802
┌ Info: Price and cut time (b-and-b)
└   t = 1.2248766
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 208
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0   0   0   1  17  3  0  0
│     0   0   0  5  6   2   6   6   6   0   0  0  0  0
│     9   2   0  0  0   0   0   0   0   0   0  0  0  0
│     6  18  20  5  0   0   0   0   0   0   0  1  0  0
│     0   0   0  6  6  10  10  10  10  13   1  1  0  0
└     6   0   1  0  1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8236799
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2032611
│   obj = 2.7812096503655153
└   obj_bound = 2.7809346713272496
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  6  7   3   7   7   7   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  11  11  11  11  14   2  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0028246
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9875135
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  7  8   4   8   8   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  12  12  12  12  15   3  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8842437
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9576978
│   obj = 2.781209650365515
└   obj_bound = 2.781209650365515
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 208
│   lb = 2.673757976673513
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 106
└   length(nodes) = 213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28419
└   sum(fire_plans.plans_per_fire) = 9855
┌ Info: Time check
└   time() - start_time = 273.48299980163574
┌ Info: Exploring node
└   branch_and_bound_node.ix = 209
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277448
┌ Info: Price and cut time (b-and-b)
└   t = 1.0966683
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 209
│   lb = 2.673758040357394
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 107
└   length(nodes) = 215
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28494
└   sum(fire_plans.plans_per_fire) = 9883
┌ Info: Time check
└   time() - start_time = 274.61899995803833
┌ Info: Exploring node
└   branch_and_bound_node.ix = 106
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260496
┌ Info: Price and cut time (b-and-b)
└   t = 0.420244
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 106
│   lb = 2.673758040357394
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 108
└   length(nodes) = 217
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28527
└   sum(fire_plans.plans_per_fire) = 9903
┌ Info: Time check
└   time() - start_time = 275.0789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 107
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234204
┌ Info: Price and cut time (b-and-b)
└   t = 1.0336092
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 107
│   lb = 2.67376783504911
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 109
└   length(nodes) = 219
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28676
└   sum(fire_plans.plans_per_fire) = 9952
┌ Info: Time check
└   time() - start_time = 276.14800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 216
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220805
┌ Info: Price and cut time (b-and-b)
└   t = 1.4040168
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 216
│   lb = 2.67376783504911
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 110
└   length(nodes) = 221
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28912
└   sum(fire_plans.plans_per_fire) = 10000
┌ Info: Time check
└   time() - start_time = 277.5869998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 217
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235587
┌ Info: Price and cut time (b-and-b)
└   t = 0.934538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 217
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0   1  17  3  0  0
│     0   0   0  10  3  6   3   5   4   0   0  0  0  0
│     9   2   0   0  0  0   0   0   0   0   0  0  0  0
│     6  18  20   5  0  0   0   0   0   0   0  1  0  0
│     0   0   0   1  9  6  12  10  11  13   0  0  0  0
└     6   0   1   0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3849115
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1397993
│   obj = 2.7812096503655153
└   obj_bound = 2.780957558021462
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  11   4  7   4   6   5   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   2  10  7  13  11  12  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3083646
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9172239
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  12   5  8   5   7   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   3  11  8  14  12  13  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8075263
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0636014
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7812096503655153
┌ Info: current bounds
│   node_ix = 217
│   lb = 2.6737772412510954
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 111
└   length(nodes) = 223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29493
└   sum(fire_plans.plans_per_fire) = 10256
┌ Info: Time check
└   time() - start_time = 283.65399980545044
┌ Info: Exploring node
└   branch_and_bound_node.ix = 170
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228864
┌ Info: Price and cut time (b-and-b)
└   t = 0.8527075
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 170
│   lb = 2.6737772412510954
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 112
└   length(nodes) = 225
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29580
└   sum(fire_plans.plans_per_fire) = 10285
┌ Info: Time check
└   time() - start_time = 284.54199981689453
┌ Info: Exploring node
└   branch_and_bound_node.ix = 171
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260367
┌ Info: Price and cut time (b-and-b)
└   t = 1.3196677
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 171
│   lb = 2.6737782994163686
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 113
└   length(nodes) = 227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29766
└   sum(fire_plans.plans_per_fire) = 10333
┌ Info: Time check
└   time() - start_time = 285.90199995040894
┌ Info: Exploring node
└   branch_and_bound_node.ix = 70
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0192837
┌ Info: Price and cut time (b-and-b)
└   t = 1.0988906
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 70
│   lb = 2.6737782994163686
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 114
└   length(nodes) = 229
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29910
└   sum(fire_plans.plans_per_fire) = 10380
┌ Info: Time check
└   time() - start_time = 287.0529999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 71
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229217
┌ Info: Price and cut time (b-and-b)
└   t = 0.9260354
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 71
│   lb = 2.673787923286538
└   ub = 2.781209650365515
┌ Info: number of nodes
│   node_explored_count = 115
└   length(nodes) = 231
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30062
└   sum(fire_plans.plans_per_fire) = 10416
┌ Info: Time check
└   time() - start_time = 288.01399993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 120
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248458
┌ Info: Price and cut time (b-and-b)
└   t = 1.2192347
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 120
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0   2  17  3  0  0
│     0   0   0   0  6  6  6  6  6   0   0  0  0  0
│     9   2   0   0  0  0  0  0  0   0   0  0  0  0
│     6  19  20   5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  11  6  5  9  9  9  12   1  1  0  0
└     6   0   1   0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6344994
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1634753
│   obj = 2.7812096503655153
└   obj_bound = 2.7812096503655153
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   3  18  4  1  1
│      1   1   1   1  7  7   7   7   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  20  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  7  6  10  10  10  13   2  2  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1752779
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5348724
│   obj = 2.779887508316709
└   obj_bound = 2.779887508316709
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   4  19  5  2  2
│      2   2   2   2  8  8   8   8   8   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  21  22   7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  7  11  11  11  14   3  3  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7047828
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3951582
│   obj = 2.7794772231875724
└   obj_bound = 2.7794772231875724
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3  3   3   3   3   5  20  6  3  3
│      3   3   3   3  9  9   9   9   9   3   3  3  3  3
│     12   5   3   3  3  3   3   3   3   3   3  3  3  3
│      9  22  23   8  3  3   3   3   3   3   3  4  3  3
│      3   3   3  14  9  8  12  12  12  15   4  4  3  3
└      9   3   4   3  4  3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7912756
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5365977
│   obj = 2.779477223187573
└   obj_bound = 2.779477223187573
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  21  7  4  4
│      4   4   4   4  10  10  10  10  10   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  23  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4  15  10   9  13  13  13  16   5  5  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5232742
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.8237409
│   obj = 2.7794772231875724
└   obj_bound = 2.7794772231875724
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7794772231875724
┌ Info: current bounds
│   node_ix = 120
│   lb = 2.673787923286538
└   ub = 2.7794772231875724
┌ Info: number of nodes
│   node_explored_count = 116
└   length(nodes) = 233
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30795
└   sum(fire_plans.plans_per_fire) = 10713
┌ Info: Time check
└   time() - start_time = 299.3309998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 121
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290728
┌ Info: Price and cut time (b-and-b)
└   t = 0.7370631
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 121
│   lb = 2.6738579907598914
└   ub = 2.7794772231875724
┌ Info: number of nodes
│   node_explored_count = 117
└   length(nodes) = 235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30869
└   sum(fire_plans.plans_per_fire) = 10743
┌ Info: Time check
└   time() - start_time = 300.1119999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 148
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0226927
┌ Info: Price and cut time (b-and-b)
└   t = 0.46832
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 148
│   lb = 2.6738579907598914
└   ub = 2.7794772231875724
┌ Info: number of nodes
│   node_explored_count = 118
└   length(nodes) = 237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30947
└   sum(fire_plans.plans_per_fire) = 10773
┌ Info: Time check
└   time() - start_time = 300.61699986457825
┌ Info: Exploring node
└   branch_and_bound_node.ix = 149
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0502139
┌ Info: Price and cut time (b-and-b)
└   t = 0.9206213
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 149
│   lb = 2.6739211346599774
└   ub = 2.7794772231875724
┌ Info: number of nodes
│   node_explored_count = 119
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31111
└   sum(fire_plans.plans_per_fire) = 10815
┌ Info: Time check
└   time() - start_time = 301.6009998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 192
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1208521
┌ Info: Price and cut time (b-and-b)
└   t = 1.2949772
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 192
│   lb = 2.6739211346599774
└   ub = 2.7794772231875724
┌ Info: number of nodes
│   node_explored_count = 120
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31245
└   sum(fire_plans.plans_per_fire) = 10861
┌ Info: Time check
└   time() - start_time = 303.0309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 193
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245707
┌ Info: Price and cut time (b-and-b)
└   t = 0.8284718
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 193
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0   0   0   2  17  2  0  0
│     0   0   0  5  10  9   3   3   3   0   0  0  0  0
│     9   2   0  0   0  0   0   0   0   0   0  0  0  0
│     6  18  20  5   0  0   0   0   0   0   0  1  0  0
│     0   0   0  7   3  3  13  13  13  12   0  1  0  0
└     6   0   1  0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6934697
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1363832
│   obj = 2.7794772231875724
└   obj_bound = 2.7792111826207386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   3  18  3  1  1
│      1   1   1  6  11  10   4   4   4   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  8   4   4  14  14  14  13   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5370639
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7247229
│   obj = 2.7792111826207386
└   obj_bound = 2.7792111826207386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  19  4  2  2
│      2   2   2  7  12  11   5   5   5   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  9   5   5  15  15  15  14   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9898857
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5202262
│   obj = 2.779211182620739
└   obj_bound = 2.7792111826207386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   5  20  5  3  3
│      3   3   3   8  13  12   6   6   6   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  10   6   6  16  16  16  15   3  4  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9246484
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.6480714
│   obj = 2.779211182620738
└   obj_bound = 2.779211182620738
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7792111826207386
┌ Info: current bounds
│   node_ix = 193
│   lb = 2.6739213272611817
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 121
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31857
└   sum(fire_plans.plans_per_fire) = 11182
┌ Info: Time check
└   time() - start_time = 311.67400002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 236
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026217
┌ Info: Price and cut time (b-and-b)
└   t = 1.0951652
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 236
│   lb = 2.6739213272611817
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 122
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31912
└   sum(fire_plans.plans_per_fire) = 11215
┌ Info: Time check
└   time() - start_time = 312.81199979782104
┌ Info: Exploring node
└   branch_and_bound_node.ix = 237
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281157
┌ Info: Price and cut time (b-and-b)
└   t = 1.6168541
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 237
│   lb = 2.673957187108497
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 123
└   length(nodes) = 247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32095
└   sum(fire_plans.plans_per_fire) = 11281
┌ Info: Time check
└   time() - start_time = 314.47000002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 160
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.018768
┌ Info: Price and cut time (b-and-b)
└   t = 1.498667
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 160
│   lb = 2.673957187108497
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 124
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32265
└   sum(fire_plans.plans_per_fire) = 11344
┌ Info: Time check
└   time() - start_time = 316.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 161
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0201829
┌ Info: Price and cut time (b-and-b)
└   t = 1.0186518
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 161
│   lb = 2.673991267297669
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 125
└   length(nodes) = 251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32338
└   sum(fire_plans.plans_per_fire) = 11373
┌ Info: Time check
└   time() - start_time = 317.0519998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 238
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265891
┌ Info: Price and cut time (b-and-b)
└   t = 1.1895907
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 238
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  9  9  6  6   0   0   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  2  3  5  9  16  16  13   0  0  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4757331
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.141708
│   obj = 2.7792111826207386
└   obj_bound = 2.7789395869253806
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  10  10  7   7   1   1   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   3   4  6  10  17  17  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9962628
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2875319
│   obj = 2.7792111826207386
└   obj_bound = 2.7789389194382395
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  11  11  8   8   2   2   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   4   5  7  11  18  18  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6300928
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6005252
│   obj = 2.7792111826207386
└   obj_bound = 2.7792111826207386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7792111826207386
┌ Info: current bounds
│   node_ix = 238
│   lb = 2.673991267297669
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 126
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32862
└   sum(fire_plans.plans_per_fire) = 11594
┌ Info: Time check
└   time() - start_time = 321.9099998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 239
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235903
┌ Info: Price and cut time (b-and-b)
└   t = 1.911099
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 239
│   lb = 2.674008257820357
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 127
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33038
└   sum(fire_plans.plans_per_fire) = 11660
┌ Info: Time check
└   time() - start_time = 323.8589999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 116
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.021771
┌ Info: Price and cut time (b-and-b)
└   t = 1.1375985
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 116
│   lb = 2.674008257820357
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 128
└   length(nodes) = 257
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33167
└   sum(fire_plans.plans_per_fire) = 11696
┌ Info: Time check
└   time() - start_time = 325.02999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 117
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257723
┌ Info: Price and cut time (b-and-b)
└   t = 1.2498006
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 117
│   lb = 2.6740379561969663
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 129
└   length(nodes) = 259
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33393
└   sum(fire_plans.plans_per_fire) = 11767
┌ Info: Time check
└   time() - start_time = 326.31900000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 136
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0213735
┌ Info: Price and cut time (b-and-b)
└   t = 1.0951883
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 136
│   lb = 2.6740379561969663
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 130
└   length(nodes) = 261
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33557
└   sum(fire_plans.plans_per_fire) = 11801
┌ Info: Time check
└   time() - start_time = 327.45099997520447
┌ Info: Exploring node
└   branch_and_bound_node.ix = 137
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238144
┌ Info: Price and cut time (b-and-b)
└   t = 1.0281738
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 137
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0   0  0   0   1  17  3  0  0
│     0   0   0  6   2   2   4  9  10   0   0  0  0  0
│     9   2   0  0   0   0   0  0   0   0   0  0  0  0
│     6  18  20  5   0   0   0  0   0   0   0  1  0  0
│     0   0   0  5  10  10  12  6   5  12   1  1  0  0
└     6   0   1  0   1   0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4265502
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1450596
│   obj = 2.7792111826207386
└   obj_bound = 2.7790407604032175
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   3   3   5  10  11   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11  13   7   6  13   2  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2082617
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3919628
│   obj = 2.779211182620738
└   obj_bound = 2.778953432352741
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   4   4   6  11  12   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12  14   8   7  14   3  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.744298
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5442364
│   obj = 2.779211182620739
└   obj_bound = 2.7792111826207386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7792111826207386
┌ Info: current bounds
│   node_ix = 137
│   lb = 2.674045070643581
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 131
└   length(nodes) = 263
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34278
└   sum(fire_plans.plans_per_fire) = 12041
┌ Info: Time check
└   time() - start_time = 332.41799998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 188
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254029
┌ Info: Price and cut time (b-and-b)
└   t = 1.7109754
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 188
│   lb = 2.674045070643581
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 132
└   length(nodes) = 265
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34477
└   sum(fire_plans.plans_per_fire) = 12109
┌ Info: Time check
└   time() - start_time = 334.16799998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 189
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232575
┌ Info: Price and cut time (b-and-b)
└   t = 0.7853233
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 189
│   lb = 2.6741054257104766
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 133
└   length(nodes) = 267
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34556
└   sum(fire_plans.plans_per_fire) = 12140
┌ Info: Time check
└   time() - start_time = 335.0169999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 98
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.022686
┌ Info: Price and cut time (b-and-b)
└   t = 1.1042796
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 98
│   lb = 2.6741054257104766
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 134
└   length(nodes) = 269
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34719
└   sum(fire_plans.plans_per_fire) = 12176
┌ Info: Time check
└   time() - start_time = 336.1569998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 99
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0457795
┌ Info: Price and cut time (b-and-b)
└   t = 1.4644358
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 99
│   lb = 2.6741093004754592
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 135
└   length(nodes) = 271
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34965
└   sum(fire_plans.plans_per_fire) = 12234
┌ Info: Time check
└   time() - start_time = 337.6799998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 110
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.020561
┌ Info: Price and cut time (b-and-b)
└   t = 1.2026687
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 110
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   2  17  2  0  0
│     0   0   0  10  7  2  7   6   2   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   5  0  0  0   0   0   0   0  1  0  0
│     0   0   0   2  6  9  9  10  14  12   0  1  0  0
└     6   0   1   0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4978845
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1249008
│   obj = 2.7792111826207386
└   obj_bound = 2.7789859295076575
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   3  18  3  1  1
│      1   1   1  11  8   3   8   7   3   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1   3  7  10  10  11  15  13   1  2  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4566737
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8079204
│   obj = 2.779211182620739
└   obj_bound = 2.7789709965016174
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  12  9   4   9   8   4   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   4  8  11  11  12  16  14   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6328488
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.7347922
│   obj = 2.779211182620739
└   obj_bound = 2.779211182620739
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7792111826207386
┌ Info: current bounds
│   node_ix = 110
│   lb = 2.6741093004754592
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 136
└   length(nodes) = 273
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35588
└   sum(fire_plans.plans_per_fire) = 12488
┌ Info: Time check
└   time() - start_time = 344.62099981307983
┌ Info: Exploring node
└   branch_and_bound_node.ix = 111
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245524
┌ Info: Price and cut time (b-and-b)
└   t = 1.1017881
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 111
│   lb = 2.6741259274720184
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 137
└   length(nodes) = 275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35684
└   sum(fire_plans.plans_per_fire) = 12519
┌ Info: Time check
└   time() - start_time = 345.75999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 228
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0198648
┌ Info: Price and cut time (b-and-b)
└   t = 0.7980844
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 228
│   lb = 2.6741259274720184
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 138
└   length(nodes) = 277
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35763
└   sum(fire_plans.plans_per_fire) = 12545
┌ Info: Time check
└   time() - start_time = 346.5920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 229
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249288
┌ Info: Price and cut time (b-and-b)
└   t = 1.0506337
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 229
│   lb = 2.674133559474866
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 139
└   length(nodes) = 279
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35900
└   sum(fire_plans.plans_per_fire) = 12577
┌ Info: Time check
└   time() - start_time = 347.68099999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 176
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233856
┌ Info: Price and cut time (b-and-b)
└   t = 0.932566
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 176
│   lb = 2.674133559474866
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 140
└   length(nodes) = 281
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36075
└   sum(fire_plans.plans_per_fire) = 12609
┌ Info: Time check
└   time() - start_time = 348.6510000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 177
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267151
┌ Info: Price and cut time (b-and-b)
└   t = 1.355387
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 177
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0  0   1  17  3  0  0
│     0   0   0  10  3  2  6   4  6   0   0  0  0  0
│     9   2   0   0  0  0  0   0  0   0   0  0  0  0
│     6  18  20   5  0  0  0   0  0   0   0  1  0  0
│     0   0   0   1  9  9  9  11  9  13   0  0  0  0
└     6   0   1   0  1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3135091
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1423164
│   obj = 2.7792111826207386
└   obj_bound = 2.778966643147672
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  11   4   3   7   5   7   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1   2  10  10  10  12  10  14   1  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3781548
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.9612367
│   obj = 2.779211182620738
└   obj_bound = 2.779211182620738
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  12   5   4   8   6   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   3  11  11  11  13  11  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2352996
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.9815112
│   obj = 2.779211182620739
└   obj_bound = 2.779211182620739
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7792111826207386
┌ Info: current bounds
│   node_ix = 177
│   lb = 2.6741783165522834
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 141
└   length(nodes) = 283
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36826
└   sum(fire_plans.plans_per_fire) = 12888
┌ Info: Time check
└   time() - start_time = 357.60799980163574
┌ Info: Exploring node
└   branch_and_bound_node.ix = 124
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295946
┌ Info: Price and cut time (b-and-b)
└   t = 0.9965261
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 124
│   lb = 2.6741783165522834
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 142
└   length(nodes) = 285
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36990
└   sum(fire_plans.plans_per_fire) = 12923
┌ Info: Time check
└   time() - start_time = 358.64800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 125
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246906
┌ Info: Price and cut time (b-and-b)
└   t = 0.6674455
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 125
│   lb = 2.674182149538228
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 143
└   length(nodes) = 287
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37108
└   sum(fire_plans.plans_per_fire) = 12955
┌ Info: Time check
└   time() - start_time = 359.35399985313416
┌ Info: Exploring node
└   branch_and_bound_node.ix = 184
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025599
┌ Info: Price and cut time (b-and-b)
└   t = 0.8072879
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 184
│   lb = 2.674182149538228
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 144
└   length(nodes) = 289
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37251
└   sum(fire_plans.plans_per_fire) = 12987
┌ Info: Time check
└   time() - start_time = 360.20099997520447
┌ Info: Exploring node
└   branch_and_bound_node.ix = 185
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0243617
┌ Info: Price and cut time (b-and-b)
└   t = 0.7903984
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 185
│   lb = 2.674192271879455
└   ub = 2.7792111826207386
┌ Info: number of nodes
│   node_explored_count = 145
└   length(nodes) = 291
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37385
└   sum(fire_plans.plans_per_fire) = 13024
┌ Info: Time check
└   time() - start_time = 361.02999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 130
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251701
┌ Info: Price and cut time (b-and-b)
└   t = 0.8000035
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 130
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0   0   2  17  2  0  0
│     0   0   0   0   0   0  10  11  10   0   0  0  0  0
│     9   2   0   0   0   0   0   0   0   0   0  0  0  0
│     6  18  20   5   0   0   0   0   0   0   0  1  0  0
│     0   0   0  11  12  11   6   5   6  12   0  1  0  0
└     6   0   1   0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5711874
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1288554
│   obj = 2.7785797188518058
└   obj_bound = 2.7785797188518058
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  3  1  1
│      1   1   1   1   1   1  11  12  11   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  13  12   7   6   7  13   1  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9746239
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1342791
│   obj = 2.7785797188518053
└   obj_bound = 2.7785797188518053
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  4  2  2
│      2   2   2   2   2   2  12  13  12   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13   8   7   8  14   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6935724
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4524152
│   obj = 2.7785797188518053
└   obj_bound = 2.778367656245395
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7785797188518058
┌ Info: current bounds
│   node_ix = 130
│   lb = 2.674192271879455
└   ub = 2.7785797188518058
┌ Info: number of nodes
│   node_explored_count = 146
└   length(nodes) = 293
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37944
└   sum(fire_plans.plans_per_fire) = 13244
┌ Info: Time check
└   time() - start_time = 366.27899980545044
┌ Info: Exploring node
└   branch_and_bound_node.ix = 131
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233455
┌ Info: Price and cut time (b-and-b)
└   t = 1.327858
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 131
│   lb = 2.6742061569425766
└   ub = 2.7785797188518058
┌ Info: number of nodes
│   node_explored_count = 147
└   length(nodes) = 295
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38227
└   sum(fire_plans.plans_per_fire) = 13310
┌ Info: Time check
└   time() - start_time = 367.6449999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 206
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297137
┌ Info: Price and cut time (b-and-b)
└   t = 0.8688129
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 206
│   lb = 2.6742061569425766
└   ub = 2.7785797188518058
┌ Info: number of nodes
│   node_explored_count = 148
└   length(nodes) = 297
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38292
└   sum(fire_plans.plans_per_fire) = 13341
┌ Info: Time check
└   time() - start_time = 368.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 207
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0520276
┌ Info: Price and cut time (b-and-b)
└   t = 0.9824001
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 207
│   lb = 2.6742362532257538
└   ub = 2.7785797188518058
┌ Info: number of nodes
│   node_explored_count = 149
└   length(nodes) = 299
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38403
└   sum(fire_plans.plans_per_fire) = 13366
┌ Info: Time check
└   time() - start_time = 369.60599994659424
┌ Info: Exploring node
└   branch_and_bound_node.ix = 234
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260013
┌ Info: Price and cut time (b-and-b)
└   t = 1.1087968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 234
│   lb = 2.6742362532257538
└   ub = 2.7785797188518058
┌ Info: number of nodes
│   node_explored_count = 150
└   length(nodes) = 301
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38447
└   sum(fire_plans.plans_per_fire) = 13397
┌ Info: Time check
└   time() - start_time = 370.7559998035431
┌ Info: Exploring node
└   branch_and_bound_node.ix = 235
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02338
┌ Info: Price and cut time (b-and-b)
└   t = 1.2516142
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 235
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   0  17  3  0  0
│     0   0   0  3  6  6  6  9   1   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  19  20  7  0  0  0  0   0   0   0  1  0  0
│     0   0   0  6  6  5  9  7  14  14   0  1  0  0
└     6   0   1  0  1  0  0  0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3586393
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2174877
│   obj = 2.7785797188518053
└   obj_bound = 2.7783869055326753
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  4  7  7   7  10   2   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  20  21  8  1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  7  6  10   8  15  15   1  2  1  1
└      7   1   2  1  2  1   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.233466
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2389079
│   obj = 2.7782982893977586
└   obj_bound = 2.7782982893977586
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   2  19  5  2  2
│      2   2   2  5  8  8   8  11   3   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  21  22  9  2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  7  11   9  16  16   2  3  2  2
└      8   2   3  2  3  2   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6069157
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6789646
│   obj = 2.7782982893977586
└   obj_bound = 2.7782982893977586
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3  3   3   3   3   3  20  6  3  3
│      3   3   3   6  9  9   9  12   4   3   3  3  3  3
│     12   5   3   3  3  3   3   3   3   3   3  3  3  3
│      9  22  23  10  3  3   3   3   3   3   3  4  3  3
│      3   3   3   9  9  8  12  10  17  17   3  4  3  3
└      9   3   4   3  4  3   3   3   3   4   4  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4883542
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5567208
│   obj = 2.7782982893977586
└   obj_bound = 2.7782982893977586
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7782982893977586
┌ Info: current bounds
│   node_ix = 235
│   lb = 2.6742388175261094
└   ub = 2.7782982893977586
┌ Info: number of nodes
│   node_explored_count = 151
└   length(nodes) = 303
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39185
└   sum(fire_plans.plans_per_fire) = 13675
┌ Info: Time check
└   time() - start_time = 379.0720000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 128
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024888
┌ Info: Price and cut time (b-and-b)
└   t = 1.39631
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 128
│   lb = 2.6742388175261094
└   ub = 2.7782982893977586
┌ Info: number of nodes
│   node_explored_count = 152
└   length(nodes) = 305
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39353
└   sum(fire_plans.plans_per_fire) = 13725
┌ Info: Time check
└   time() - start_time = 380.5069999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 129
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0209873
┌ Info: Price and cut time (b-and-b)
└   t = 0.8488663
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 129
│   lb = 2.6742398743177205
└   ub = 2.7782982893977586
┌ Info: number of nodes
│   node_explored_count = 153
└   length(nodes) = 307
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39491
└   sum(fire_plans.plans_per_fire) = 13750
┌ Info: Time check
└   time() - start_time = 381.3910000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 144
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289142
┌ Info: Price and cut time (b-and-b)
└   t = 1.1740211
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 144
│   lb = 2.6742398743177205
└   ub = 2.7782982893977586
┌ Info: number of nodes
│   node_explored_count = 154
└   length(nodes) = 309
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39641
└   sum(fire_plans.plans_per_fire) = 13787
┌ Info: Time check
└   time() - start_time = 382.6099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 145
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244333
┌ Info: Price and cut time (b-and-b)
└   t = 1.1400219
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 145
│   lb = 2.674239900811909
└   ub = 2.7782982893977586
┌ Info: number of nodes
│   node_explored_count = 155
└   length(nodes) = 311
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39753
└   sum(fire_plans.plans_per_fire) = 13831
┌ Info: Time check
└   time() - start_time = 383.7869999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 162
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285481
┌ Info: Price and cut time (b-and-b)
└   t = 1.2933061
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 162
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   1  17  2  0  0
│     0   0   0  6   2   2  9  7  6   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  5  10  10  6  9  9  13   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3963811
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1325726
│   obj = 2.7762882391465027
└   obj_bound = 2.7762882391465022
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  3  1  1
│      1   1   1  7   3   3  10   8   7   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11   7  10  10  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2302306
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4578514
│   obj = 2.7762882391465027
└   obj_bound = 2.7762882391465022
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  8   4   4  11   9   8   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12   8  11  11  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9762406
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5663881
│   obj = 2.776288239146502
└   obj_bound = 2.776288239146502
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7762882391465027
┌ Info: current bounds
│   node_ix = 162
│   lb = 2.674239900811909
└   ub = 2.7762882391465027
┌ Info: number of nodes
│   node_explored_count = 156
└   length(nodes) = 313
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40397
└   sum(fire_plans.plans_per_fire) = 14086
┌ Info: Time check
└   time() - start_time = 389.4299998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 163
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232196
┌ Info: Price and cut time (b-and-b)
└   t = 1.2397989
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 163
│   lb = 2.674287007093538
└   ub = 2.7762882391465027
┌ Info: number of nodes
│   node_explored_count = 157
└   length(nodes) = 315
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40637
└   sum(fire_plans.plans_per_fire) = 14135
┌ Info: Time check
└   time() - start_time = 390.70899987220764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 100
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.021783
┌ Info: Price and cut time (b-and-b)
└   t = 0.6939337
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 100
│   lb = 2.674287007093538
└   ub = 2.7762882391465027
┌ Info: number of nodes
│   node_explored_count = 158
└   length(nodes) = 317
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40752
└   sum(fire_plans.plans_per_fire) = 14159
┌ Info: Time check
└   time() - start_time = 391.43699979782104
┌ Info: Exploring node
└   branch_and_bound_node.ix = 101
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221549
┌ Info: Price and cut time (b-and-b)
└   t = 1.0119313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 101
│   lb = 2.6743058552691052
└   ub = 2.7762882391465027
┌ Info: number of nodes
│   node_explored_count = 159
└   length(nodes) = 319
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40800
└   sum(fire_plans.plans_per_fire) = 14196
┌ Info: Time check
└   time() - start_time = 392.4839999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 218
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245965
┌ Info: Price and cut time (b-and-b)
└   t = 1.2678387
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 218
│   lb = 2.6743058552691052
└   ub = 2.7762882391465027
┌ Info: number of nodes
│   node_explored_count = 160
└   length(nodes) = 321
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40887
└   sum(fire_plans.plans_per_fire) = 14239
┌ Info: Time check
└   time() - start_time = 393.7890000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 219
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.020243
┌ Info: Price and cut time (b-and-b)
└   t = 0.744544
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 219
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0   0   0   1  17  3  0  0
│     0   0   0  6  3  10   3   5   4   0   0  0  0  0
│     9   2   0  0  0   0   0   0   0   0   0  0  0  0
│     6  19  20  5  0   0   0   0   0   0   0  1  0  0
│     0   0   0  5  9   2  12  10  11  13   0  0  0  0
└     6   0   1  0  1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5192372
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1270494
│   obj = 2.776088239146503
└   obj_bound = 2.7760882391465023
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   4  11   4   6   5   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  20  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  10   3  13  11  12  14   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0403604
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3371438
│   obj = 2.7760882391465023
└   obj_bound = 2.7760882391465023
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   5  12   5   7   6   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  21  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11   4  14  12  13  15   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8878337
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5573333
│   obj = 2.7689664152845443
└   obj_bound = 2.768766204744159
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3  3   3   3   3   3   3   4  20  6  3  3
│      3   3   3  9   6  13   6   8   7   3   3  3  3  3
│     12   5   3  3   3   3   3   3   3   3   3  3  3  3
│      9  22  23  8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  8  12   5  15  13  14  16   3  3  3  3
└      9   3   4  3   4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7108102
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.4382648
│   obj = 2.768959818793574
└   obj_bound = 2.768959818793574
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   5  21  7  4  4
│      4   4   4  10   7  14   7   9   8   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  23  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4   9  13   6  16  14  15  17   4  4  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4205674
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.6810242
│   obj = 2.768959818793574
└   obj_bound = 2.768959818793574
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5   6  22  8  5  5
│      5   5   5  11   8  15   8  10   9   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     11  24  25  10   5   5   5   5   5   5   5  6  5  5
│      5   5   5  10  14   7  17  15  16  18   5  5  5  5
└     11   5   6   5   6   5   5   5   5   7   5  6  5  5
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.2435282
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 3.4230416
│   obj = 2.768959818793574
└   obj_bound = 2.768959818793574
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.768959818793574
┌ Info: current bounds
│   node_ix = 219
│   lb = 2.674327542314025
└   ub = 2.768959818793574
┌ Info: number of nodes
│   node_explored_count = 161
└   length(nodes) = 323
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41679
└   sum(fire_plans.plans_per_fire) = 14571
┌ Info: Time check
└   time() - start_time = 407.97000002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 140
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260192
┌ Info: Price and cut time (b-and-b)
└   t = 0.8822745
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 140
│   lb = 2.674327542314025
└   ub = 2.768959818793574
┌ Info: number of nodes
│   node_explored_count = 162
└   length(nodes) = 325
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41817
└   sum(fire_plans.plans_per_fire) = 14591
┌ Info: Time check
└   time() - start_time = 408.8919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 141
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237985
┌ Info: Price and cut time (b-and-b)
└   t = 0.8009521
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 141
│   lb = 2.6743614961609694
└   ub = 2.768959818793574
┌ Info: number of nodes
│   node_explored_count = 163
└   length(nodes) = 327
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41951
└   sum(fire_plans.plans_per_fire) = 14622
┌ Info: Time check
└   time() - start_time = 409.731999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 256
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269139
┌ Info: Price and cut time (b-and-b)
└   t = 0.6560986
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 256
│   lb = 2.6743614961609694
└   ub = 2.768959818793574
┌ Info: number of nodes
│   node_explored_count = 164
└   length(nodes) = 329
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42059
└   sum(fire_plans.plans_per_fire) = 14647
┌ Info: Time check
└   time() - start_time = 410.42899990081787
┌ Info: Exploring node
└   branch_and_bound_node.ix = 257
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236177
┌ Info: Price and cut time (b-and-b)
└   t = 1.0815888
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 257
│   lb = 2.674381365764088
└   ub = 2.768959818793574
┌ Info: number of nodes
│   node_explored_count = 165
└   length(nodes) = 331
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42269
└   sum(fire_plans.plans_per_fire) = 14699
┌ Info: Time check
└   time() - start_time = 411.5479998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 232
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025271
┌ Info: Price and cut time (b-and-b)
└   t = 0.5339706
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 232
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0   1  17  3  0  0
│     0   0   0   0  6  7  6  6  7   0   0  0  0  0
│     9   2   0   0  0  0  0  0  0   0   0  0  0  0
│     6  18  20   5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  11  6  5  9  9  9  13   0  0  0  0
└     6   0   1   0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5007918
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1203946
│   obj = 2.768588886511324
└   obj_bound = 2.7683180010215174
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   1  7  8   7   7   8   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  7  6  10  10  10  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8991627
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8375057
│   obj = 2.7683270819361345
└   obj_bound = 2.7683270819361345
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   3  19  5  2  2
│      2   2   2   2  8  9   8   8   9   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  20  22   7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  7  11  11  11  15   2  2  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.028434
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.067668
│   obj = 2.7682446076279414
└   obj_bound = 2.76824460762794
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3   3   3   3   3   4  20  6  3  3
│      3   3   3   3  9  10   9   9  10   3   3  3  3  3
│     12   5   3   3  3   3   3   3   3   3   3  3  3  3
│      9  21  23   8  3   3   3   3   3   3   3  4  3  3
│      3   3   3  14  9   8  12  12  12  16   3  3  3  3
└      9   3   4   3  4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7941093
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8922618
│   obj = 2.7682446076279406
└   obj_bound = 2.767995396719101
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   5  21  7  4  4
│      4   4   4   4  10  11  10  10  11   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4  15  10   9  13  13  13  17   4  4  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4553261
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6976402
│   obj = 2.768244607627941
└   obj_bound = 2.768244607627941
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7682446076279414
┌ Info: current bounds
│   node_ix = 232
│   lb = 2.674381365764088
└   ub = 2.7682446076279414
┌ Info: number of nodes
│   node_explored_count = 166
└   length(nodes) = 333
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42884
└   sum(fire_plans.plans_per_fire) = 14991
┌ Info: Time check
└   time() - start_time = 420.2430000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 233
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299584
┌ Info: Price and cut time (b-and-b)
└   t = 1.1742389
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 233
│   lb = 2.6744227220453616
└   ub = 2.7682446076279414
┌ Info: number of nodes
│   node_explored_count = 167
└   length(nodes) = 335
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43065
└   sum(fire_plans.plans_per_fire) = 15043
┌ Info: Time check
└   time() - start_time = 421.4609999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 126
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257438
┌ Info: Price and cut time (b-and-b)
└   t = 1.0172791
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 126
│   lb = 2.6744227220453616
└   ub = 2.7682446076279414
┌ Info: number of nodes
│   node_explored_count = 168
└   length(nodes) = 337
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43157
└   sum(fire_plans.plans_per_fire) = 15075
┌ Info: Time check
└   time() - start_time = 422.5189998149872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 127
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255198
┌ Info: Price and cut time (b-and-b)
└   t = 1.1612053
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 127
│   lb = 2.6744336281603918
└   ub = 2.7682446076279414
┌ Info: number of nodes
│   node_explored_count = 169
└   length(nodes) = 339
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43331
└   sum(fire_plans.plans_per_fire) = 15115
┌ Info: Time check
└   time() - start_time = 423.71799993515015
┌ Info: Exploring node
└   branch_and_bound_node.ix = 150
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241132
┌ Info: Price and cut time (b-and-b)
└   t = 1.5351236
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 150
│   lb = 2.6744336281603918
└   ub = 2.7682446076279414
┌ Info: number of nodes
│   node_explored_count = 170
└   length(nodes) = 341
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43498
└   sum(fire_plans.plans_per_fire) = 15165
┌ Info: Time check
└   time() - start_time = 425.2939999103546
┌ Info: Exploring node
└   branch_and_bound_node.ix = 151
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0203726
┌ Info: Price and cut time (b-and-b)
└   t = 0.9244336
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 151
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   2  17  2  0  0
│     0   0   0   0  9  9  9   3   3   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  11  3  3  7  13  13  12   0  1  0  0
└     6   0   1   0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3054782
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1299025
│   obj = 2.768244607627941
└   obj_bound = 2.7682446076279406
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  3  1  1
│      1   1   1   1  10  10  10   4   4   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12   4   4   8  14  14  13   1  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1473284
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.871519
│   obj = 2.7681187101473466
└   obj_bound = 2.7681187101473466
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  4  2  2
│      2   2   2   2  11  11  11   5   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13   5   5   9  15  15  14   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2016774
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6065794
│   obj = 2.7681187101473466
└   obj_bound = 2.7681187101473466
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   5  20  5  3  3
│      3   3   3   3  12  12  12   6   6   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  14   6   6  10  16  16  15   3  4  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8134894
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6969712
│   obj = 2.7681187101473466
└   obj_bound = 2.7681187101473466
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7681187101473466
┌ Info: current bounds
│   node_ix = 151
│   lb = 2.6744363151976605
└   ub = 2.7681187101473466
┌ Info: number of nodes
│   node_explored_count = 171
└   length(nodes) = 343
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44041
└   sum(fire_plans.plans_per_fire) = 15481
┌ Info: Time check
└   time() - start_time = 432.6859998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 244
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232881
┌ Info: Price and cut time (b-and-b)
└   t = 1.0553438
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 244
│   lb = 2.6744363151976605
└   ub = 2.7681187101473466
┌ Info: number of nodes
│   node_explored_count = 172
└   length(nodes) = 345
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44104
└   sum(fire_plans.plans_per_fire) = 15512
┌ Info: Time check
└   time() - start_time = 433.77999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 245
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234874
┌ Info: Price and cut time (b-and-b)
└   t = 0.9055538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 245
│   lb = 2.6744518883586847
└   ub = 2.7681187101473466
┌ Info: number of nodes
│   node_explored_count = 173
└   length(nodes) = 347
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44144
└   sum(fire_plans.plans_per_fire) = 15539
┌ Info: Time check
└   time() - start_time = 434.72199988365173
┌ Info: Exploring node
└   branch_and_bound_node.ix = 284
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024863
┌ Info: Price and cut time (b-and-b)
└   t = 0.9358754
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 284
│   lb = 2.6744518883586847
└   ub = 2.7681187101473466
┌ Info: number of nodes
│   node_explored_count = 174
└   length(nodes) = 349
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44286
└   sum(fire_plans.plans_per_fire) = 15569
┌ Info: Time check
└   time() - start_time = 435.69799995422363
┌ Info: Exploring node
└   branch_and_bound_node.ix = 285
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260326
┌ Info: Price and cut time (b-and-b)
└   t = 0.8578185
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 285
│   lb = 2.674464564471609
└   ub = 2.7681187101473466
┌ Info: number of nodes
│   node_explored_count = 175
└   length(nodes) = 351
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44439
└   sum(fire_plans.plans_per_fire) = 15595
┌ Info: Time check
└   time() - start_time = 436.59500002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 138
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0199756
┌ Info: Price and cut time (b-and-b)
└   t = 1.0460897
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 138
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0   0   2  17  2  0  0
│     0   0   0   0   2   2  6  10  11   0   0  0  0  0
│     9   2   0   0   0   0  0   0   0   0   0  0  0  0
│     6  18  20   5   0   0  0   0   0   0   0  1  0  0
│     0   0   0  11  11  10  9   6   5  12   1  1  0  0
└     6   0   1   0   1   0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.491376
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1086571
│   obj = 2.767955103292174
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  3  1  1
│      1   1   1   1   3   3   7  11  12   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  12  11  10   7   6  13   2  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3155241
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.68335
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  4  2  2
│      2   2   2   2   4   4   8  12  13   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  13  12  11   8   7  14   3  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.393895
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4465683
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.767955103292174
┌ Info: current bounds
│   node_ix = 138
│   lb = 2.674464564471609
└   ub = 2.767955103292174
┌ Info: number of nodes
│   node_explored_count = 176
└   length(nodes) = 353
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45151
└   sum(fire_plans.plans_per_fire) = 15809
┌ Info: Time check
└   time() - start_time = 441.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 139
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237509
┌ Info: Price and cut time (b-and-b)
└   t = 1.2791607
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 139
│   lb = 2.6744865094791215
└   ub = 2.767955103292174
┌ Info: number of nodes
│   node_explored_count = 177
└   length(nodes) = 355
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45322
└   sum(fire_plans.plans_per_fire) = 15854
┌ Info: Time check
└   time() - start_time = 442.98299980163574
┌ Info: Exploring node
└   branch_and_bound_node.ix = 152
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025124
┌ Info: Price and cut time (b-and-b)
└   t = 1.4174907
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 152
│   lb = 2.6744865094791215
└   ub = 2.767955103292174
┌ Info: number of nodes
│   node_explored_count = 178
└   length(nodes) = 357
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45588
└   sum(fire_plans.plans_per_fire) = 15913
┌ Info: Time check
└   time() - start_time = 444.47000002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 153
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291771
┌ Info: Price and cut time (b-and-b)
└   t = 0.8161007
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 153
│   lb = 2.6744986714069405
└   ub = 2.767955103292174
┌ Info: number of nodes
│   node_explored_count = 179
└   length(nodes) = 359
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45716
└   sum(fire_plans.plans_per_fire) = 15944
┌ Info: Time check
└   time() - start_time = 445.32999992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 164
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323303
┌ Info: Price and cut time (b-and-b)
└   t = 0.7554944
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 164
│   lb = 2.6744986714069405
└   ub = 2.767955103292174
┌ Info: number of nodes
│   node_explored_count = 180
└   length(nodes) = 361
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45789
└   sum(fire_plans.plans_per_fire) = 15966
┌ Info: Time check
└   time() - start_time = 446.1319999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 165
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239046
┌ Info: Price and cut time (b-and-b)
└   t = 0.5606823
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 165
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  2  0  0
│     0   0   0  7  6  9  9   0   0   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  6  0  0  0   0   0   0   0  1  0  0
│     0   0   0  3  6  3  6  15  15  12   0  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5284554
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1235543
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  8  7  10  10   1   1   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  7  1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  7   4   7  16  16  13   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4951538
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5561143
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  9  8  11  11   2   2   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8   5   8  17  17  14   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5616757
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5793753
│   obj = 2.7679551032921736
└   obj_bound = 2.7677136642319495
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7679551032921736
┌ Info: current bounds
│   node_ix = 165
│   lb = 2.674504742320342
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 181
└   length(nodes) = 363
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46327
└   sum(fire_plans.plans_per_fire) = 16205
┌ Info: Time check
└   time() - start_time = 451.0279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 196
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348832
┌ Info: Price and cut time (b-and-b)
└   t = 1.2954976
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 196
│   lb = 2.674504742320342
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 182
└   length(nodes) = 365
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46448
└   sum(fire_plans.plans_per_fire) = 16245
┌ Info: Time check
└   time() - start_time = 452.40399980545044
┌ Info: Exploring node
└   branch_and_bound_node.ix = 197
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229739
┌ Info: Price and cut time (b-and-b)
└   t = 1.4742927
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 197
│   lb = 2.6745447252528387
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 183
└   length(nodes) = 367
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46687
└   sum(fire_plans.plans_per_fire) = 16310
┌ Info: Time check
└   time() - start_time = 453.9140000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 174
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028053
┌ Info: Price and cut time (b-and-b)
└   t = 1.4837338
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 174
│   lb = 2.6745447252528387
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 184
└   length(nodes) = 369
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46846
└   sum(fire_plans.plans_per_fire) = 16353
┌ Info: Time check
└   time() - start_time = 455.4399998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 175
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241444
┌ Info: Price and cut time (b-and-b)
└   t = 0.899462
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 175
│   lb = 2.6745537781888395
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 185
└   length(nodes) = 371
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47016
└   sum(fire_plans.plans_per_fire) = 16382
┌ Info: Time check
└   time() - start_time = 456.3839998245239
┌ Info: Exploring node
└   branch_and_bound_node.ix = 248
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321265
┌ Info: Price and cut time (b-and-b)
└   t = 1.0215246
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 248
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0   0   0   2  17  2  0  0
│     0   0   0  5   2  6  9   6   3   0   0  0  0  0
│     9   2   0  0   0  0  0   0   0   0   0  0  0  0
│     6  18  20  5   0  0  0   0   0   0   0  1  0  0
│     0   0   0  6  11  5  6  10  13  12   1  1  0  0
└     6   0   1  0   1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.51902
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1248839
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   3  18  3  1  1
│      1   1   1  6   3  7  10   7   4   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  12  6   7  11  14  13   2  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4922394
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.303748
│   obj = 2.7679551032921736
└   obj_bound = 2.7677215882895525
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  7   4  8  11   8   5   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  13  7   8  12  15  14   3  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7575072
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7083587
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7679551032921736
┌ Info: current bounds
│   node_ix = 248
│   lb = 2.6745537781888395
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 186
└   length(nodes) = 373
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47484
└   sum(fire_plans.plans_per_fire) = 16633
┌ Info: Time check
└   time() - start_time = 461.84699988365173
┌ Info: Exploring node
└   branch_and_bound_node.ix = 249
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239165
┌ Info: Price and cut time (b-and-b)
└   t = 1.4150345
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 249
│   lb = 2.6745791891632837
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 187
└   length(nodes) = 375
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47665
└   sum(fire_plans.plans_per_fire) = 16700
┌ Info: Time check
└   time() - start_time = 463.2999999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 122
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220788
┌ Info: Price and cut time (b-and-b)
└   t = 1.0589505
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 122
│   lb = 2.6745791891632837
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 188
└   length(nodes) = 377
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47721
└   sum(fire_plans.plans_per_fire) = 16734
┌ Info: Time check
└   time() - start_time = 464.4249999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 123
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235313
┌ Info: Price and cut time (b-and-b)
└   t = 1.0366226
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 123
│   lb = 2.6746116504411415
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 189
└   length(nodes) = 379
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47951
└   sum(fire_plans.plans_per_fire) = 16784
┌ Info: Time check
└   time() - start_time = 465.5
┌ Info: Exploring node
└   branch_and_bound_node.ix = 328
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.05574
┌ Info: Price and cut time (b-and-b)
└   t = 0.4916317
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 328
│   lb = 2.6746116504411415
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 190
└   length(nodes) = 381
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48053
└   sum(fire_plans.plans_per_fire) = 16811
┌ Info: Time check
└   time() - start_time = 466.0609998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 329
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0216252
┌ Info: Price and cut time (b-and-b)
└   t = 0.7964972
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 329
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  1  1   3  17  1  0  0
│     0   0   0   0   0  5  9  9  7   0   0  0  0  0
│     9   2   0   0   0  0  0  0  0   0   0  0  0  0
│     6  18  20   2   0  0  0  0  0   0   0  1  0  0
│     0   0   0  14  12  6  6  6  8  11   0  0  0  0
└     6   0   1   0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6938903
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0760746
│   obj = 2.7679551032921736
└   obj_bound = 2.767730965811069
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   2  2   4  18  2  1  1
│      1   1   1   1   1  6  10  10  8   1   1  1  1  1
│     10   3   1   1   1  1   1   1  1   1   1  1  1  1
│      7  19  21   3   1  1   1   1  1   1   1  2  1  1
│      1   1   1  15  13  7   7   7  9  12   1  1  1  1
└      7   1   2   1   2  1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0378343
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5801936
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   3   3   5  19  3  2  2
│      2   2   2   2   2  7  11  11   9   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   4   2  2   2   2   2   2   2  3  2  2
│      2   2   2  16  14  8   8   8  10  13   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9846537
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9573528
│   obj = 2.7679551032921736
└   obj_bound = 2.7679551032921736
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7679551032921736
┌ Info: current bounds
│   node_ix = 329
│   lb = 2.674611923823707
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 191
└   length(nodes) = 383
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48633
└   sum(fire_plans.plans_per_fire) = 17079
┌ Info: Time check
└   time() - start_time = 471.8090000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 212
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300488
┌ Info: Price and cut time (b-and-b)
└   t = 0.5474996
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 212
│   lb = 2.674611923823707
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 192
└   length(nodes) = 385
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48743
└   sum(fire_plans.plans_per_fire) = 17094
┌ Info: Time check
└   time() - start_time = 472.4010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 213
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0662294
┌ Info: Price and cut time (b-and-b)
└   t = 1.0169602
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 213
│   lb = 2.67463028477656
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 193
└   length(nodes) = 387
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48904
└   sum(fire_plans.plans_per_fire) = 17134
┌ Info: Time check
└   time() - start_time = 473.49899983406067
┌ Info: Exploring node
└   branch_and_bound_node.ix = 306
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241487
┌ Info: Price and cut time (b-and-b)
└   t = 0.7777082
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 306
│   lb = 2.67463028477656
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 194
└   length(nodes) = 389
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48972
└   sum(fire_plans.plans_per_fire) = 17161
┌ Info: Time check
└   time() - start_time = 474.3529999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 307
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298424
┌ Info: Price and cut time (b-and-b)
└   t = 1.3034352
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 307
│   lb = 2.6746778442238295
└   ub = 2.7679551032921736
┌ Info: number of nodes
│   node_explored_count = 195
└   length(nodes) = 391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49246
└   sum(fire_plans.plans_per_fire) = 17224
┌ Info: Time check
└   time() - start_time = 475.70099997520447
┌ Info: Exploring node
└   branch_and_bound_node.ix = 276
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023291
┌ Info: Price and cut time (b-and-b)
└   t = 0.6020612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 276
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  0  0   1  17  2  0  0
│     0   0   0   1   2  6  10  6  7   0   0  0  0  0
│     9   2   0   0   0  0   0  0  0   0   0  0  0  0
│     6  18  20   5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  10  10  5   6  9  8  13   0  1  0  0
└     6   0   1   0   1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.40801
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1099788
│   obj = 2.767955103292174
└   obj_bound = 2.767697893170513
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1  1   2  18  3  1  1
│      1   1   1   2   3  7  11   7  8   1   1  1  1  1
│     10   3   1   1   1  1   1   1  1   1   1  1  1  1
│      7  19  21   6   1  1   1   1  1   1   1  2  1  1
│      1   1   1  11  11  6   7  10  9  14   1  2  1  1
└      7   1   2   1   2  1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3472116
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0948017
│   obj = 2.7677236395232407
└   obj_bound = 2.7677236395232407
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  4  2  2
│      2   2   2   3   4  8  12   8   9   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  12  12  7   8  11  10  15   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9813516
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2687865
│   obj = 2.7677236395232407
└   obj_bound = 2.7677236395232407
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3  3   3   3   3   4  20  5  3  3
│      3   3   3   4   5  9  13   9  10   3   3  3  3  3
│     12   5   3   3   3  3   3   3   3   3   3  3  3  3
│      9  21  23   8   3  3   3   3   3   3   3  4  3  3
│      3   3   3  13  13  8   9  12  11  16   3  4  3  3
└      9   3   4   3   4  3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6675867
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8959819
│   obj = 2.7677236395232403
└   obj_bound = 2.7677236395232403
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7677236395232407
┌ Info: current bounds
│   node_ix = 276
│   lb = 2.6746778442238295
└   ub = 2.7677236395232407
┌ Info: number of nodes
│   node_explored_count = 196
└   length(nodes) = 393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49728
└   sum(fire_plans.plans_per_fire) = 17528
┌ Info: Time check
└   time() - start_time = 483.731999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 277
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024209
┌ Info: Price and cut time (b-and-b)
└   t = 1.5645254
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 277
│   lb = 2.67467961120595
└   ub = 2.7677236395232407
┌ Info: number of nodes
│   node_explored_count = 197
└   length(nodes) = 395
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49985
└   sum(fire_plans.plans_per_fire) = 17597
┌ Info: Time check
└   time() - start_time = 485.3349997997284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 292
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248034
┌ Info: Price and cut time (b-and-b)
└   t = 0.6111724
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 292
│   lb = 2.67467961120595
└   ub = 2.7677236395232407
┌ Info: number of nodes
│   node_explored_count = 198
└   length(nodes) = 397
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50023
└   sum(fire_plans.plans_per_fire) = 17614
┌ Info: Time check
└   time() - start_time = 485.9839999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 293
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238812
┌ Info: Price and cut time (b-and-b)
└   t = 1.2701416
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 293
│   lb = 2.674681009844931
└   ub = 2.7677236395232407
┌ Info: number of nodes
│   node_explored_count = 199
└   length(nodes) = 399
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50179
└   sum(fire_plans.plans_per_fire) = 17653
┌ Info: Time check
└   time() - start_time = 487.29499983787537
┌ Info: Exploring node
└   branch_and_bound_node.ix = 210
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230361
┌ Info: Price and cut time (b-and-b)
└   t = 0.9369923
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 210
│   lb = 2.674681009844931
└   ub = 2.7677236395232407
┌ Info: number of nodes
│   node_explored_count = 200
└   length(nodes) = 401
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50283
└   sum(fire_plans.plans_per_fire) = 17690
┌ Info: Time check
└   time() - start_time = 488.26799988746643
┌ Info: Exploring node
└   branch_and_bound_node.ix = 211
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240374
┌ Info: Price and cut time (b-and-b)
└   t = 0.9397079
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 211
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0   1  17  2  0  0
│     0   0   0   0  6  2  7  9  6   0   0  0  0  0
│     9   2   0   0  0  0  0  0  0   0   0  0  0  0
│     6  18  20   5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  11  6  9  8  6  9  13   0  1  0  0
└     6   0   1   0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5292183
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0571479
│   obj = 2.7677236395232407
└   obj_bound = 2.767588444120121
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1  1   1   1   2  18  3  1  1
│      1   1   1   1  7   3  8  10   7   1   1  1  1  1
│     10   3   1   1  1   1  1   1   1   1   1  1  1  1
│      7  19  21   6  1   1  1   1   1   1   1  2  1  1
│      1   1   1  12  7  10  9   7  10  14   1  2  1  1
└      7   1   2   1  2   1  1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2542458
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4920824
│   obj = 2.767723599498172
└   obj_bound = 2.767723599498172
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  4  2  2
│      2   2   2   2  8   4   9  11   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  11  10   8  11  15   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1725994
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4184999
│   obj = 2.767723599498172
└   obj_bound = 2.767456970181753
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3   3   3   3   3   4  20  5  3  3
│      3   3   3   3  9   5  10  12   9   3   3  3  3  3
│     12   5   3   3  3   3   3   3   3   3   3  3  3  3
│      9  21  23   8  3   3   3   3   3   3   3  4  3  3
│      3   3   3  14  9  12  11   9  12  16   3  4  3  3
└      9   3   4   3  4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6556545
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.9025579
│   obj = 2.7677235994981726
└   obj_bound = 2.7677235994981726
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.767723599498172
┌ Info: current bounds
│   node_ix = 211
│   lb = 2.6746837079871657
└   ub = 2.767723599498172
┌ Info: number of nodes
│   node_explored_count = 201
└   length(nodes) = 403
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50867
└   sum(fire_plans.plans_per_fire) = 17999
┌ Info: Time check
└   time() - start_time = 496.3289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 204
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231714
┌ Info: Price and cut time (b-and-b)
└   t = 1.1421922
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 204
│   lb = 2.6746837079871657
└   ub = 2.767723599498172
┌ Info: number of nodes
│   node_explored_count = 202
└   length(nodes) = 405
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50993
└   sum(fire_plans.plans_per_fire) = 18034
┌ Info: Time check
└   time() - start_time = 497.5079998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 205
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303312
┌ Info: Price and cut time (b-and-b)
└   t = 1.17918
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 205
│   lb = 2.6747131241594087
└   ub = 2.767723599498172
┌ Info: number of nodes
│   node_explored_count = 203
└   length(nodes) = 407
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51112
└   sum(fire_plans.plans_per_fire) = 18065
┌ Info: Time check
└   time() - start_time = 498.73099994659424
┌ Info: Exploring node
└   branch_and_bound_node.ix = 300
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297573
┌ Info: Price and cut time (b-and-b)
└   t = 0.6463985
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 300
│   lb = 2.6747131241594087
└   ub = 2.767723599498172
┌ Info: number of nodes
│   node_explored_count = 204
└   length(nodes) = 409
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51193
└   sum(fire_plans.plans_per_fire) = 18091
┌ Info: Time check
└   time() - start_time = 499.4210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 301
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024414
┌ Info: Price and cut time (b-and-b)
└   t = 1.1142719
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 301
│   lb = 2.6747200863070564
└   ub = 2.767723599498172
┌ Info: number of nodes
│   node_explored_count = 205
└   length(nodes) = 411
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51268
└   sum(fire_plans.plans_per_fire) = 18126
┌ Info: Time check
└   time() - start_time = 500.5739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 408
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280832
┌ Info: Price and cut time (b-and-b)
└   t = 1.1000607
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 408
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   2  16  3  0  0
│     0   0   0  4  6  6  6  6   3   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     7  17  19  6  0  0  0  0   0   0   0  1  0  0
│     0   0   0  7  6  5  9  9  13  12   1  0  0  0
└     5   2   2  0  1  0  0  0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4700772
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1331805
│   obj = 2.7384180904865714
└   obj_bound = 2.738417918621354
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  17  4  1  1
│      1   1   1  5  7  7   7   7   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      8  18  20  7  1  1   1   1   1   1   1  2  1  1
│      1   1   1  8  7  6  10  10  14  13   2  1  1  1
└      6   3   3  1  2  1   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2853178
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3655673
│   obj = 2.738417918621354
└   obj_bound = 2.738417918621354
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   4  18  5  2  2
│      2   2   2  6  8  8   8   8   5   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      9  19  21  8  2  2   2   2   2   2   2  3  2  2
│      2   2   2  9  8  7  11  11  15  14   3  2  2  2
└      7   4   4  2  3  2   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.956889
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.782676
│   obj = 2.738417918621355
└   obj_bound = 2.738417918621355
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3  3  3   3   3   3   5  19  6  3  3
│      3   3   3   7  9  9   9   9   6   3   3  3  3  3
│     12   5   3   3  3  3   3   3   3   3   3  3  3  3
│     10  20  22   9  3  3   3   3   3   3   3  4  3  3
│      3   3   3  10  9  8  12  12  16  15   4  3  3  3
└      8   5   5   3  4  3   3   3   3   4   4  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7207275
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9277874
│   obj = 2.73833055535939
└   obj_bound = 2.73833055535939
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  20  7  4  4
│      4   4   4   8  10  10  10  10   7   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     11  21  23  10   4   4   4   4   4   4   4  5  4  4
│      4   4   4  11  10   9  13  13  17  16   5  4  4  4
└      9   6   6   4   5   4   4   4   4   5   5  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5881522
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.034475
│   obj = 2.73833055535939
└   obj_bound = 2.73833055535939
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5   7  21  8  5  5
│      5   5   5   9  11  11  11  11   8   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     12  22  24  11   5   5   5   5   5   5   5  6  5  5
│      5   5   5  12  11  10  14  14  18  17   6  5  5  5
└     10   7   7   5   6   5   5   5   5   6   6  6  5  5
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3785436
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5478492
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      6   6   6   6   6   6   6   6   6   8  22  9  6  6
│      6   6   6  10  12  12  12  12   9   6   6  6  6  6
│     15   8   6   6   6   6   6   6   6   6   6  6  6  6
│     13  23  25  12   6   6   6   6   6   6   6  7  6  6
│      6   6   6  13  12  11  15  15  19  18   7  6  6  6
└     11   8   8   6   7   6   6   6   6   7   7  7  6  6
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4433104
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8291915
│   obj = 2.7335175554092674
└   obj_bound = 2.7332917866002666
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      7   7   7   7   7   7   7   7   7   9  23  10  7  7
│      7   7   7  11  13  13  13  13  10   7   7   7  7  7
│     16   9   7   7   7   7   7   7   7   7   7   7  7  7
│     14  24  26  13   7   7   7   7   7   7   7   8  7  7
│      7   7   7  14  13  12  16  16  20  19   8   7  7  7
└     12   9   9   7   8   7   7   7   7   8   8   8  7  7
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.2208946
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9574122
│   obj = 2.733517555409268
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 408
│   lb = 2.6747200863070564
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 206
└   length(nodes) = 413
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52112
└   sum(fire_plans.plans_per_fire) = 18593
┌ Info: Time check
└   time() - start_time = 516.704999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 409
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028389
┌ Info: Price and cut time (b-and-b)
└   t = 0.2809603
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 409
│   lb = 2.674762662776994
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 207
└   length(nodes) = 415
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52136
└   sum(fire_plans.plans_per_fire) = 18604
┌ Info: Time check
└   time() - start_time = 517.0639998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 298
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0214873
┌ Info: Price and cut time (b-and-b)
└   t = 0.8751828
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 298
│   lb = 2.674762662776994
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 208
└   length(nodes) = 417
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52157
└   sum(fire_plans.plans_per_fire) = 18627
┌ Info: Time check
└   time() - start_time = 517.9749999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 299
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252351
┌ Info: Price and cut time (b-and-b)
└   t = 1.2113137
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 299
│   lb = 2.674785154405876
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 209
└   length(nodes) = 419
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52384
└   sum(fire_plans.plans_per_fire) = 18680
┌ Info: Time check
└   time() - start_time = 519.2259998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 224
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257269
┌ Info: Price and cut time (b-and-b)
└   t = 1.2449702
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 224
│   lb = 2.674785154405876
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 210
└   length(nodes) = 421
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52594
└   sum(fire_plans.plans_per_fire) = 18724
┌ Info: Time check
└   time() - start_time = 520.5099999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 225
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0213301
┌ Info: Price and cut time (b-and-b)
└   t = 0.8525091
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 225
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0   0   0   1  17  2  0  0
│     0   0   0  6   3  6  7  10   3   0   0  0  0  0
│     9   2   0  0   0  0  0   0   0   0   0  0  0  0
│     6  18  20  5   0  0  0   0   0   0   0  1  0  0
│     0   0   0  5  10  6  9   7  13  12   0  1  0  0
└     6   0   1  0   1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5245965
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1289391
│   obj = 2.733517555409267
└   obj_bound = 2.73330028354405
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  3  1  1
│      1   1   1  7   4  7   8  11   4   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  7  10   8  14  13   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5842678
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4274013
│   obj = 2.733517555409267
└   obj_bound = 2.733284277653626
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  4  2  2
│      2   2   2  8   5  8   9  12   5   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  8  11   9  15  14   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0274919
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3869306
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 225
│   lb = 2.6747953397196507
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 211
└   length(nodes) = 423
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53248
└   sum(fire_plans.plans_per_fire) = 18939
┌ Info: Time check
└   time() - start_time = 525.9140000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 336
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217695
┌ Info: Price and cut time (b-and-b)
└   t = 0.6585282
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 336
│   lb = 2.6747953397196507
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 212
└   length(nodes) = 425
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53316
└   sum(fire_plans.plans_per_fire) = 18962
┌ Info: Time check
└   time() - start_time = 526.6089999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 337
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244573
┌ Info: Price and cut time (b-and-b)
└   t = 0.9837626
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 337
│   lb = 2.674810057992105
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 213
└   length(nodes) = 427
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53480
└   sum(fire_plans.plans_per_fire) = 19003
┌ Info: Time check
└   time() - start_time = 527.6309998035431
┌ Info: Exploring node
└   branch_and_bound_node.ix = 220
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254377
┌ Info: Price and cut time (b-and-b)
└   t = 0.7513224
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 220
│   lb = 2.674810057992105
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 214
└   length(nodes) = 429
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53548
└   sum(fire_plans.plans_per_fire) = 19024
┌ Info: Time check
└   time() - start_time = 528.4210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 221
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1405051
┌ Info: Price and cut time (b-and-b)
└   t = 1.3378614
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 221
│   lb = 2.6748149681106175
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 215
└   length(nodes) = 431
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53792
└   sum(fire_plans.plans_per_fire) = 19079
┌ Info: Time check
└   time() - start_time = 529.912999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 346
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023956
┌ Info: Price and cut time (b-and-b)
└   t = 0.903716
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 346
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   0  17  3  0  0
│     0   0   0  6  9  8   5   2   1   2   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   1   0   0   0   0  0  0  0
│     0   0   0  5  3  3  10  14  15  13   0  1  0  0
└     6   0   1  0  1  1   1   0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.488242
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0806371
│   obj = 2.733517555409267
└   obj_bound = 2.733329658539044
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  10  9   6   3   2   3   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   2   1   1   1   1  1  1  1
│      1   1   1  6   4  4  11  15  16  14   1  2  1  1
└      7   1   2  1   2  2   2   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1824635
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.337925
│   obj = 2.733517555409267
└   obj_bound = 2.733250202601721
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  8  11  10   7   4   3   4   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   3   2   2   2   2  2  2  2
│      2   2   2  7   5   5  12  16  17  15   2  3  2  2
└      8   2   3  2   3   3   3   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8981159
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4476645
│   obj = 2.733517555409267
└   obj_bound = 2.7332524384020522
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 346
│   lb = 2.6748149681106175
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 216
└   length(nodes) = 433
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54357
└   sum(fire_plans.plans_per_fire) = 19333
┌ Info: Time check
└   time() - start_time = 534.8579998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 347
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0208145
┌ Info: Price and cut time (b-and-b)
└   t = 1.1962065
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 347
│   lb = 2.6748149681106184
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 217
└   length(nodes) = 435
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54459
└   sum(fire_plans.plans_per_fire) = 19376
┌ Info: Time check
└   time() - start_time = 536.0889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 434
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027183
┌ Info: Price and cut time (b-and-b)
└   t = 1.2812543
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 434
│   lb = 2.6748149681106184
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 218
└   length(nodes) = 437
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54578
└   sum(fire_plans.plans_per_fire) = 19441
┌ Info: Time check
└   time() - start_time = 537.4119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 435
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231673
┌ Info: Price and cut time (b-and-b)
└   t = 0.2863662
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 435
│   lb = 2.674828025716789
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 219
└   length(nodes) = 439
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54620
└   sum(fire_plans.plans_per_fire) = 19449
┌ Info: Time check
└   time() - start_time = 537.7369999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 242
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260416
┌ Info: Price and cut time (b-and-b)
└   t = 1.0439686
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 242
│   lb = 2.674828025716789
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 220
└   length(nodes) = 441
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54795
└   sum(fire_plans.plans_per_fire) = 19483
┌ Info: Time check
└   time() - start_time = 538.8220000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 243
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0222605
┌ Info: Price and cut time (b-and-b)
└   t = 1.2038226
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 243
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0   0   0   0   1  17  2  0  0
│     0   0   0  5  12  11   3   0   1   0   0  0  0  0
│     9   2   0  0   0   0   0   0   0   0   0  0  0  0
│     6  18  20  5   0   0   0   0   0   0   0  1  0  0
│     0   0   0  7   1   1  13  15  14  12   0  1  0  0
└     6   0   1  0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.500685
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0835513
│   obj = 2.733517555409267
└   obj_bound = 2.733419608169847
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  3  1  1
│      1   1   1  6  13  12   4   1   2   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  8   2   2  14  16  15  13   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4915866
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3044612
│   obj = 2.733517555409267
└   obj_bound = 2.7332739743936982
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  7  14  13   5   2   3   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  9   3   3  15  17  16  14   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2288167
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4872472
│   obj = 2.733517555409267
└   obj_bound = 2.733288041495876
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 243
│   lb = 2.6748410075893063
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 221
└   length(nodes) = 443
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55454
└   sum(fire_plans.plans_per_fire) = 19773
┌ Info: Time check
└   time() - start_time = 544.6410000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 364
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247591
┌ Info: Price and cut time (b-and-b)
└   t = 0.7472473
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 364
│   lb = 2.6748410075893063
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 222
└   length(nodes) = 445
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55558
└   sum(fire_plans.plans_per_fire) = 19807
┌ Info: Time check
└   time() - start_time = 545.4279999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 365
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280389
┌ Info: Price and cut time (b-and-b)
└   t = 1.0447219
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 365
│   lb = 2.6748746532894083
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 223
└   length(nodes) = 447
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55734
└   sum(fire_plans.plans_per_fire) = 19850
┌ Info: Time check
└   time() - start_time = 546.5139999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 200
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0211915
┌ Info: Price and cut time (b-and-b)
└   t = 1.3031912
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 200
│   lb = 2.6748746532894083
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 224
└   length(nodes) = 449
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55891
└   sum(fire_plans.plans_per_fire) = 19894
┌ Info: Time check
└   time() - start_time = 547.8529999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 201
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0214585
┌ Info: Price and cut time (b-and-b)
└   t = 1.1813007
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 201
│   lb = 2.674889301372995
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 225
└   length(nodes) = 451
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55972
└   sum(fire_plans.plans_per_fire) = 19935
┌ Info: Time check
└   time() - start_time = 549.0679998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 304
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233119
┌ Info: Price and cut time (b-and-b)
└   t = 1.0724856
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 304
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   1  17  2  0  0
│     0   0   0  4   0   0  9  9  8   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  6  12  11  6  6  7  12   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4400462
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0725037
│   obj = 2.7335175554092674
└   obj_bound = 2.7332556550796254
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1  1   2  18  3  1  1
│      1   1   1  5   1   1  10  10  9   1   1  1  1  1
│     10   3   1  1   1   1   1   1  1   1   1  1  1  1
│      7  19  21  6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  7  13  12   7   7  8  13   1  2  1  1
└      7   1   2  1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3025981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2928538
│   obj = 2.733517555409267
└   obj_bound = 2.733262251048239
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  6   2   2  11  11  10   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  14  13   8   8   9  14   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6200439
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3012768
│   obj = 2.733517555409267
└   obj_bound = 2.7332671565446502
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7335175554092674
┌ Info: current bounds
│   node_ix = 304
│   lb = 2.674889301372995
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 226
└   length(nodes) = 453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56684
└   sum(fire_plans.plans_per_fire) = 20171
┌ Info: Time check
└   time() - start_time = 553.6929998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 305
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242674
┌ Info: Price and cut time (b-and-b)
└   t = 1.4991141
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 305
│   lb = 2.6748931440890775
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 227
└   length(nodes) = 455
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56908
└   sum(fire_plans.plans_per_fire) = 20232
┌ Info: Time check
└   time() - start_time = 555.2669999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 260
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277014
┌ Info: Price and cut time (b-and-b)
└   t = 0.7965713
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 260
│   lb = 2.6748931440890775
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 228
└   length(nodes) = 457
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56960
└   sum(fire_plans.plans_per_fire) = 20256
┌ Info: Time check
└   time() - start_time = 556.1050000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 261
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025788
┌ Info: Price and cut time (b-and-b)
└   t = 1.31095
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 261
│   lb = 2.674901987947732
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 229
└   length(nodes) = 459
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57155
└   sum(fire_plans.plans_per_fire) = 20321
┌ Info: Time check
└   time() - start_time = 557.4570000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 240
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245509
┌ Info: Price and cut time (b-and-b)
└   t = 1.0824417
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 240
│   lb = 2.674901987947732
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 230
└   length(nodes) = 461
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57292
└   sum(fire_plans.plans_per_fire) = 20357
┌ Info: Time check
└   time() - start_time = 558.577999830246
┌ Info: Exploring node
└   branch_and_bound_node.ix = 241
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236658
┌ Info: Price and cut time (b-and-b)
└   t = 0.8666689
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 241
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0   0   0   0   1  17  3  0  0
│     0   0   0  7  11  11   3   0   1   0   0  0  0  0
│     9   2   0  0   0   0   0   0   0   0   0  0  0  0
│     6  18  20  6   0   0   0   0   0   0   0  1  0  0
│     0   0   0  3   1   1  12  15  15  13   0  1  0  0
└     6   0   1  0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5039196
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0704935
│   obj = 2.733517555409267
└   obj_bound = 2.733422177435224
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  8  12  12   4   1   2   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  4   2   2  13  16  16  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0649501
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5297286
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  9  13  13   5   2   3   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  5   3   3  14  17  17  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.04868
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3324
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 241
│   lb = 2.6749276146636576
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 231
└   length(nodes) = 463
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57882
└   sum(fire_plans.plans_per_fire) = 20628
┌ Info: Time check
└   time() - start_time = 563.5539999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 296
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.021639
┌ Info: Price and cut time (b-and-b)
└   t = 0.883014
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 296
│   lb = 2.6749276146636576
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 232
└   length(nodes) = 465
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57943
└   sum(fire_plans.plans_per_fire) = 20657
┌ Info: Time check
└   time() - start_time = 564.4739999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 297
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276934
┌ Info: Price and cut time (b-and-b)
└   t = 1.3228609
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 297
│   lb = 2.674929729522161
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 233
└   length(nodes) = 467
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58120
└   sum(fire_plans.plans_per_fire) = 20712
┌ Info: Time check
└   time() - start_time = 565.8379998207092
┌ Info: Exploring node
└   branch_and_bound_node.ix = 266
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245438
┌ Info: Price and cut time (b-and-b)
└   t = 1.6929696
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 266
│   lb = 2.674929729522161
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 234
└   length(nodes) = 469
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58305
└   sum(fire_plans.plans_per_fire) = 20755
┌ Info: Time check
└   time() - start_time = 567.5709998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 267
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271888
┌ Info: Price and cut time (b-and-b)
└   t = 0.9981743
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 267
│   lb = 2.674940335023612
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 235
└   length(nodes) = 471
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58338
└   sum(fire_plans.plans_per_fire) = 20781
┌ Info: Time check
└   time() - start_time = 568.6089999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 312
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1501071
┌ Info: Price and cut time (b-and-b)
└   t = 0.7365324
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 312
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   1  17  3  0  0
│     0   0   0  6   2   2  9  6  6   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  5  10  10  6  9  9  13   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5074407
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0845714
│   obj = 2.7335175554092674
└   obj_bound = 2.7335175554092674
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   3   3  10   7   7   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11   7  10  10  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3287116
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.330632
│   obj = 2.733517555409268
└   obj_bound = 2.7333195855531653
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   4   4  11   8   8   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12   8  11  11  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9600848
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.277258
│   obj = 2.7335175554092674
└   obj_bound = 2.7332502706883135
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7335175554092674
┌ Info: current bounds
│   node_ix = 312
│   lb = 2.674940335023612
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 236
└   length(nodes) = 473
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58964
└   sum(fire_plans.plans_per_fire) = 21029
┌ Info: Time check
└   time() - start_time = 573.4839999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 313
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220222
┌ Info: Price and cut time (b-and-b)
└   t = 1.2420821
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 313
│   lb = 2.674955016269102
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 237
└   length(nodes) = 475
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59123
└   sum(fire_plans.plans_per_fire) = 21065
┌ Info: Time check
└   time() - start_time = 574.7619998455048
┌ Info: Exploring node
└   branch_and_bound_node.ix = 326
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0218485
┌ Info: Price and cut time (b-and-b)
└   t = 0.6333311
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 326
│   lb = 2.674955016269102
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 238
└   length(nodes) = 477
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59195
└   sum(fire_plans.plans_per_fire) = 21084
┌ Info: Time check
└   time() - start_time = 575.4319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 327
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298783
┌ Info: Price and cut time (b-and-b)
└   t = 1.5586331
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 327
│   lb = 2.674956465389471
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 239
└   length(nodes) = 479
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59377
└   sum(fire_plans.plans_per_fire) = 21148
┌ Info: Time check
└   time() - start_time = 577.0339999198914
┌ Info: Exploring node
└   branch_and_bound_node.ix = 202
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225347
┌ Info: Price and cut time (b-and-b)
└   t = 1.2377651
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 202
│   lb = 2.674956465389471
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 240
└   length(nodes) = 481
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59556
└   sum(fire_plans.plans_per_fire) = 21195
┌ Info: Time check
└   time() - start_time = 578.3090000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 203
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258218
┌ Info: Price and cut time (b-and-b)
└   t = 0.595846
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 203
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0  0   1  17  3  0  0
│     0   0   0  2  3  9   3  7  9   0   0  0  0  0
│     9   2   0  0  0  0   0  0  0   0   0  0  0  0
│     6  18  20  5  0  0   0  0  0   0   0  1  0  0
│     0   0   0  9  9  3  12  9  7  13   1  0  0  0
└     6   0   1  0  1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.400889
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1222702
│   obj = 2.733517555409267
└   obj_bound = 2.733304953354151
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1   3   4  10   4   8  10   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  10  10   4  13  10   8  14   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9657236
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.348551
│   obj = 2.7335175554092674
└   obj_bound = 2.733268371941112
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   4   5  11   5   9  11   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  11  11   5  14  11   9  15   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6231633
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3990913
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 203
│   lb = 2.6749705979495393
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 241
└   length(nodes) = 483
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60207
└   sum(fire_plans.plans_per_fire) = 21381
┌ Info: Time check
└   time() - start_time = 582.2969999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 250
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0210837
┌ Info: Price and cut time (b-and-b)
└   t = 0.5580294
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 250
│   lb = 2.6749705979495393
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 242
└   length(nodes) = 485
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60250
└   sum(fire_plans.plans_per_fire) = 21402
┌ Info: Time check
└   time() - start_time = 582.8889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 484
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024013
┌ Info: Price and cut time (b-and-b)
└   t = 0.7289236
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 484
│   lb = 2.6749705979495393
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 243
└   length(nodes) = 487
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60356
└   sum(fire_plans.plans_per_fire) = 21432
┌ Info: Time check
└   time() - start_time = 583.6539998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 485
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229937
┌ Info: Price and cut time (b-and-b)
└   t = 1.4910756
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 485
│   lb = 2.6749705979495393
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 244
└   length(nodes) = 489
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60585
└   sum(fire_plans.plans_per_fire) = 21502
┌ Info: Time check
└   time() - start_time = 585.1819999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 251
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232682
┌ Info: Price and cut time (b-and-b)
└   t = 1.1402205
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 251
│   lb = 2.6749790139016163
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 245
└   length(nodes) = 491
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60687
└   sum(fire_plans.plans_per_fire) = 21545
┌ Info: Time check
└   time() - start_time = 586.3589999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 324
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230227
┌ Info: Price and cut time (b-and-b)
└   t = 0.923038
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 324
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0   0   0   2  16  3  0  0
│     0   0   0  3   1  6  10  10   4   0   0  0  0  0
│     9   2   0  0   0  0   0   0   0   0   0  0  0  0
│     6  18  20  5   0  0   0   0   0   0   0  1  0  0
│     0   0   0  8  11  6   6   6  12  11   2  0  0  0
└     6   0   1  0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.415415
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0603101
│   obj = 2.733517555409267
└   obj_bound = 2.73328571782963
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   3  17  4  1  1
│      1   1   1  4   2  7  11  11   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  9  12  7   7   7  13  12   3  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3626435
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.247165
│   obj = 2.733517555409267
└   obj_bound = 2.7332509732829915
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  18  5  2  2
│      2   2   2   5   3  8  12  12   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  10  13  8   8   8  14  13   4  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0993394
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4364066
│   obj = 2.7335175554092674
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 324
│   lb = 2.6749790139016163
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 246
└   length(nodes) = 493
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61179
└   sum(fire_plans.plans_per_fire) = 21805
┌ Info: Time check
└   time() - start_time = 591.4599997997284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 325
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220507
┌ Info: Price and cut time (b-and-b)
└   t = 1.3934221
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 325
│   lb = 2.675014274805084
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 247
└   length(nodes) = 495
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61448
└   sum(fire_plans.plans_per_fire) = 21864
┌ Info: Time check
└   time() - start_time = 592.8899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 272
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278732
┌ Info: Price and cut time (b-and-b)
└   t = 0.9364961
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 272
│   lb = 2.675014274805084
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 248
└   length(nodes) = 497
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61517
└   sum(fire_plans.plans_per_fire) = 21889
┌ Info: Time check
└   time() - start_time = 593.8689999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 273
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252691
┌ Info: Price and cut time (b-and-b)
└   t = 1.1725006
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 273
│   lb = 2.6750199282593785
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 249
└   length(nodes) = 499
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61642
└   sum(fire_plans.plans_per_fire) = 21923
┌ Info: Time check
└   time() - start_time = 595.0809998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 310
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284225
┌ Info: Price and cut time (b-and-b)
└   t = 0.7683421
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 310
│   lb = 2.6750199282593785
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 250
└   length(nodes) = 501
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61733
└   sum(fire_plans.plans_per_fire) = 21945
┌ Info: Time check
└   time() - start_time = 595.8919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 311
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237892
┌ Info: Price and cut time (b-and-b)
└   t = 1.0632794
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 311
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   1  17  3  0  0
│     0   0   0  6  6  9   3   4   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  5  6  2  12  12  12  13   0  0  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3636721
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0660951
│   obj = 2.7335175554092674
└   obj_bound = 2.7332553717146997
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  7  7  10   4   5   4   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  7   3  13  13  13  14   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8935723
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2912085
│   obj = 2.7335175554092674
└   obj_bound = 2.73328047909148
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  8  8  11   5   6   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8   4  14  14  14  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5992571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8412762
│   obj = 2.7335175554092674
└   obj_bound = 2.733371615510169
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7335175554092674
┌ Info: current bounds
│   node_ix = 311
│   lb = 2.6750252595280104
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 251
└   length(nodes) = 503
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62313
└   sum(fire_plans.plans_per_fire) = 22149
┌ Info: Time check
└   time() - start_time = 600.5319998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 280
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0363103
┌ Info: Price and cut time (b-and-b)
└   t = 1.279372
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 280
│   lb = 2.6750252595280104
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 252
└   length(nodes) = 505
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62479
└   sum(fire_plans.plans_per_fire) = 22204
┌ Info: Time check
└   time() - start_time = 601.8650000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 281
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267423
┌ Info: Price and cut time (b-and-b)
└   t = 0.9405005
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 281
│   lb = 2.6750636002278934
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 253
└   length(nodes) = 507
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62607
└   sum(fire_plans.plans_per_fire) = 22230
┌ Info: Time check
└   time() - start_time = 602.8479998111725
┌ Info: Exploring node
└   branch_and_bound_node.ix = 342
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256929
┌ Info: Price and cut time (b-and-b)
└   t = 0.8631432
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 342
│   lb = 2.6750636002278934
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 254
└   length(nodes) = 509
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62739
└   sum(fire_plans.plans_per_fire) = 22268
┌ Info: Time check
└   time() - start_time = 603.75
┌ Info: Exploring node
└   branch_and_bound_node.ix = 343
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257198
┌ Info: Price and cut time (b-and-b)
└   t = 0.747593
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 343
│   lb = 2.6750640221511186
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 255
└   length(nodes) = 511
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62903
└   sum(fire_plans.plans_per_fire) = 22306
┌ Info: Time check
└   time() - start_time = 604.537999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 288
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028052
┌ Info: Price and cut time (b-and-b)
└   t = 1.1336181
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 288
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0   0   1  17  3  0  0
│     0   0   0  8   2   1  7  7  10   0   0  0  0  0
│     9   2   0  0   0   0  0  0   0   0   0  0  0  0
│     6  18  20  5   0   0  0  0   0   0   0  1  0  0
│     0   0   0  3  11  11  9  9   6  13   0  1  0  0
└     6   0   1  0   1   0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3676491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1608083
│   obj = 2.733517555409267
└   obj_bound = 2.733252118090287
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  9   3   2   8   8  11   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  12  12  10  10   7  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0370903
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3401201
│   obj = 2.7335175554092674
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  10   4   3   9   9  12   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   5  13  13  11  11   8  15   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0487385
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3829239
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 288
│   lb = 2.6750640221511186
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 256
└   length(nodes) = 513
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63393
└   sum(fire_plans.plans_per_fire) = 22541
┌ Info: Time check
└   time() - start_time = 609.5759999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 289
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221196
┌ Info: Price and cut time (b-and-b)
└   t = 1.1314853
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 289
│   lb = 2.6750947187092513
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 257
└   length(nodes) = 515
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63599
└   sum(fire_plans.plans_per_fire) = 22580
┌ Info: Time check
└   time() - start_time = 610.7829999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 392
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0216122
┌ Info: Price and cut time (b-and-b)
└   t = 0.5091505
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 392
│   lb = 2.6750947187092513
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 258
└   length(nodes) = 517
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63735
└   sum(fire_plans.plans_per_fire) = 22605
┌ Info: Time check
└   time() - start_time = 611.3289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 393
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224883
┌ Info: Price and cut time (b-and-b)
└   t = 1.2220484
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 393
│   lb = 2.6750966094446373
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 259
└   length(nodes) = 519
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63877
└   sum(fire_plans.plans_per_fire) = 22648
┌ Info: Time check
└   time() - start_time = 612.5889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 362
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307172
┌ Info: Price and cut time (b-and-b)
└   t = 1.3236004
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 362
│   lb = 2.6750966094446373
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 260
└   length(nodes) = 521
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64058
└   sum(fire_plans.plans_per_fire) = 22709
┌ Info: Time check
└   time() - start_time = 613.9579999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 363
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023822
┌ Info: Price and cut time (b-and-b)
└   t = 0.4425359
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 363
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0   0   0   1  17  2  0  0
│      0   0   0  7  6  9  9   0   0   0   0  0  0  0
│     10   1   0  0  0  0  0   0   0   0   0  0  0  0
│      5  19  20  6  0  0  0   0   0   0   0  1  0  0
│      0   0   0  3  6  3  6  16  16  13   0  1  0  0
└      6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3756217
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1658682
│   obj = 2.733517555409267
└   obj_bound = 2.733267328712248
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  8  7  10  10   1   1   1   1  1  1  1
│     11   2   1  1  1   1   1   1   1   1   1  1  1  1
│      6  20  21  7  1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  7   4   7  17  17  14   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5748092
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.283822
│   obj = 2.733517555409267
└   obj_bound = 2.7332840777298477
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  9  8  11  11   2   2   2   2  2  2  2
│     12   3   2  2  2   2   2   2   2   2   2  2  2  2
│      7  21  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8   5   8  18  18  15   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7063275
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2843911
│   obj = 2.733517555409267
└   obj_bound = 2.7332546640912896
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 363
│   lb = 2.6751028920213136
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 261
└   length(nodes) = 523
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64457
└   sum(fire_plans.plans_per_fire) = 22914
┌ Info: Time check
└   time() - start_time = 618.3259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 510
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231361
┌ Info: Price and cut time (b-and-b)
└   t = 1.1086414
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 510
│   lb = 2.6751028920213136
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 262
└   length(nodes) = 525
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64541
└   sum(fire_plans.plans_per_fire) = 22946
┌ Info: Time check
└   time() - start_time = 619.4719998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 511
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229536
┌ Info: Price and cut time (b-and-b)
└   t = 1.0154214
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 511
│   lb = 2.6751169128464976
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 263
└   length(nodes) = 527
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64624
└   sum(fire_plans.plans_per_fire) = 22979
┌ Info: Time check
└   time() - start_time = 620.5249998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 76
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260357
┌ Info: Price and cut time (b-and-b)
└   t = 1.5436878
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 76
│   lb = 2.6751169128464976
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 264
└   length(nodes) = 529
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64854
└   sum(fire_plans.plans_per_fire) = 23037
┌ Info: Time check
└   time() - start_time = 622.1079998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 77
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281022
┌ Info: Price and cut time (b-and-b)
└   t = 0.8499258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 77
│   lb = 2.6751293008322814
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 265
└   length(nodes) = 531
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65013
└   sum(fire_plans.plans_per_fire) = 23065
┌ Info: Time check
└   time() - start_time = 623.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 372
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230845
┌ Info: Price and cut time (b-and-b)
└   t = 0.7008437
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 372
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0   0   1  17  3  0  0
│     0   0   0  5   3  5  9  6   4   0   0  0  0  0
│     9   2   0  0   0  0  0  0   0   0   0  0  0  0
│     6  18  20  5   0  0  0  0   0   0   0  1  0  0
│     0   0   0  6  10  6  6  9  12  13   0  1  0  0
└     6   0   1  0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4562673
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.069448
│   obj = 2.7335175554092674
└   obj_bound = 2.7332481015366277
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   4  6  10   7   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  7   7  10  13  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1974746
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2859036
│   obj = 2.733517555409267
└   obj_bound = 2.7334627554092803
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   5  7  11   8   6   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  8   8  11  14  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7273967
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2874078
│   obj = 2.733517555409267
└   obj_bound = 2.733257479612391
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7335175554092674
┌ Info: current bounds
│   node_ix = 372
│   lb = 2.6751293008322814
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 266
└   length(nodes) = 533
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65637
└   sum(fire_plans.plans_per_fire) = 23292
┌ Info: Time check
└   time() - start_time = 627.2229998111725
┌ Info: Exploring node
└   branch_and_bound_node.ix = 373
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0222341
┌ Info: Price and cut time (b-and-b)
└   t = 1.3633516
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 373
│   lb = 2.6751354975916963
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 267
└   length(nodes) = 535
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65737
└   sum(fire_plans.plans_per_fire) = 23327
┌ Info: Time check
└   time() - start_time = 628.6219999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 428
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253386
┌ Info: Price and cut time (b-and-b)
└   t = 0.9183249
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 428
│   lb = 2.6751354975916963
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 268
└   length(nodes) = 537
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65783
└   sum(fire_plans.plans_per_fire) = 23356
┌ Info: Time check
└   time() - start_time = 629.579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 429
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233801
┌ Info: Price and cut time (b-and-b)
└   t = 1.1653589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 429
│   lb = 2.6751427947898967
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 269
└   length(nodes) = 539
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65899
└   sum(fire_plans.plans_per_fire) = 23399
┌ Info: Time check
└   time() - start_time = 630.7839999198914
┌ Info: Exploring node
└   branch_and_bound_node.ix = 516
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274292
┌ Info: Price and cut time (b-and-b)
└   t = 1.0610333
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 516
│   lb = 2.6751427947898967
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 270
└   length(nodes) = 541
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65990
└   sum(fire_plans.plans_per_fire) = 23434
┌ Info: Time check
└   time() - start_time = 631.9269998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 517
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239699
┌ Info: Price and cut time (b-and-b)
└   t = 1.4196666
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 517
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  1  2   0  17  3  0  0
│     0   0   0   0   0  8  11  6  6   0   0  0  0  0
│     9   2   0   0   0  0   0  0  0   0   0  0  0  0
│     6  18  20   5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  11  12  4   5  9  8  14   0  1  0  0
└     6   0   1   0   1  0   0  0  0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.436721
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0767391
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   2  3   1  18  4  1  1
│      1   1   1   1   1  9  12   7  7   1   1  1  1  1
│     10   3   1   1   1  1   1   1  1   1   1  1  1  1
│      7  19  21   6   1  1   1   1  1   1   1  2  1  1
│      1   1   1  12  13  5   6  10  9  15   1  2  1  1
└      7   1   2   1   2  1   1   1  1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2697601
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3070857
│   obj = 2.733517555409267
└   obj_bound = 2.7332690676309155
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   3   4   2  19  5  2  2
│      2   2   2   2   2  10  13   8   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14   6   7  11  10  16   2  3  2  2
└      8   2   3   2   3   2   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5372404
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3576429
│   obj = 2.733517555409267
└   obj_bound = 2.733292810143614
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 517
│   lb = 2.6751475125444486
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 271
└   length(nodes) = 543
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66581
└   sum(fire_plans.plans_per_fire) = 23682
┌ Info: Time check
└   time() - start_time = 636.9110000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 340
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254628
┌ Info: Price and cut time (b-and-b)
└   t = 0.7460874
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 340
│   lb = 2.6751475125444486
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 272
└   length(nodes) = 545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66710
└   sum(fire_plans.plans_per_fire) = 23717
┌ Info: Time check
└   time() - start_time = 637.6970000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 341
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271547
┌ Info: Price and cut time (b-and-b)
└   t = 0.918712
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 341
│   lb = 2.67514916754837
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 273
└   length(nodes) = 547
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66894
└   sum(fire_plans.plans_per_fire) = 23760
┌ Info: Time check
└   time() - start_time = 638.6579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 388
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260794
┌ Info: Price and cut time (b-and-b)
└   t = 0.698422
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 388
│   lb = 2.67514916754837
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 274
└   length(nodes) = 549
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67030
└   sum(fire_plans.plans_per_fire) = 23780
┌ Info: Time check
└   time() - start_time = 639.4389998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 389
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230528
┌ Info: Price and cut time (b-and-b)
└   t = 1.3409182
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 389
│   lb = 2.6751707979251487
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 275
└   length(nodes) = 551
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67225
└   sum(fire_plans.plans_per_fire) = 23835
┌ Info: Time check
└   time() - start_time = 640.8609998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 398
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251511
┌ Info: Price and cut time (b-and-b)
└   t = 0.7850427
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 398
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   1  1   1  17  2  0  0
│     0   0   0   0   0   0  11  12  8   0   0  0  0  0
│     9   2   0   0   0   0   0   0  0   0   0  0  0  0
│     6  19  20   5   0   0   0   0  0   0   0  1  0  0
│     0   0   0  11  12  11   5   3  8  12   0  1  0  0
└     6   0   1   0   1   0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7649981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2087691
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   2  2   2  18  3  1  1
│      1   1   1   1   1   1  12  13  9   1   1  1  1  1
│     10   3   1   1   1   1   1   1  1   1   1  1  1  1
│      7  20  21   6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  12  13  12   6   4  9  13   1  2  1  1
└      7   1   2   1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5587932
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3334684
│   obj = 2.733517555409267
└   obj_bound = 2.733265211469512
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   3   3   3  19  4  2  2
│      2   2   2   2   2   2  13  14  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  21  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13   7   5  10  14   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0006435
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3593172
│   obj = 2.733517555409267
└   obj_bound = 2.7333069662978637
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 398
│   lb = 2.6751707979251487
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 276
└   length(nodes) = 553
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67840
└   sum(fire_plans.plans_per_fire) = 24089
┌ Info: Time check
└   time() - start_time = 646.4159998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 399
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231111
┌ Info: Price and cut time (b-and-b)
└   t = 1.0970437
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 399
│   lb = 2.6751743258077654
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 277
└   length(nodes) = 555
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68010
└   sum(fire_plans.plans_per_fire) = 24126
┌ Info: Time check
└   time() - start_time = 647.5529999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 308
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241507
┌ Info: Price and cut time (b-and-b)
└   t = 1.3998914
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 308
│   lb = 2.6751743258077654
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 278
└   length(nodes) = 557
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68076
└   sum(fire_plans.plans_per_fire) = 24174
┌ Info: Time check
└   time() - start_time = 649.0309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 309
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291765
┌ Info: Price and cut time (b-and-b)
└   t = 1.2336347
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 309
│   lb = 2.6751793898918597
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 279
└   length(nodes) = 559
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68230
└   sum(fire_plans.plans_per_fire) = 24221
┌ Info: Time check
└   time() - start_time = 650.3090000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 344
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256493
┌ Info: Price and cut time (b-and-b)
└   t = 0.9594598
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 344
│   lb = 2.6751793898918597
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 280
└   length(nodes) = 561
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68376
└   sum(fire_plans.plans_per_fire) = 24258
┌ Info: Time check
└   time() - start_time = 651.3079998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 345
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0226424
┌ Info: Price and cut time (b-and-b)
└   t = 1.3566329
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 345
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   2  16  3  0  0
│     0   0   0  7  9  9  7   0   1   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  19  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  5  3  3  9  15  15  11   2  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4881548
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1103725
│   obj = 2.7335175554092674
└   obj_bound = 2.7335175554092674
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   3  17  4  1  1
│      1   1   1  8  10  10   8   1   2   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  20  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6   4   4  10  16  16  12   3  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0136858
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2494014
│   obj = 2.733517555409267
└   obj_bound = 2.7333461741330396
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  18  5  2  2
│      2   2   2  9  11  11   9   2   3   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  21  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7   5   5  11  17  17  13   4  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7229763
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2762996
│   obj = 2.733517555409267
└   obj_bound = 2.7332590647922728
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7335175554092674
┌ Info: current bounds
│   node_ix = 345
│   lb = 2.6751944269644348
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 281
└   length(nodes) = 563
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68844
└   sum(fire_plans.plans_per_fire) = 24467
┌ Info: Time check
└   time() - start_time = 656.0230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 424
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235154
┌ Info: Price and cut time (b-and-b)
└   t = 0.7715266
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 424
│   lb = 2.6751944269644348
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 282
└   length(nodes) = 565
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68982
└   sum(fire_plans.plans_per_fire) = 24501
┌ Info: Time check
└   time() - start_time = 656.8329999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 425
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286473
┌ Info: Price and cut time (b-and-b)
└   t = 1.07585
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 425
│   lb = 2.6752187794955495
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 283
└   length(nodes) = 567
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69015
└   sum(fire_plans.plans_per_fire) = 24535
┌ Info: Time check
└   time() - start_time = 657.9519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 370
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217536
┌ Info: Price and cut time (b-and-b)
└   t = 0.9031446
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 370
│   lb = 2.6752187794955495
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 284
└   length(nodes) = 569
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69079
└   sum(fire_plans.plans_per_fire) = 24568
┌ Info: Time check
└   time() - start_time = 658.8910000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 371
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249908
┌ Info: Price and cut time (b-and-b)
└   t = 0.7777131
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 371
│   lb = 2.6752233644800385
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 285
└   length(nodes) = 571
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69220
└   sum(fire_plans.plans_per_fire) = 24602
┌ Info: Time check
└   time() - start_time = 659.7079999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 472
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228015
┌ Info: Price and cut time (b-and-b)
└   t = 1.0071906
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 472
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0  0  0   1  17  3  0  0
│     0   0   0  6   2  2  10  7  6   0   0  0  0  0
│     9   2   0  0   0  0   0  0  0   0   0  0  0  0
│     6  18  20  5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  6  10  9   6  9  9  13   0  0  0  0
└     6   0   1  0   1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4827295
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1015338
│   obj = 2.733517555409267
└   obj_bound = 2.733517555409267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   3   3  11   8   7   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  10   7  10  10  14   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1540257
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2822952
│   obj = 2.733517555409267
└   obj_bound = 2.7333881550139876
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   4   4  12   9   8   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  11   8  11  11  15   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9489018
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4043886
│   obj = 2.733517555409267
└   obj_bound = 2.7333092309221847
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733517555409267
┌ Info: current bounds
│   node_ix = 472
│   lb = 2.6752233644800385
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 286
└   length(nodes) = 573
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69762
└   sum(fire_plans.plans_per_fire) = 24851
┌ Info: Time check
└   time() - start_time = 664.5979998111725
┌ Info: Exploring node
└   branch_and_bound_node.ix = 473
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224213
┌ Info: Price and cut time (b-and-b)
└   t = 1.6881585
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 473
│   lb = 2.6752355293170624
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 287
└   length(nodes) = 575
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69984
└   sum(fire_plans.plans_per_fire) = 24921
┌ Info: Time check
└   time() - start_time = 666.3229999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 270
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244686
┌ Info: Price and cut time (b-and-b)
└   t = 0.4586389
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 270
│   lb = 2.6752355293170624
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 288
└   length(nodes) = 577
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70067
└   sum(fire_plans.plans_per_fire) = 24941
┌ Info: Time check
└   time() - start_time = 666.8199999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 271
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267387
┌ Info: Price and cut time (b-and-b)
└   t = 1.4080498
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 271
│   lb = 2.675238773841227
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 289
└   length(nodes) = 579
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70204
└   sum(fire_plans.plans_per_fire) = 24994
┌ Info: Time check
└   time() - start_time = 668.2679998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 416
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241041
┌ Info: Price and cut time (b-and-b)
└   t = 1.2753779
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 416
│   lb = 2.675238773841227
└   ub = 2.733517555409267
┌ Info: number of nodes
│   node_explored_count = 290
└   length(nodes) = 581
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70385
└   sum(fire_plans.plans_per_fire) = 25038
┌ Info: Time check
└   time() - start_time = 669.5820000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 417
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235787
┌ Info: Price and cut time (b-and-b)
└   t = 0.5091472
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 417
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   1  17  3  0  0
│      0   0   0   1  6  7  10  6   3   0   0  0  0  0
│     10   1   0   0  0  0   0  0   0   0   0  0  0  0
│      5  19  20   6  0  0   0  0   0   0   0  1  0  0
│      0   0   0  10  6  5   6  9  13  12   1  0  0  0
└      6   0   1   0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4671415
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2262554
│   obj = 2.7330902946912383
└   obj_bound = 2.7329773280349032
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   2  7  8  11   7   4   1   1  1  1  1
│     11   2   1   1  1  1   1   1   1   1   1  1  1  1
│      6  20  21   7  1  1   1   1   1   1   1  2  1  1
│      1   1   1  11  7  6   7  10  14  13   2  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9024926
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4082535
│   obj = 2.7330902946912388
└   obj_bound = 2.7328367674426097
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   3  19  5  2  2
│      2   2   2   3  8  9  12   8   5   2   2  2  2  2
│     12   3   2   2  2  2   2   2   2   2   2  2  2  2
│      7  21  22   8  2  2   2   2   2   2   2  3  2  2
│      2   2   2  12  8  7   8  11  15  14   3  2  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0207231
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3763759
│   obj = 2.7330902946912388
└   obj_bound = 2.732831996474655
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330902946912383
┌ Info: current bounds
│   node_ix = 417
│   lb = 2.6752418228707513
└   ub = 2.7330902946912383
┌ Info: number of nodes
│   node_explored_count = 291
└   length(nodes) = 583
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70886
└   sum(fire_plans.plans_per_fire) = 25242
┌ Info: Time check
└   time() - start_time = 674.0239999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 356
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023678
┌ Info: Price and cut time (b-and-b)
└   t = 1.2182814
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 356
│   lb = 2.6752418228707513
└   ub = 2.7330902946912383
┌ Info: number of nodes
│   node_explored_count = 292
└   length(nodes) = 585
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71082
└   sum(fire_plans.plans_per_fire) = 25290
┌ Info: Time check
└   time() - start_time = 675.2809998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 357
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0343923
┌ Info: Price and cut time (b-and-b)
└   t = 1.1415407
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 357
│   lb = 2.675250507816638
└   ub = 2.7330902946912383
┌ Info: number of nodes
│   node_explored_count = 293
└   length(nodes) = 587
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71135
└   sum(fire_plans.plans_per_fire) = 25322
┌ Info: Time check
└   time() - start_time = 676.4739999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 316
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237435
┌ Info: Price and cut time (b-and-b)
└   t = 1.0639844
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 316
│   lb = 2.675250507816638
└   ub = 2.7330902946912383
┌ Info: number of nodes
│   node_explored_count = 294
└   length(nodes) = 589
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71220
└   sum(fire_plans.plans_per_fire) = 25372
┌ Info: Time check
└   time() - start_time = 677.5759999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 317
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233408
┌ Info: Price and cut time (b-and-b)
└   t = 1.4438433
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 317
│   lb = 2.675251573957843
└   ub = 2.7330902946912383
┌ Info: number of nodes
│   node_explored_count = 295
└   length(nodes) = 591
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71423
└   sum(fire_plans.plans_per_fire) = 25439
┌ Info: Time check
└   time() - start_time = 679.0569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 456
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280539
┌ Info: Price and cut time (b-and-b)
└   t = 0.6488392
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 456
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   1  17  3  0  0
│     0   0   0  6   2   2  6  9  6   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  5  10  10  9  6  9  13   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5171785
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2083525
│   obj = 2.733003294691239
└   obj_bound = 2.7329410499284816
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   3   3   7  10   7   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11  10   7  10  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9999743
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2801254
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   4   4   8  11   8   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12  11   8  11  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8000168
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7186353
│   obj = 2.7330032946912386
└   obj_bound = 2.7327820884412053
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.733003294691239
┌ Info: current bounds
│   node_ix = 456
│   lb = 2.675251573957843
└   ub = 2.733003294691239
┌ Info: number of nodes
│   node_explored_count = 296
└   length(nodes) = 593
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71993
└   sum(fire_plans.plans_per_fire) = 25673
┌ Info: Time check
└   time() - start_time = 683.7990000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 457
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267966
┌ Info: Price and cut time (b-and-b)
└   t = 1.0674394
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 457
│   lb = 2.6752522522824087
└   ub = 2.733003294691239
┌ Info: number of nodes
│   node_explored_count = 297
└   length(nodes) = 595
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72141
└   sum(fire_plans.plans_per_fire) = 25733
┌ Info: Time check
└   time() - start_time = 684.9069998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 452
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288038
┌ Info: Price and cut time (b-and-b)
└   t = 0.83047
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 452
│   lb = 2.6752522522824087
└   ub = 2.733003294691239
┌ Info: number of nodes
│   node_explored_count = 298
└   length(nodes) = 597
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72211
└   sum(fire_plans.plans_per_fire) = 25764
┌ Info: Time check
└   time() - start_time = 685.7799999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 453
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027116
┌ Info: Price and cut time (b-and-b)
└   t = 1.2707279
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 453
│   lb = 2.6752576325167983
└   ub = 2.733003294691239
┌ Info: number of nodes
│   node_explored_count = 299
└   length(nodes) = 599
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72465
└   sum(fire_plans.plans_per_fire) = 25819
┌ Info: Time check
└   time() - start_time = 687.0929999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 268
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232814
┌ Info: Price and cut time (b-and-b)
└   t = 0.8696627
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 268
│   lb = 2.6752576325167983
└   ub = 2.733003294691239
┌ Info: number of nodes
│   node_explored_count = 300
└   length(nodes) = 601
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72541
└   sum(fire_plans.plans_per_fire) = 25853
┌ Info: Time check
└   time() - start_time = 688.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 269
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266333
┌ Info: Price and cut time (b-and-b)
└   t = 1.0988359
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 269
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  17  2  0  0
│     0   0   0  5  7  2  10  8   2   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  6  6  9   6  8  14  12   0  1  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.484916
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0959941
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1  1   1   2  18  3  1  1
│      1   1   1  6  8   3  11  9   3   1   1  1  1  1
│     10   3   1  1  1   1   1  1   1   1   1  1  1  1
│      7  19  21  6  1   1   1  1   1   1   1  2  1  1
│      1   1   1  7  7  10   7  9  15  13   1  2  1  1
└      7   1   2  1  2   1   1  1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3994143
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2772353
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  7  9   4  12  10   4   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  11   8  10  16  14   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.839598
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6953518
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 269
│   lb = 2.675263227224291
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 301
└   length(nodes) = 603
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73069
└   sum(fire_plans.plans_per_fire) = 26086
┌ Info: Time check
└   time() - start_time = 693.4029998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 544
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256204
┌ Info: Price and cut time (b-and-b)
└   t = 1.2723586
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 544
│   lb = 2.675263227224291
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 302
└   length(nodes) = 605
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73166
└   sum(fire_plans.plans_per_fire) = 26119
┌ Info: Time check
└   time() - start_time = 694.7159998416901
┌ Info: Exploring node
└   branch_and_bound_node.ix = 545
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315523
┌ Info: Price and cut time (b-and-b)
└   t = 2.0496481
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 545
│   lb = 2.675263457689055
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 303
└   length(nodes) = 607
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73382
└   sum(fire_plans.plans_per_fire) = 26187
┌ Info: Time check
└   time() - start_time = 696.811999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 108
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0208404
┌ Info: Price and cut time (b-and-b)
└   t = 0.9843468
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 108
│   lb = 2.675263457689055
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 304
└   length(nodes) = 609
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73525
└   sum(fire_plans.plans_per_fire) = 26229
┌ Info: Time check
└   time() - start_time = 697.8339998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 109
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245001
┌ Info: Price and cut time (b-and-b)
└   t = 1.3464849
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 109
│   lb = 2.675270204397183
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 305
└   length(nodes) = 611
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73671
└   sum(fire_plans.plans_per_fire) = 26270
┌ Info: Time check
└   time() - start_time = 699.2189998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 594
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291734
┌ Info: Price and cut time (b-and-b)
└   t = 0.8762495
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 594
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0  0  0   1  17  3  0  0
│     0   0   0  5   1   1  6  9  9   0   0  0  0  0
│     9   2   0  0   0   0  0  0  0   0   0  0  0  0
│     6  18  20  5   0   0  0  0  0   0   0  1  0  0
│     0   0   0  7  11  11  9  7  7  13   0  1  0  0
└     6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7657438
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1217286
│   obj = 2.7330032946912386
└   obj_bound = 2.7327560784770997
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  6   2   2   7  10  10   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  8  12  12  10   8   8  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9473994
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2937808
│   obj = 2.7330032946912386
└   obj_bound = 2.732822498883274
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  7   3   3   8  11  11   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  13  13  11   9   9  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7037731
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3283649
│   obj = 2.7330032946912386
└   obj_bound = 2.7327434693879344
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 594
│   lb = 2.675270204397183
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 306
└   length(nodes) = 613
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74155
└   sum(fire_plans.plans_per_fire) = 26487
┌ Info: Time check
└   time() - start_time = 703.8349997997284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 595
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241955
┌ Info: Price and cut time (b-and-b)
└   t = 1.6240794
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 595
│   lb = 2.6752702810817652
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 307
└   length(nodes) = 615
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74330
└   sum(fire_plans.plans_per_fire) = 26537
┌ Info: Time check
└   time() - start_time = 705.5
┌ Info: Exploring node
└   branch_and_bound_node.ix = 396
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280641
┌ Info: Price and cut time (b-and-b)
└   t = 1.0661276
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 396
│   lb = 2.6752702810817652
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 308
└   length(nodes) = 617
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74406
└   sum(fire_plans.plans_per_fire) = 26570
┌ Info: Time check
└   time() - start_time = 706.6079998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 397
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220807
┌ Info: Price and cut time (b-and-b)
└   t = 0.9197022
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 397
│   lb = 2.67527323640443
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 309
└   length(nodes) = 619
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74525
└   sum(fire_plans.plans_per_fire) = 26595
┌ Info: Time check
└   time() - start_time = 707.5639998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 96
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262363
┌ Info: Price and cut time (b-and-b)
└   t = 1.1727605
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 96
│   lb = 2.67527323640443
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 310
└   length(nodes) = 621
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74687
└   sum(fire_plans.plans_per_fire) = 26640
┌ Info: Time check
└   time() - start_time = 708.7760000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 97
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0522418
┌ Info: Price and cut time (b-and-b)
└   t = 0.9021447
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 97
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  7  7  4  6  6   3   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  5  6  8  9  9  12  13   0  0  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3767181
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0877756
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  8  8  5   7   7   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  9  10  10  13  14   1  1  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9047034
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2897753
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  9  9   6   8   8   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  10  11  11  14  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6258668
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5312197
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 97
│   lb = 2.67529453474598
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 311
└   length(nodes) = 623
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75246
└   sum(fire_plans.plans_per_fire) = 26877
┌ Info: Time check
└   time() - start_time = 713.0390000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 506
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299371
┌ Info: Price and cut time (b-and-b)
└   t = 0.4133649
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 506
│   lb = 2.67529453474598
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 312
└   length(nodes) = 625
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75272
└   sum(fire_plans.plans_per_fire) = 26892
┌ Info: Time check
└   time() - start_time = 713.4979999065399
┌ Info: Exploring node
└   branch_and_bound_node.ix = 507
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269968
┌ Info: Price and cut time (b-and-b)
└   t = 1.0471736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 507
│   lb = 2.675297434341716
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 313
└   length(nodes) = 627
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75428
└   sum(fire_plans.plans_per_fire) = 26925
┌ Info: Time check
└   time() - start_time = 714.5920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 368
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274624
┌ Info: Price and cut time (b-and-b)
└   t = 1.1534143
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 368
│   lb = 2.675297434341716
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 314
└   length(nodes) = 629
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75508
└   sum(fire_plans.plans_per_fire) = 26953
┌ Info: Time check
└   time() - start_time = 715.789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 369
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261011
┌ Info: Price and cut time (b-and-b)
└   t = 1.3266226
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 369
│   lb = 2.6752996280707024
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 315
└   length(nodes) = 631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75639
└   sum(fire_plans.plans_per_fire) = 27005
┌ Info: Time check
└   time() - start_time = 717.1569998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 384
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295153
┌ Info: Price and cut time (b-and-b)
└   t = 0.9540856
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 384
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0  0  0   1  17  3  0  0
│     0   0   0  7  6   0   6  6  6   0   0  0  0  0
│     9   2   0  0  0   0   0  0  0   0   0  0  0  0
│     6  18  20  6  0   0   0  0  0   0   0  1  0  0
│     0   0   0  3  6  11  10  9  9  13   0  0  0  0
└     6   0   1  0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4695134
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1067374
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  8  7   1   7   7   7   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  7  1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  7  12  11  10  10  14   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9949962
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3152642
│   obj = 2.7330032946912386
└   obj_bound = 2.732761406878374
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  9  8   2   8   8   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8  13  12  11  11  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9110909
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5117878
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 384
│   lb = 2.6752996280707024
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 316
└   length(nodes) = 633
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76141
└   sum(fire_plans.plans_per_fire) = 27237
┌ Info: Time check
└   time() - start_time = 721.9579999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 385
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314747
┌ Info: Price and cut time (b-and-b)
└   t = 1.016468
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 385
│   lb = 2.675308997006554
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 317
└   length(nodes) = 635
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76229
└   sum(fire_plans.plans_per_fire) = 27266
┌ Info: Time check
└   time() - start_time = 723.0209999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 576
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023238
┌ Info: Price and cut time (b-and-b)
└   t = 1.0268813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 576
│   lb = 2.675308997006554
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 318
└   length(nodes) = 637
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76288
└   sum(fire_plans.plans_per_fire) = 27297
┌ Info: Time check
└   time() - start_time = 724.0849997997284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 577
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269934
┌ Info: Price and cut time (b-and-b)
└   t = 1.273825
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 577
│   lb = 2.675309112151791
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 319
└   length(nodes) = 639
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76463
└   sum(fire_plans.plans_per_fire) = 27333
┌ Info: Time check
└   time() - start_time = 725.3999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 476
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292727
┌ Info: Price and cut time (b-and-b)
└   t = 0.7458951
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 476
│   lb = 2.675309112151791
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 320
└   length(nodes) = 641
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76650
└   sum(fire_plans.plans_per_fire) = 27374
┌ Info: Time check
└   time() - start_time = 726.1899998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 477
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251335
┌ Info: Price and cut time (b-and-b)
└   t = 1.0028382
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 477
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0   0   1  17  2  0  0
│     0   0   0  4   2  6  9  9   2   0   0  0  0  0
│     9   2   0  0   0  0  0  0   0   0   0  0  0  0
│     6  18  20  5   0  0  0  0   0   0   0  1  0  0
│     0   0   0  8  11  5  6  6  14  13   0  1  0  0
└     6   0   1  0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4935453
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0815522
│   obj = 2.7330032946912386
└   obj_bound = 2.732751040298871
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  3  1  1
│      1   1   1  5   3  7  10  10   3   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  9  12  6   7   7  15  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3962904
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4687972
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  4  2  2
│      2   2   2   6   4  8  11  11   4   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  10  13  7   8   8  16  15   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9019884
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8072051
│   obj = 2.733003294691239
└   obj_bound = 2.7327547326648447
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 477
│   lb = 2.6753094045892887
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 321
└   length(nodes) = 643
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77256
└   sum(fire_plans.plans_per_fire) = 27644
┌ Info: Time check
└   time() - start_time = 732.8980000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 264
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296412
┌ Info: Price and cut time (b-and-b)
└   t = 1.043302
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 264
│   lb = 2.6753094045892887
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 322
└   length(nodes) = 645
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77333
└   sum(fire_plans.plans_per_fire) = 27664
┌ Info: Time check
└   time() - start_time = 733.9849998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 265
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0375715
┌ Info: Price and cut time (b-and-b)
└   t = 0.449915
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 265
│   lb = 2.6753114035677243
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 323
└   length(nodes) = 647
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77398
└   sum(fire_plans.plans_per_fire) = 27676
┌ Info: Time check
└   time() - start_time = 734.4869999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 642
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.034399
┌ Info: Price and cut time (b-and-b)
└   t = 1.002836
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 642
│   lb = 2.6753114035677243
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 324
└   length(nodes) = 649
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77481
└   sum(fire_plans.plans_per_fire) = 27704
┌ Info: Time check
└   time() - start_time = 735.5720000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 643
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339705
┌ Info: Price and cut time (b-and-b)
└   t = 1.5683308
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 643
│   lb = 2.675319757484464
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 325
└   length(nodes) = 651
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77690
└   sum(fire_plans.plans_per_fire) = 27752
┌ Info: Time check
└   time() - start_time = 737.1889998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 320
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286923
┌ Info: Price and cut time (b-and-b)
└   t = 1.0646565
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 320
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  2  0  0
│     0   0   0  5  3  9  6  6   2   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  19  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  6  9  2  9  9  14  13   0  1  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9879143
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2306763
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  3  1  1
│      1   1   1  6   4  10   7   7   3   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  20  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  10   3  10  10  15  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5886838
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5483192
│   obj = 2.7330032946912386
└   obj_bound = 2.7327422042102163
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  7   5  11   8   8   4   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  21  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  11   4  11  11  16  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9717647
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6565751
│   obj = 2.7330032946912386
└   obj_bound = 2.73274581063816
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 320
│   lb = 2.675319757484464
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 326
└   length(nodes) = 653
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78024
└   sum(fire_plans.plans_per_fire) = 28010
┌ Info: Time check
└   time() - start_time = 743.7779998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 321
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280114
┌ Info: Price and cut time (b-and-b)
└   t = 1.6393101
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 321
│   lb = 2.675360021012227
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 327
└   length(nodes) = 655
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78103
└   sum(fire_plans.plans_per_fire) = 28049
┌ Info: Time check
└   time() - start_time = 745.4589998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 376
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348631
┌ Info: Price and cut time (b-and-b)
└   t = 0.7434975
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 376
│   lb = 2.675360021012227
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 328
└   length(nodes) = 657
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78193
└   sum(fire_plans.plans_per_fire) = 28074
┌ Info: Time check
└   time() - start_time = 746.2519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 377
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330039
┌ Info: Price and cut time (b-and-b)
└   t = 1.2789597
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 377
│   lb = 2.6753640799285963
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 329
└   length(nodes) = 659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78395
└   sum(fire_plans.plans_per_fire) = 28123
┌ Info: Time check
└   time() - start_time = 747.5789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 532
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.036893
┌ Info: Price and cut time (b-and-b)
└   t = 1.0796726
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 532
│   lb = 2.6753640799285963
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 330
└   length(nodes) = 661
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78453
└   sum(fire_plans.plans_per_fire) = 28156
┌ Info: Time check
└   time() - start_time = 748.7419998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 533
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0356464
┌ Info: Price and cut time (b-and-b)
└   t = 1.2283538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 533
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0  0   0   1  17  3  0  0
│     0   0   0  5   1  7  10  7   4   0   0  0  0  0
│     9   2   0  0   0  0   0  0   0   0   0  0  0  0
│     6  19  20  5   0  0   0  0   0   0   0  1  0  0
│     0   0   0  6  11  5   6  9  11  13   0  1  0  0
└     6   0   1  0   1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8064165
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2360492
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   2  8  11   8   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  20  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  12  6   7  10  12  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7460298
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.625838
│   obj = 2.7330032946912386
└   obj_bound = 2.7327699134025467
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   3  9  12   9   6   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  21  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  13  7   8  11  13  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0618559
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8380442
│   obj = 2.7330032946912386
└   obj_bound = 2.7328860946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 533
│   lb = 2.675395480642145
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 331
└   length(nodes) = 663
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78952
└   sum(fire_plans.plans_per_fire) = 28453
┌ Info: Time check
└   time() - start_time = 755.9700000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 612
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028811
┌ Info: Price and cut time (b-and-b)
└   t = 1.1708083
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 612
│   lb = 2.675395480642145
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 332
└   length(nodes) = 665
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78994
└   sum(fire_plans.plans_per_fire) = 28480
┌ Info: Time check
└   time() - start_time = 757.1840000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 613
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0351293
┌ Info: Price and cut time (b-and-b)
└   t = 1.6685461
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 613
│   lb = 2.675409669591093
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 333
└   length(nodes) = 667
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79090
└   sum(fire_plans.plans_per_fire) = 28528
┌ Info: Time check
└   time() - start_time = 758.9029998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 592
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323413
┌ Info: Price and cut time (b-and-b)
└   t = 1.6018424
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 592
│   lb = 2.675409669591093
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 334
└   length(nodes) = 669
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79234
└   sum(fire_plans.plans_per_fire) = 28582
┌ Info: Time check
└   time() - start_time = 760.5519998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 593
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0345338
┌ Info: Price and cut time (b-and-b)
└   t = 1.8375215
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 593
│   lb = 2.6754127262088314
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 335
└   length(nodes) = 671
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79418
└   sum(fire_plans.plans_per_fire) = 28630
┌ Info: Time check
└   time() - start_time = 762.4399998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 492
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307454
┌ Info: Price and cut time (b-and-b)
└   t = 0.764998
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 492
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0   0   0   3  16  3  0  0
│     0   0   0  3   1  6  10  10   4   0   0  0  0  0
│     9   2   0  0   0  0   0   0   0   0   0  0  0  0
│     6  18  20  5   0  0   0   0   0   0   0  1  0  0
│     0   0   0  8  12  5   6   6  12  11   2  0  0  0
└     6   0   1  0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6109967
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2227401
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   4  17  4  1  1
│      1   1   1  4   2  7  11  11   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  9  13  6   7   7  13  12   3  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3514331
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5949309
│   obj = 2.7330032946912386
└   obj_bound = 2.7327414252558984
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   5  18  5  2  2
│      2   2   2   5   3  8  12  12   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  10  14  7   8   8  14  13   4  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8683763
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6189372
│   obj = 2.7330032946912386
└   obj_bound = 2.73286595693006
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 492
│   lb = 2.6754127262088314
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 336
└   length(nodes) = 673
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79921
└   sum(fire_plans.plans_per_fire) = 28850
┌ Info: Time check
└   time() - start_time = 768.037999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 493
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276968
┌ Info: Price and cut time (b-and-b)
└   t = 1.6639374
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 493
│   lb = 2.675416895905781
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 337
└   length(nodes) = 675
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80151
└   sum(fire_plans.plans_per_fire) = 28920
┌ Info: Time check
└   time() - start_time = 769.7439999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 386
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.035167
┌ Info: Price and cut time (b-and-b)
└   t = 0.6461358
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 386
│   lb = 2.675416895905781
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 338
└   length(nodes) = 677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80239
└   sum(fire_plans.plans_per_fire) = 28940
┌ Info: Time check
└   time() - start_time = 770.4409999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 387
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299732
┌ Info: Price and cut time (b-and-b)
└   t = 1.6165747
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 387
│   lb = 2.6754170917847184
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 339
└   length(nodes) = 679
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80404
└   sum(fire_plans.plans_per_fire) = 28979
┌ Info: Time check
└   time() - start_time = 772.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 662
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332485
┌ Info: Price and cut time (b-and-b)
└   t = 0.6866687
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 662
│   lb = 2.6754170917847184
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 340
└   length(nodes) = 681
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80514
└   sum(fire_plans.plans_per_fire) = 29007
┌ Info: Time check
└   time() - start_time = 772.8369998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 663
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273336
┌ Info: Price and cut time (b-and-b)
└   t = 1.4394595
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 663
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0  0   0   1  17  3  0  0
│     0   0   0  7   0  7  10  7   4   0   0  0  0  0
│     9   2   0  0   0  0   0  0   0   0   0  0  0  0
│     6  18  20  5   0  0   0  0   0   0   0  1  0  0
│     0   0   0  5  12  5   6  9  12  13   0  1  0  0
└     6   0   1  0   1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4584379
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2010821
│   obj = 2.7330032946912386
└   obj_bound = 2.732916038264354
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  8   1  8  11   8   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  13  6   7  10  13  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2935586
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5100023
│   obj = 2.7330032946912386
└   obj_bound = 2.7328893643951666
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  9   2  9  12   9   6   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  14  7   8  11  14  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0609651
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 3.1391665
│   obj = 2.7330032946912386
└   obj_bound = 2.7330032946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7330032946912386
┌ Info: current bounds
│   node_ix = 663
│   lb = 2.675427794443674
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 341
└   length(nodes) = 683
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81059
└   sum(fire_plans.plans_per_fire) = 29273
┌ Info: Time check
└   time() - start_time = 781.4930000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 410
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306052
┌ Info: Price and cut time (b-and-b)
└   t = 1.3688232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 410
│   lb = 2.675427794443674
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 342
└   length(nodes) = 685
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81181
└   sum(fire_plans.plans_per_fire) = 29312
┌ Info: Time check
└   time() - start_time = 782.9069998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 411
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0338675
┌ Info: Price and cut time (b-and-b)
└   t = 1.3881643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 411
│   lb = 2.675429355015885
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 343
└   length(nodes) = 687
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81333
└   sum(fire_plans.plans_per_fire) = 29363
┌ Info: Time check
└   time() - start_time = 784.3429999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 566
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282644
┌ Info: Price and cut time (b-and-b)
└   t = 0.5075204
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 566
│   lb = 2.675429355015885
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 344
└   length(nodes) = 689
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81353
└   sum(fire_plans.plans_per_fire) = 29380
┌ Info: Time check
└   time() - start_time = 784.8929998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 567
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260624
┌ Info: Price and cut time (b-and-b)
└   t = 0.966148
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 567
│   lb = 2.6754322989616006
└   ub = 2.7330032946912386
┌ Info: number of nodes
│   node_explored_count = 345
└   length(nodes) = 691
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81489
└   sum(fire_plans.plans_per_fire) = 29424
┌ Info: Time check
└   time() - start_time = 785.8999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 360
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307223
┌ Info: Price and cut time (b-and-b)
└   t = 1.4293423
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 360
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   3  14  4  0  0
│     0   0   0  7  6  8  9   1   0   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  6  0  0  0   0   0   0   0  0  0  0
│     0   0   0  3  6  3  6  15  15  11   3  0  0  0
└     6   1   1  0  1  1  0   0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6299353
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1632416
│   obj = 2.732929717893051
└   obj_bound = 2.732929717893051
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   4  15  5  1  1
│      1   1   1  8  7  9  10   2   1   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  7  1  1   1   1   1   1   1  1  1  1
│      1   1   1  4  7  4   7  16  16  12   4  1  1  1
└      7   2   2  1  2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0106722
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5597888
│   obj = 2.732929717893051
└   obj_bound = 2.732929717893051
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   5  16  6  2  2
│      2   2   2  9  8  10  11   3   2   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  8  2   2   2   2   2   2   2  2  2  2
│      2   2   2  5  8   5   8  17  17  13   5  2  2  2
└      8   3   3  2  3   3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8474389
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5178686
│   obj = 2.7329297178930516
└   obj_bound = 2.732929717893051
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732929717893051
┌ Info: current bounds
│   node_ix = 360
│   lb = 2.6754322989616006
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 346
└   length(nodes) = 693
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82114
└   sum(fire_plans.plans_per_fire) = 29663
┌ Info: Time check
└   time() - start_time = 792.6299998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 361
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300112
┌ Info: Price and cut time (b-and-b)
└   t = 0.3114578
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 361
│   lb = 2.675437610386753
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 347
└   length(nodes) = 695
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82156
└   sum(fire_plans.plans_per_fire) = 29673
┌ Info: Time check
└   time() - start_time = 792.9859998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 278
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028633
┌ Info: Price and cut time (b-and-b)
└   t = 0.8339951
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 278
│   lb = 2.675437610386753
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 348
└   length(nodes) = 697
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82216
└   sum(fire_plans.plans_per_fire) = 29692
┌ Info: Time check
└   time() - start_time = 793.8619999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 279
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293658
┌ Info: Price and cut time (b-and-b)
└   t = 1.1279795
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 279
│   lb = 2.675438607035872
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 349
└   length(nodes) = 699
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82352
└   sum(fire_plans.plans_per_fire) = 29737
┌ Info: Time check
└   time() - start_time = 795.0709998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 656
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270052
┌ Info: Price and cut time (b-and-b)
└   t = 1.1355465
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 656
│   lb = 2.675438607035872
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 350
└   length(nodes) = 701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82388
└   sum(fire_plans.plans_per_fire) = 29763
┌ Info: Time check
└   time() - start_time = 796.2489998340607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 657
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0760605
┌ Info: Price and cut time (b-and-b)
└   t = 0.7399431
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 657
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  3  6  9  6   4   3   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  19  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  8  6  2  9  12  12  13   0  0  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5513872
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1479457
│   obj = 2.732929717893051
└   obj_bound = 2.732929717893051
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  4  7  10   7   5   4   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  20  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  9  7   3  10  13  13  14   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1305456
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.370155
│   obj = 2.732929717893051
└   obj_bound = 2.732769886537558
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   5  8  11   8   6   5   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  21  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  10  8   4  11  14  14  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7802272
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4571932
│   obj = 2.732929717893051
└   obj_bound = 2.7327576194445826
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732929717893051
┌ Info: current bounds
│   node_ix = 657
│   lb = 2.6754403315537107
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 351
└   length(nodes) = 703
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82777
└   sum(fire_plans.plans_per_fire) = 29987
┌ Info: Time check
└   time() - start_time = 800.981999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 352
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251151
┌ Info: Price and cut time (b-and-b)
└   t = 0.8807009
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 352
│   lb = 2.6754403315537107
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 352
└   length(nodes) = 705
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82849
└   sum(fire_plans.plans_per_fire) = 30011
┌ Info: Time check
└   time() - start_time = 801.9389998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 353
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253102
┌ Info: Price and cut time (b-and-b)
└   t = 1.4732762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 353
│   lb = 2.675444533885995
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 353
└   length(nodes) = 707
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83013
└   sum(fire_plans.plans_per_fire) = 30060
┌ Info: Time check
└   time() - start_time = 803.4559998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 226
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240356
┌ Info: Price and cut time (b-and-b)
└   t = 0.8708557
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 226
│   lb = 2.675444533885995
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 354
└   length(nodes) = 709
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83142
└   sum(fire_plans.plans_per_fire) = 30091
┌ Info: Time check
└   time() - start_time = 804.3650000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 227
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246389
┌ Info: Price and cut time (b-and-b)
└   t = 1.2029885
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 227
│   lb = 2.6754462795370686
└   ub = 2.732929717893051
┌ Info: number of nodes
│   node_explored_count = 355
└   length(nodes) = 711
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83305
└   sum(fire_plans.plans_per_fire) = 30130
┌ Info: Time check
└   time() - start_time = 805.6079998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 470
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257487
┌ Info: Price and cut time (b-and-b)
└   t = 0.8310017
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 470
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   1  17  3  0  0
│     0   0   0  11  10  9   3   0   0   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   5   0  0   0   0   0   0   0  1  0  0
│     0   0   0   0   3  3  13  15  16  12   1  1  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6529325
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1393333
│   obj = 2.7327969019454015
└   obj_bound = 2.7327969019454015
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  12  11  10   4   1   1   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1   1   4   4  14  16  17  13   2  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1725715
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3505054
│   obj = 2.7327969019454015
└   obj_bound = 2.732795330080217
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  13  12  11   5   2   2   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2   5   5  15  17  18  14   3  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7878695
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5947143
│   obj = 2.7327969019454015
└   obj_bound = 2.7325277087512863
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7327969019454015
┌ Info: current bounds
│   node_ix = 470
│   lb = 2.6754462795370686
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 356
└   length(nodes) = 713
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83743
└   sum(fire_plans.plans_per_fire) = 30353
┌ Info: Time check
└   time() - start_time = 810.7219998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 471
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024574
┌ Info: Price and cut time (b-and-b)
└   t = 0.9041669
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 471
│   lb = 2.675448952001461
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 357
└   length(nodes) = 715
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83860
└   sum(fire_plans.plans_per_fire) = 30397
┌ Info: Time check
└   time() - start_time = 811.6640000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 166
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293166
┌ Info: Price and cut time (b-and-b)
└   t = 1.1890815
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 166
│   lb = 2.675448952001461
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 358
└   length(nodes) = 717
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84020
└   sum(fire_plans.plans_per_fire) = 30441
┌ Info: Time check
└   time() - start_time = 812.8959999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 167
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283539
┌ Info: Price and cut time (b-and-b)
└   t = 1.2904486
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 167
│   lb = 2.6754490992165856
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 359
└   length(nodes) = 719
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84096
└   sum(fire_plans.plans_per_fire) = 30479
┌ Info: Time check
└   time() - start_time = 814.2289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 318
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254347
┌ Info: Price and cut time (b-and-b)
└   t = 1.2608233
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 318
│   lb = 2.6754490992165856
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 360
└   length(nodes) = 721
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84260
└   sum(fire_plans.plans_per_fire) = 30540
┌ Info: Time check
└   time() - start_time = 815.5289998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 319
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244899
┌ Info: Price and cut time (b-and-b)
└   t = 1.2097333
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 319
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   2  17  2  0  0
│     0   0   0  9  6  8  6   0   1   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  2  6  3  9  15  14  12   0  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4557516
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0723132
│   obj = 2.7327969019454015
└   obj_bound = 2.7325975639913116
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  10  7  9   7   1   2   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1   3  7  4  10  16  15  13   1  2  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4167709
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3817107
│   obj = 2.7327969019454015
└   obj_bound = 2.7325556409572442
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  11  8  10   8   2   3   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   4  8   5  11  17  16  14   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1642974
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6147332
│   obj = 2.7327969019454015
└   obj_bound = 2.7327969019454015
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7327969019454015
┌ Info: current bounds
│   node_ix = 319
│   lb = 2.675449099216586
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 361
└   length(nodes) = 723
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84984
└   sum(fire_plans.plans_per_fire) = 30811
┌ Info: Time check
└   time() - start_time = 821.3599998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 722
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254409
┌ Info: Price and cut time (b-and-b)
└   t = 1.2437181
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 722
│   lb = 2.675449099216586
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 362
└   length(nodes) = 725
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85168
└   sum(fire_plans.plans_per_fire) = 30853
┌ Info: Time check
└   time() - start_time = 822.6449999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 723
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275414
┌ Info: Price and cut time (b-and-b)
└   t = 1.4913739
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 723
│   lb = 2.6754511478961964
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 363
└   length(nodes) = 727
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85243
└   sum(fire_plans.plans_per_fire) = 30892
┌ Info: Time check
└   time() - start_time = 824.1779999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 648
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267779
┌ Info: Price and cut time (b-and-b)
└   t = 1.0892736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 648
│   lb = 2.6754511478961964
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 364
└   length(nodes) = 729
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85315
└   sum(fire_plans.plans_per_fire) = 30928
┌ Info: Time check
└   time() - start_time = 825.3099999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 649
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310432
┌ Info: Price and cut time (b-and-b)
└   t = 0.4457903
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 649
│   lb = 2.675451541716052
└   ub = 2.7327969019454015
┌ Info: number of nodes
│   node_explored_count = 365
└   length(nodes) = 731
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85337
└   sum(fire_plans.plans_per_fire) = 30940
┌ Info: Time check
└   time() - start_time = 825.800999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 548
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240449
┌ Info: Price and cut time (b-and-b)
└   t = 0.684747
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 548
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0   0   0   1  17  2  0  0
│     0   0   0  6   2   2  9  10   3   0   0  0  0  0
│     9   2   0  0   0   0  0   0   0   0   0  0  0  0
│     6  18  20  5   0   0  0   0   0   0   0  1  0  0
│     0   0   0  5  10  10  6   6  12  13   0  1  0  0
└     6   0   1  0   1   0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4605427
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.12165
│   obj = 2.732796901945401
└   obj_bound = 2.732796901945401
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  3  1  1
│      1   1   1  7   3   3  10  11   4   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11   7   7  13  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4040795
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2927879
│   obj = 2.7327969019454015
└   obj_bound = 2.7326016053480453
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  8   4   4  11  12   5   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12   8   8  14  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8040981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3315655
│   obj = 2.7327969019454015
└   obj_bound = 2.7325304200295712
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732796901945401
┌ Info: current bounds
│   node_ix = 548
│   lb = 2.675451541716052
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 366
└   length(nodes) = 733
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85831
└   sum(fire_plans.plans_per_fire) = 31190
┌ Info: Time check
└   time() - start_time = 830.414999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 549
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234199
┌ Info: Price and cut time (b-and-b)
└   t = 1.2369453
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 549
│   lb = 2.6754524136077915
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 367
└   length(nodes) = 735
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85994
└   sum(fire_plans.plans_per_fire) = 31256
┌ Info: Time check
└   time() - start_time = 831.6889998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 490
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251303
┌ Info: Price and cut time (b-and-b)
└   t = 1.075198
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 490
│   lb = 2.6754524136077915
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 368
└   length(nodes) = 737
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86103
└   sum(fire_plans.plans_per_fire) = 31285
┌ Info: Time check
└   time() - start_time = 832.8029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 491
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217751
┌ Info: Price and cut time (b-and-b)
└   t = 1.0667503
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 491
│   lb = 2.6754613687272557
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 369
└   length(nodes) = 739
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86298
└   sum(fire_plans.plans_per_fire) = 31339
┌ Info: Time check
└   time() - start_time = 833.9039998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 528
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261629
┌ Info: Price and cut time (b-and-b)
└   t = 0.5700224
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 528
│   lb = 2.6754613687272557
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 370
└   length(nodes) = 741
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86383
└   sum(fire_plans.plans_per_fire) = 31360
┌ Info: Time check
└   time() - start_time = 834.5149998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 529
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237426
┌ Info: Price and cut time (b-and-b)
└   t = 1.3963002
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 529
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   1  17  3  0  0
│     0   0   0  2  6  3  7  7  6   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  9  6  8  9  9  9  13   0  0  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5779604
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0625952
│   obj = 2.7327969019454015
└   obj_bound = 2.732528399957814
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   3  7  4   8   8   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  7  9  10  10  10  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0303339
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.336803
│   obj = 2.7327969019454015
└   obj_bound = 2.732729691496682
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   4  8   5   9   9   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  11  8  10  11  11  11  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9792969
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5451732
│   obj = 2.7327969019454015
└   obj_bound = 2.7327969019454015
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7327969019454015
┌ Info: current bounds
│   node_ix = 529
│   lb = 2.6754674593498566
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 371
└   length(nodes) = 743
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86961
└   sum(fire_plans.plans_per_fire) = 31597
┌ Info: Time check
└   time() - start_time = 839.9900000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 734
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251681
┌ Info: Price and cut time (b-and-b)
└   t = 0.6824365
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 734
│   lb = 2.6754674593498566
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 372
└   length(nodes) = 745
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87049
└   sum(fire_plans.plans_per_fire) = 31623
┌ Info: Time check
└   time() - start_time = 840.7139999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 735
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028711
┌ Info: Price and cut time (b-and-b)
└   t = 0.8042626
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 735
│   lb = 2.675467719283225
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 373
└   length(nodes) = 747
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87098
└   sum(fire_plans.plans_per_fire) = 31653
┌ Info: Time check
└   time() - start_time = 841.561999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 554
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250016
┌ Info: Price and cut time (b-and-b)
└   t = 0.7523079
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 554
│   lb = 2.675467719283225
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 374
└   length(nodes) = 749
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87201
└   sum(fire_plans.plans_per_fire) = 31681
┌ Info: Time check
└   time() - start_time = 842.3539998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 555
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285009
┌ Info: Price and cut time (b-and-b)
└   t = 1.0426342
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 555
│   lb = 2.675471208636894
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 375
└   length(nodes) = 751
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87286
└   sum(fire_plans.plans_per_fire) = 31712
┌ Info: Time check
└   time() - start_time = 843.4399998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 578
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260774
┌ Info: Price and cut time (b-and-b)
└   t = 0.6796049
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 578
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  17  2  0  0
│     0   0   0  6  6  2   6  9   2   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  19  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  5  6  9  10  6  14  13   0  1  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5403801
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1172742
│   obj = 2.7327969019454015
└   obj_bound = 2.7327969019454015
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  7  7   3   7  10   3   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  20  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  10  11   7  15  14   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4219434
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3739748
│   obj = 2.7327969019454015
└   obj_bound = 2.7325289285432315
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  8  8   4   8  11   4   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  21  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  11  12   8  16  15   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3664303
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4272069
│   obj = 2.7327969019454015
└   obj_bound = 2.7327969019454015
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7327969019454015
┌ Info: current bounds
│   node_ix = 578
│   lb = 2.675471208636894
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 376
└   length(nodes) = 753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87706
└   sum(fire_plans.plans_per_fire) = 31960
┌ Info: Time check
└   time() - start_time = 848.930999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 579
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224342
┌ Info: Price and cut time (b-and-b)
└   t = 1.1819164
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 579
│   lb = 2.675496011096447
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 377
└   length(nodes) = 755
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87871
└   sum(fire_plans.plans_per_fire) = 32009
┌ Info: Time check
└   time() - start_time = 850.1489999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 486
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241902
┌ Info: Price and cut time (b-and-b)
└   t = 0.8498171
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 486
│   lb = 2.675496011096447
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 378
└   length(nodes) = 757
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87986
└   sum(fire_plans.plans_per_fire) = 32034
┌ Info: Time check
└   time() - start_time = 851.0369999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 487
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229626
┌ Info: Price and cut time (b-and-b)
└   t = 0.9714946
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 487
│   lb = 2.675498494602007
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 379
└   length(nodes) = 759
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88110
└   sum(fire_plans.plans_per_fire) = 32065
┌ Info: Time check
└   time() - start_time = 852.0449998378754
┌ Info: Exploring node
└   branch_and_bound_node.ix = 526
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296714
┌ Info: Price and cut time (b-and-b)
└   t = 0.3870991
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 526
│   lb = 2.675498494602007
└   ub = 2.732796901945401
┌ Info: number of nodes
│   node_explored_count = 380
└   length(nodes) = 761
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88154
└   sum(fire_plans.plans_per_fire) = 32077
┌ Info: Time check
└   time() - start_time = 852.4769999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 527
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252471
┌ Info: Price and cut time (b-and-b)
└   t = 1.7591669
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 527
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   1  17  2  0  0
│     0   0   0   0  10  8  10   3   2   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   5   0  0   0   0   0   0   0  1  0  0
│     0   0   0  11   3  4   7  13  14  13   0  1  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4895576
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1784393
│   obj = 2.7326294381764686
└   obj_bound = 2.7325973844891513
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  3  1  1
│      1   1   1   1  11  9  11   4   3   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  12   4  5   8  14  15  14   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0053294
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3092723
│   obj = 2.732629438176468
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  4  2  2
│      2   2   2   2  12  10  12   5   4   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13   5   6   9  15  16  15   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0381307
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4337679
│   obj = 2.7326294381764686
└   obj_bound = 2.7323659250488586
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 527
│   lb = 2.675511516004341
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 381
└   length(nodes) = 763
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88713
└   sum(fire_plans.plans_per_fire) = 32403
┌ Info: Time check
└   time() - start_time = 860.2170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 732
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265638
┌ Info: Price and cut time (b-and-b)
└   t = 0.8957433
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 732
│   lb = 2.675511516004341
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 382
└   length(nodes) = 765
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88830
└   sum(fire_plans.plans_per_fire) = 32430
┌ Info: Time check
└   time() - start_time = 861.1539998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 733
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262528
┌ Info: Price and cut time (b-and-b)
└   t = 1.2476204
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 733
│   lb = 2.67554320264394
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 383
└   length(nodes) = 767
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88976
└   sum(fire_plans.plans_per_fire) = 32476
┌ Info: Time check
└   time() - start_time = 862.4409999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 750
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257045
┌ Info: Price and cut time (b-and-b)
└   t = 1.2369805
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 750
│   lb = 2.67554320264394
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 384
└   length(nodes) = 769
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89067
└   sum(fire_plans.plans_per_fire) = 32525
┌ Info: Time check
└   time() - start_time = 863.7179999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 751
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0807046
┌ Info: Price and cut time (b-and-b)
└   t = 0.2461792
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 751
│   lb = 2.675545302851265
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 385
└   length(nodes) = 771
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89116
└   sum(fire_plans.plans_per_fire) = 32535
┌ Info: Time check
└   time() - start_time = 864.0599999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 422
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304506
┌ Info: Price and cut time (b-and-b)
└   t = 0.7709313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 422
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0   0   1  17  3  0  0
│     0   0   0  5   3  6  7  9   4   0   0  0  0  0
│     9   2   0  0   0  0  0  0   0   0   0  0  0  0
│     6  18  20  5   0  0  0  0   0   0   0  1  0  0
│     0   0   0  6  10  6  9  6  12  13   0  1  0  0
└     6   0   1  0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.481173
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.097442
│   obj = 2.7326294381764686
└   obj_bound = 2.7324623319621346
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   4  7   8  10   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  7  10   7  13  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1221052
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2748093
│   obj = 2.7326294381764686
└   obj_bound = 2.7324207986851907
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   5  8   9  11   6   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  8  11   8  14  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7720989
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3468147
│   obj = 2.732629438176468
└   obj_bound = 2.732400885989964
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 422
│   lb = 2.675545302851265
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 386
└   length(nodes) = 773
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89719
└   sum(fire_plans.plans_per_fire) = 32751
┌ Info: Time check
└   time() - start_time = 868.4489998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 423
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0219149
┌ Info: Price and cut time (b-and-b)
└   t = 1.4582968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 423
│   lb = 2.6755460637658413
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 387
└   length(nodes) = 775
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89926
└   sum(fire_plans.plans_per_fire) = 32826
┌ Info: Time check
└   time() - start_time = 869.9449999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 358
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308403
┌ Info: Price and cut time (b-and-b)
└   t = 1.0130152
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 358
│   lb = 2.6755460637658413
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 388
└   length(nodes) = 777
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90053
└   sum(fire_plans.plans_per_fire) = 32858
┌ Info: Time check
└   time() - start_time = 871.0030000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 359
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232363
┌ Info: Price and cut time (b-and-b)
└   t = 0.6250831
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 359
│   lb = 2.6755715435722416
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 389
└   length(nodes) = 779
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90111
└   sum(fire_plans.plans_per_fire) = 32879
┌ Info: Time check
└   time() - start_time = 871.664999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 448
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215884
┌ Info: Price and cut time (b-and-b)
└   t = 0.8951667
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 448
│   lb = 2.6755715435722416
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 390
└   length(nodes) = 781
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90180
└   sum(fire_plans.plans_per_fire) = 32912
┌ Info: Time check
└   time() - start_time = 872.5969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 449
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235573
┌ Info: Price and cut time (b-and-b)
└   t = 1.44814
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 449
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0  0  0   1  17  3  0  0
│     0   0   0  5   3  6   4  6  9   0   0  0  0  0
│     9   2   0  0   0  0   0  0  0   0   0  0  0  0
│     6  18  20  5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  6  10  6  12  9  7  13   0  1  0  0
└     6   0   1  0   1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5352778
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1201898
│   obj = 2.7326294381764686
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   4  7   5   7  10   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  7  13  10   8  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0821567
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.288936
│   obj = 2.732629438176468
└   obj_bound = 2.732614974664886
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   5  8   6   8  11   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  8  14  11   9  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7504614
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2508874
│   obj = 2.7326294381764686
└   obj_bound = 2.7326294381764686
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 449
│   lb = 2.6755982796386886
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 391
└   length(nodes) = 783
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90788
└   sum(fire_plans.plans_per_fire) = 33152
┌ Info: Time check
└   time() - start_time = 878.6009998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 596
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266727
┌ Info: Price and cut time (b-and-b)
└   t = 0.6392084
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 596
│   lb = 2.6755982796386886
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 392
└   length(nodes) = 785
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90860
└   sum(fire_plans.plans_per_fire) = 33178
┌ Info: Time check
└   time() - start_time = 879.2819998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 597
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277648
┌ Info: Price and cut time (b-and-b)
└   t = 1.2153491
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 597
│   lb = 2.675602896043839
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 393
└   length(nodes) = 787
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90946
└   sum(fire_plans.plans_per_fire) = 33216
┌ Info: Time check
└   time() - start_time = 880.539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 496
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025812
┌ Info: Price and cut time (b-and-b)
└   t = 0.5222745
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 496
│   lb = 2.675602896043839
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 394
└   length(nodes) = 789
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90977
└   sum(fire_plans.plans_per_fire) = 33239
┌ Info: Time check
└   time() - start_time = 881.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 497
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224634
┌ Info: Price and cut time (b-and-b)
└   t = 1.2644445
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 497
│   lb = 2.67560308905234
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 395
└   length(nodes) = 791
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91109
└   sum(fire_plans.plans_per_fire) = 33288
┌ Info: Time check
└   time() - start_time = 882.4029998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 626
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324321
┌ Info: Price and cut time (b-and-b)
└   t = 0.6716146
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 626
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   1  17  3  0  0
│     0   0   0  6  3  3  6  6  6   2   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  5  9  9  9  9  9  12   0  0  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3595385
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1398633
│   obj = 2.7326294381764686
└   obj_bound = 2.732481444489875
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   4   4   7   7   7   3   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  10  10  10  10  13   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8531349
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4065046
│   obj = 2.7326294381764686
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   5   5   8   8   8   4   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  11  11  11  11  14   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7844759
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.354244
│   obj = 2.732629438176468
└   obj_bound = 2.732629438176468
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 626
│   lb = 2.67560308905234
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 396
└   length(nodes) = 793
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91565
└   sum(fire_plans.plans_per_fire) = 33477
┌ Info: Time check
└   time() - start_time = 886.5230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 627
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237413
┌ Info: Price and cut time (b-and-b)
└   t = 1.1381183
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 627
│   lb = 2.675605342278252
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 397
└   length(nodes) = 795
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91663
└   sum(fire_plans.plans_per_fire) = 33531
┌ Info: Time check
└   time() - start_time = 887.7469999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 536
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236545
┌ Info: Price and cut time (b-and-b)
└   t = 0.7003941
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 536
│   lb = 2.675605342278252
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 398
└   length(nodes) = 797
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91720
└   sum(fire_plans.plans_per_fire) = 33554
┌ Info: Time check
└   time() - start_time = 888.4839999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 537
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273302
┌ Info: Price and cut time (b-and-b)
└   t = 1.001858
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 537
│   lb = 2.6756105899775693
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 399
└   length(nodes) = 799
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91884
└   sum(fire_plans.plans_per_fire) = 33602
┌ Info: Time check
└   time() - start_time = 889.5299999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 788
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290277
┌ Info: Price and cut time (b-and-b)
└   t = 1.2693
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 788
│   lb = 2.6756105899775693
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 400
└   length(nodes) = 801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91982
└   sum(fire_plans.plans_per_fire) = 33661
┌ Info: Time check
└   time() - start_time = 890.8429999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 789
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271051
┌ Info: Price and cut time (b-and-b)
└   t = 0.2174088
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 789
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0   0   0   0   0   1  17  3  0  0
│      0   0   0  10  7   2   7   7   2   0   0  0  0  0
│     10   2   0   0  0   0   0   0   0   0   0  0  0  0
│      5  19  20   6  0   0   0   0   0   0   0  1  0  0
│      0   0   0   1  6  10  10  10  14  13   0  1  0  0
└      6   0   1   0  1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4708382
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2839276
│   obj = 2.7326294381764686
└   obj_bound = 2.7323592525317255
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  11  8   3   8   8   3   1   1  1  1  1
│     11   3   1   1  1   1   1   1   1   1   1  1  1  1
│      6  20  21   7  1   1   1   1   1   1   1  2  1  1
│      1   1   1   2  7  11  11  11  15  14   1  2  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.194597
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3268218
│   obj = 2.7326294381764686
└   obj_bound = 2.732514716638937
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  9   4   9   9   4   2   2  2  2  2
│     12   4   2   2  2   2   2   2   2   2   2  2  2  2
│      7  21  22   8  2   2   2   2   2   2   2  3  2  2
│      2   2   2   3  8  12  12  12  16  15   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.866806
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3533376
│   obj = 2.7326294381764686
└   obj_bound = 2.7323703291518826
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 789
│   lb = 2.6756162979216978
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 401
└   length(nodes) = 803
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92448
└   sum(fire_plans.plans_per_fire) = 33877
┌ Info: Time check
└   time() - start_time = 895.1459999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 668
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0479635
┌ Info: Price and cut time (b-and-b)
└   t = 0.9351601
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 668
│   lb = 2.6756162979216978
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 402
└   length(nodes) = 805
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92510
└   sum(fire_plans.plans_per_fire) = 33907
┌ Info: Time check
└   time() - start_time = 896.1439998149872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 669
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296895
┌ Info: Price and cut time (b-and-b)
└   t = 1.2540166
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 669
│   lb = 2.675623386241416
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 403
└   length(nodes) = 807
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92552
└   sum(fire_plans.plans_per_fire) = 33945
┌ Info: Time check
└   time() - start_time = 897.4429998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 712
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0907154
┌ Info: Price and cut time (b-and-b)
└   t = 1.3032794
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 712
│   lb = 2.675623386241416
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 404
└   length(nodes) = 809
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92634
└   sum(fire_plans.plans_per_fire) = 33994
┌ Info: Time check
└   time() - start_time = 898.8519999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 713
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0797351
┌ Info: Price and cut time (b-and-b)
└   t = 0.2058939
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 713
│   lb = 2.675629542886196
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 405
└   length(nodes) = 811
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92676
└   sum(fire_plans.plans_per_fire) = 34002
┌ Info: Time check
└   time() - start_time = 899.1499998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 646
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249591
┌ Info: Price and cut time (b-and-b)
└   t = 1.5379348
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 646
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   1  17  3  0  0
│     0   0   0  10  10  8   2   3   0   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   6   0  0   0   0   0   0   0  1  0  0
│     0   0   0   0   3  3  14  12  15  14   0  1  0  0
└     6   1   1   0   1  1   0   0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5762424
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1019422
│   obj = 2.7326294381764686
└   obj_bound = 2.7326294381764686
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  11  11  9   3   4   1   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   7   1  1   1   1   1   1   1  2  1  1
│      1   1   1   1   4  4  15  13  16  15   1  2  1  1
└      7   2   2   1   2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0777284
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3458718
│   obj = 2.7326294381764686
└   obj_bound = 2.7324570346280983
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  12  10   4   5   2   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2   5   5  16  14  17  16   2  3  2  2
└      8   3   3   2   3   3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3231582
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3840229
│   obj = 2.7326294381764686
└   obj_bound = 2.7323648850416653
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 646
│   lb = 2.675629542886196
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 406
└   length(nodes) = 813
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93165
└   sum(fire_plans.plans_per_fire) = 34276
┌ Info: Time check
└   time() - start_time = 905.0179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 647
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236108
┌ Info: Price and cut time (b-and-b)
└   t = 0.4165279
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 647
│   lb = 2.6756344366061455
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 407
└   length(nodes) = 815
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93207
└   sum(fire_plans.plans_per_fire) = 34290
┌ Info: Time check
└   time() - start_time = 905.4719998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 636
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266352
┌ Info: Price and cut time (b-and-b)
└   t = 0.623732
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 636
│   lb = 2.6756344366061455
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 408
└   length(nodes) = 817
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93258
└   sum(fire_plans.plans_per_fire) = 34313
┌ Info: Time check
└   time() - start_time = 906.135999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 637
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278987
┌ Info: Price and cut time (b-and-b)
└   t = 1.1108006
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 637
│   lb = 2.675641036323987
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 409
└   length(nodes) = 819
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93397
└   sum(fire_plans.plans_per_fire) = 34356
┌ Info: Time check
└   time() - start_time = 907.289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 274
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267719
┌ Info: Price and cut time (b-and-b)
└   t = 0.8463674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 274
│   lb = 2.675641036323987
└   ub = 2.7326294381764686
┌ Info: number of nodes
│   node_explored_count = 410
└   length(nodes) = 821
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93469
└   sum(fire_plans.plans_per_fire) = 34379
┌ Info: Time check
└   time() - start_time = 908.1769998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 275
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220606
┌ Info: Price and cut time (b-and-b)
└   t = 0.8099953
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 275
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   1  17  3  0  0
│     0   0   0  11  10  2   3   3   3   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   5   0  0   0   0   0   0   0  1  0  0
│     0   0   0   0   3  9  13  13  13  13   0  1  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4418299
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1090856
│   obj = 2.732629438176468
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  12  11   3   4   4   4   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1   1   4  10  14  14  14  14   1  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0700818
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.280758
│   obj = 2.7326294381764686
└   obj_bound = 2.732482838822866
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  13  12   4   5   5   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2   5  11  15  15  15  15   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9823348
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2498697
│   obj = 2.732629438176468
└   obj_bound = 2.7323662736358534
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732629438176468
┌ Info: current bounds
│   node_ix = 275
│   lb = 2.6756426184993334
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 411
└   length(nodes) = 823
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93930
└   sum(fire_plans.plans_per_fire) = 34637
┌ Info: Time check
└   time() - start_time = 912.731999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 572
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242258
┌ Info: Price and cut time (b-and-b)
└   t = 0.7699436
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 572
│   lb = 2.6756426184993334
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 412
└   length(nodes) = 825
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94045
└   sum(fire_plans.plans_per_fire) = 34672
┌ Info: Time check
└   time() - start_time = 913.5409998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 573
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237175
┌ Info: Price and cut time (b-and-b)
└   t = 1.2936765
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 573
│   lb = 2.6756426184993343
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 413
└   length(nodes) = 827
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94316
└   sum(fire_plans.plans_per_fire) = 34738
┌ Info: Time check
└   time() - start_time = 914.8739998340607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 824
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0338844
┌ Info: Price and cut time (b-and-b)
└   t = 0.6947105
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 824
│   lb = 2.6756426184993343
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 414
└   length(nodes) = 829
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94357
└   sum(fire_plans.plans_per_fire) = 34770
┌ Info: Time check
└   time() - start_time = 915.6180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 825
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287565
┌ Info: Price and cut time (b-and-b)
└   t = 1.1083132
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 825
│   lb = 2.6756453090396524
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 415
└   length(nodes) = 831
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94424
└   sum(fire_plans.plans_per_fire) = 34807
┌ Info: Time check
└   time() - start_time = 916.7699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 518
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268571
┌ Info: Price and cut time (b-and-b)
└   t = 1.1758101
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 518
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0   1  17  3  0  0
│     0   0   0   0   0  6  9  6  9   0   0  0  0  0
│     9   2   0   0   0  0  0  0  0   0   0  0  0  0
│     6  19  20   5   0  0  0  0  0   0   0  1  0  0
│     0   0   0  11  12  5  6  9  7  13   0  0  0  0
└     6   0   1   0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6245468
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.117694
│   obj = 2.732629438176468
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1   1   1  7  10   7  10   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  20  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  13  6   7  10   8  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2517159
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3281815
│   obj = 2.7326294381764686
└   obj_bound = 2.732368205834569
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2   2   2  8  11   8  11   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  21  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  7   8  11   9  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7716004
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3918628
│   obj = 2.7326294381764686
└   obj_bound = 2.7325143574759454
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732629438176468
┌ Info: current bounds
│   node_ix = 518
│   lb = 2.6756453090396524
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 416
└   length(nodes) = 833
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95050
└   sum(fire_plans.plans_per_fire) = 35068
┌ Info: Time check
└   time() - start_time = 922.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 519
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232102
┌ Info: Price and cut time (b-and-b)
└   t = 0.7433028
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 519
│   lb = 2.675648521904709
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 417
└   length(nodes) = 835
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95177
└   sum(fire_plans.plans_per_fire) = 35102
┌ Info: Time check
└   time() - start_time = 922.7799999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 508
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261105
┌ Info: Price and cut time (b-and-b)
└   t = 0.8947491
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 508
│   lb = 2.675648521904709
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 418
└   length(nodes) = 837
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95323
└   sum(fire_plans.plans_per_fire) = 35137
┌ Info: Time check
└   time() - start_time = 923.7159998416901
┌ Info: Exploring node
└   branch_and_bound_node.ix = 509
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272837
┌ Info: Price and cut time (b-and-b)
└   t = 1.0149586
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 509
│   lb = 2.6756537906690636
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 419
└   length(nodes) = 839
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95419
└   sum(fire_plans.plans_per_fire) = 35164
┌ Info: Time check
└   time() - start_time = 924.8179998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 588
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026195
┌ Info: Price and cut time (b-and-b)
└   t = 1.2165839
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 588
│   lb = 2.6756537906690636
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 420
└   length(nodes) = 841
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95651
└   sum(fire_plans.plans_per_fire) = 35234
┌ Info: Time check
└   time() - start_time = 926.0759999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 589
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023663
┌ Info: Price and cut time (b-and-b)
└   t = 0.3135582
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 589
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0   0   0   0  17  3  0  0
│      0   0   0  6  6  8  6   3   1   0   0  0  0  0
│     10   1   0  0  0  0  0   0   0   0   0  0  0  0
│      5  19  20  6  0  0  0   0   0   0   0  1  0  0
│      0   0   0  3  6  3  9  12  14  13   1  1  0  0
└      6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3633346
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2157296
│   obj = 2.7326294381764686
└   obj_bound = 2.7326294381764686
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  7  9   7   4   2   1   1  1  1  1
│     11   2   1  1  1  1   1   1   1   1   1  1  1  1
│      6  20  21  7  1  1   1   1   1   1   1  2  1  1
│      1   1   1  4  7  4  10  13  15  14   2  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2937169
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3388295
│   obj = 2.7326294381764686
└   obj_bound = 2.732629438176468
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   2  19  5  2  2
│      2   2   2  8  8  10   8   5   3   2   2  2  2  2
│     12   3   2  2  2   2   2   2   2   2   2  2  2  2
│      7  21  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8   5  11  14  16  15   3  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0473354
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0016591
│   obj = 2.732629438176468
└   obj_bound = 2.732629438176468
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 589
│   lb = 2.675668217632928
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 421
└   length(nodes) = 843
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96128
└   sum(fire_plans.plans_per_fire) = 35451
┌ Info: Time check
└   time() - start_time = 931.1769998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 540
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256676
┌ Info: Price and cut time (b-and-b)
└   t = 1.0629457
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 540
│   lb = 2.675668217632928
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 422
└   length(nodes) = 845
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96234
└   sum(fire_plans.plans_per_fire) = 35508
┌ Info: Time check
└   time() - start_time = 932.2809998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 541
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283522
┌ Info: Price and cut time (b-and-b)
└   t = 0.2359709
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 541
│   lb = 2.6756901543738847
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 423
└   length(nodes) = 847
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96277
└   sum(fire_plans.plans_per_fire) = 35518
┌ Info: Time check
└   time() - start_time = 932.561999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 546
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0759471
┌ Info: Price and cut time (b-and-b)
└   t = 1.6625606
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 546
│   lb = 2.6756901543738847
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 424
└   length(nodes) = 849
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96407
└   sum(fire_plans.plans_per_fire) = 35572
┌ Info: Time check
└   time() - start_time = 934.3159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 547
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0322271
┌ Info: Price and cut time (b-and-b)
└   t = 2.0123473
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 547
│   lb = 2.675691995258
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 425
└   length(nodes) = 851
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96555
└   sum(fire_plans.plans_per_fire) = 35639
┌ Info: Time check
└   time() - start_time = 936.3769998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 618
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261728
┌ Info: Price and cut time (b-and-b)
└   t = 0.5301545
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 618
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0   2  16  3  0  0
│     0   0   0   0   0   0  11  12  8   0   0  0  0  0
│     9   2   0   0   0   0   0   0  0   0   0  0  0  0
│     6  18  20   5   0   0   0   0  0   0   0  1  0  0
│     0   0   0  11  12  11   4   3  8  11   2  1  0  0
└     6   0   1   0   1   0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4334564
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0680118
│   obj = 2.7326294381764686
└   obj_bound = 2.732447185468865
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1   3  17  4  1  1
│      1   1   1   1   1   1  12  13  9   1   1  1  1  1
│     10   3   1   1   1   1   1   1  1   1   1  1  1  1
│      7  19  21   6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  12  13  12   5   4  9  12   3  2  1  1
└      7   1   2   1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3649779
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2847756
│   obj = 2.7326294381764686
└   obj_bound = 2.732500478733499
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  18  5  2  2
│      2   2   2   2   2   2  13  14  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13   6   5  10  13   4  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8262602
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3937779
│   obj = 2.7326294381764686
└   obj_bound = 2.7324026603364864
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 618
│   lb = 2.675691995258
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 426
└   length(nodes) = 853
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97031
└   sum(fire_plans.plans_per_fire) = 35848
┌ Info: Time check
└   time() - start_time = 940.8589999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 619
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234309
┌ Info: Price and cut time (b-and-b)
└   t = 1.1200907
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 619
│   lb = 2.6756974499573016
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 427
└   length(nodes) = 855
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97229
└   sum(fire_plans.plans_per_fire) = 35895
┌ Info: Time check
└   time() - start_time = 942.0169999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 214
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269095
┌ Info: Price and cut time (b-and-b)
└   t = 0.7065819
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 214
│   lb = 2.6756974499573016
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 428
└   length(nodes) = 857
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97406
└   sum(fire_plans.plans_per_fire) = 35920
┌ Info: Time check
└   time() - start_time = 942.7660000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 215
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242406
┌ Info: Price and cut time (b-and-b)
└   t = 0.8813448
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 215
│   lb = 2.675709608212338
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 429
└   length(nodes) = 859
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97489
└   sum(fire_plans.plans_per_fire) = 35948
┌ Info: Time check
└   time() - start_time = 943.6859998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 440
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029303
┌ Info: Price and cut time (b-and-b)
└   t = 1.0929676
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 440
│   lb = 2.675709608212338
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 430
└   length(nodes) = 861
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97650
└   sum(fire_plans.plans_per_fire) = 35982
┌ Info: Time check
└   time() - start_time = 944.8229999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 441
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270834
┌ Info: Price and cut time (b-and-b)
└   t = 1.0565813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 441
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   1  17  3  0  0
│     0   0   0  4  9  9   3   4   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  19  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  7  3  3  12  12  13  13   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.539306
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1214456
│   obj = 2.7326294381764686
└   obj_bound = 2.7326294381764686
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  5  10  10   4   5   4   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  20  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  8   4   4  13  13  14  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1360246
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2939732
│   obj = 2.7326294381764686
└   obj_bound = 2.732363939377811
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  6  11  11   5   6   5   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  21  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  9   5   5  14  14  15  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8396455
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3413682
│   obj = 2.7326294381764686
└   obj_bound = 2.7326294381764686
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 441
│   lb = 2.675720590217595
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 431
└   length(nodes) = 863
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98049
└   sum(fire_plans.plans_per_fire) = 36232
┌ Info: Time check
└   time() - start_time = 949.6699998378754
┌ Info: Exploring node
└   branch_and_bound_node.ix = 762
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260297
┌ Info: Price and cut time (b-and-b)
└   t = 1.3933656
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 762
│   lb = 2.675720590217595
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 432
└   length(nodes) = 865
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98175
└   sum(fire_plans.plans_per_fire) = 36297
┌ Info: Time check
└   time() - start_time = 951.1059999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 763
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285288
┌ Info: Price and cut time (b-and-b)
└   t = 0.6534814
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 763
│   lb = 2.6757278006643253
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 433
└   length(nodes) = 867
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98218
└   sum(fire_plans.plans_per_fire) = 36316
┌ Info: Time check
└   time() - start_time = 951.8029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 706
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262813
┌ Info: Price and cut time (b-and-b)
└   t = 0.6746229
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 706
│   lb = 2.6757278006643253
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 434
└   length(nodes) = 869
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98278
└   sum(fire_plans.plans_per_fire) = 36335
┌ Info: Time check
└   time() - start_time = 952.5179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 707
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254072
┌ Info: Price and cut time (b-and-b)
└   t = 0.9360496
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 707
│   lb = 2.6757281356337197
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 435
└   length(nodes) = 871
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98444
└   sum(fire_plans.plans_per_fire) = 36373
┌ Info: Time check
└   time() - start_time = 953.4939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 652
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265215
┌ Info: Price and cut time (b-and-b)
└   t = 1.3011218
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 652
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0   0   0  17  3  0  0
│     0   0   0  7   3  9  6  6   1   0   0  0  0  0
│     9   2   0  0   0  0  0  0   0   0   0  0  0  0
│     6  18  20  6   0  0  0  0   0   0   0  1  0  0
│     0   0   0  3  10  3  9  9  15  13   0  1  0  0
└     6   0   1  0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4565619
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1038462
│   obj = 2.7326294381764686
└   obj_bound = 2.73251397088644
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   1  18  4  1  1
│      1   1   1  8   4  10   7   7   2   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  11   4  10  10  16  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0946571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2534275
│   obj = 2.7326294381764678
└   obj_bound = 2.7326294381764678
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  9   5  11   8   8   3   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  12   5  11  11  17  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0461489
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3896018
│   obj = 2.7326294381764678
└   obj_bound = 2.7326294381764678
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326294381764686
┌ Info: current bounds
│   node_ix = 652
│   lb = 2.6757281356337197
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 436
└   length(nodes) = 873
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98905
└   sum(fire_plans.plans_per_fire) = 36630
┌ Info: Time check
└   time() - start_time = 958.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 653
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217616
┌ Info: Price and cut time (b-and-b)
└   t = 1.2220394
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 653
│   lb = 2.6757417277147417
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 437
└   length(nodes) = 875
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99036
└   sum(fire_plans.plans_per_fire) = 36666
┌ Info: Time check
└   time() - start_time = 959.9249999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 404
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1167361
┌ Info: Price and cut time (b-and-b)
└   t = 0.6623459
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 404
│   lb = 2.6757417277147417
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 438
└   length(nodes) = 877
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99138
└   sum(fire_plans.plans_per_fire) = 36692
┌ Info: Time check
└   time() - start_time = 960.7179999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 405
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274093
┌ Info: Price and cut time (b-and-b)
└   t = 1.1211933
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 405
│   lb = 2.6757435038805797
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 439
└   length(nodes) = 879
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99317
└   sum(fire_plans.plans_per_fire) = 36737
┌ Info: Time check
└   time() - start_time = 961.8809998035431
┌ Info: Exploring node
└   branch_and_bound_node.ix = 764
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029321
┌ Info: Price and cut time (b-and-b)
└   t = 0.9866716
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 764
│   lb = 2.6757435038805797
└   ub = 2.732629438176468
┌ Info: number of nodes
│   node_explored_count = 440
└   length(nodes) = 881
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99487
└   sum(fire_plans.plans_per_fire) = 36790
┌ Info: Time check
└   time() - start_time = 962.9119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 765
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246348
┌ Info: Price and cut time (b-and-b)
└   t = 0.336671
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 765
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0   0   0   0   0   0   1  17  3  0  0
│      0   0   0  6   2   2  10  10   4   0   0  0  0  0
│     10   1   0  0   0   0   0   0   0   0   0  0  0  0
│      5  19  20  6   0   0   0   0   0   0   0  1  0  0
│      0   0   0  5  10  10   6   6  12  12   1  0  0  0
└      6   0   1  0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3672123
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1293337
│   obj = 2.7326278663112515
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   3   3  11  11   5   1   1  1  1  1
│     11   2   1  1   1   1   1   1   1   1   1  1  1  1
│      6  20  21  7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11   7   7  13  13   2  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1473423
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2538152
│   obj = 2.732627866311251
└   obj_bound = 2.7323695823883756
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   4   4  12  12   6   2   2  2  2  2
│     12   3   2  2   2   2   2   2   2   2   2  2  2  2
│      7  21  22  8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12   8   8  14  14   3  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.673786
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2558823
│   obj = 2.732627866311251
└   obj_bound = 2.7324129655700244
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326278663112515
┌ Info: current bounds
│   node_ix = 765
│   lb = 2.6757458415615636
└   ub = 2.7326278663112515
┌ Info: number of nodes
│   node_explored_count = 441
└   length(nodes) = 883
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99907
└   sum(fire_plans.plans_per_fire) = 36986
┌ Info: Time check
└   time() - start_time = 966.6489999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 502
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239194
┌ Info: Price and cut time (b-and-b)
└   t = 0.9129654
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 502
│   lb = 2.6757458415615636
└   ub = 2.7326278663112515
┌ Info: number of nodes
│   node_explored_count = 442
└   length(nodes) = 885
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100002
└   sum(fire_plans.plans_per_fire) = 37020
┌ Info: Time check
└   time() - start_time = 967.6009998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 503
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236994
┌ Info: Price and cut time (b-and-b)
└   t = 1.0287499
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 503
│   lb = 2.67577771443664
└   ub = 2.7326278663112515
┌ Info: number of nodes
│   node_explored_count = 443
└   length(nodes) = 887
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100125
└   sum(fire_plans.plans_per_fire) = 37059
┌ Info: Time check
└   time() - start_time = 968.6679999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 752
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251617
┌ Info: Price and cut time (b-and-b)
└   t = 0.8788128
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 752
│   lb = 2.67577771443664
└   ub = 2.7326278663112515
┌ Info: number of nodes
│   node_explored_count = 444
└   length(nodes) = 889
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100178
└   sum(fire_plans.plans_per_fire) = 37084
┌ Info: Time check
└   time() - start_time = 969.635999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 753
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246986
┌ Info: Price and cut time (b-and-b)
└   t = 0.8222715
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 753
│   lb = 2.6757795146182786
└   ub = 2.7326278663112515
┌ Info: number of nodes
│   node_explored_count = 445
└   length(nodes) = 891
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100247
└   sum(fire_plans.plans_per_fire) = 37120
┌ Info: Time check
└   time() - start_time = 970.4959998130798
┌ Info: Exploring node
└   branch_and_bound_node.ix = 468
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275178
┌ Info: Price and cut time (b-and-b)
└   t = 0.774339
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 468
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  3  0  0
│     0   0   0  9  9  9   2   0   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  2  3  3  14  15  13  12   1  0  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5133676
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1305653
│   obj = 2.732627866311251
└   obj_bound = 2.7326137741626173
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1  10  10  10   3   1   4   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1   3   4   4  15  16  14  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3685423
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3066727
│   obj = 2.732627866311251
└   obj_bound = 2.7324621487956913
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2  11  11  11   4   2   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   4   5   5  16  17  15  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7304607
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3100008
│   obj = 2.7326278663112515
└   obj_bound = 2.732385521009608
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 468
│   lb = 2.6757795146182786
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 446
└   length(nodes) = 893
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100658
└   sum(fire_plans.plans_per_fire) = 37363
┌ Info: Time check
└   time() - start_time = 975.180999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 469
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240025
┌ Info: Price and cut time (b-and-b)
└   t = 0.9024532
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 469
│   lb = 2.6757874781384086
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 447
└   length(nodes) = 895
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100794
└   sum(fire_plans.plans_per_fire) = 37400
┌ Info: Time check
└   time() - start_time = 976.1229999065399
┌ Info: Exploring node
└   branch_and_bound_node.ix = 524
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257423
┌ Info: Price and cut time (b-and-b)
└   t = 1.0425554
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 524
│   lb = 2.6757874781384086
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 448
└   length(nodes) = 897
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100922
└   sum(fire_plans.plans_per_fire) = 37429
┌ Info: Time check
└   time() - start_time = 977.2059998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 525
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265157
┌ Info: Price and cut time (b-and-b)
└   t = 1.1340244
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 525
│   lb = 2.6758002660991207
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 449
└   length(nodes) = 899
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100968
└   sum(fire_plans.plans_per_fire) = 37455
┌ Info: Time check
└   time() - start_time = 978.3799998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 758
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235597
┌ Info: Price and cut time (b-and-b)
└   t = 0.88484
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 758
│   lb = 2.6758002660991207
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 450
└   length(nodes) = 901
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101009
└   sum(fire_plans.plans_per_fire) = 37484
┌ Info: Time check
└   time() - start_time = 979.3039999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 759
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264787
┌ Info: Price and cut time (b-and-b)
└   t = 1.0847071
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 759
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0   0  0   1  17  3  0  0
│     0   0   0  5   3  6  9   4  6   0   0  0  0  0
│     9   2   0  0   0  0  0   0  0   0   0  0  0  0
│     6  19  20  5   0  0  0   0  0   0   0  1  0  0
│     0   0   0  6  10  6  6  12  9  13   0  1  0  0
└     6   0   1  0   1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4324501
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1069887
│   obj = 2.7326278663112515
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   4  7  10   5   7   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  20  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  11  7   7  13  10  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2554957
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3485256
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   5  8  11   6   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  21  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  12  8   8  14  11  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7615366
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4805663
│   obj = 2.732627866311251
└   obj_bound = 2.7323657932242713
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326278663112515
┌ Info: current bounds
│   node_ix = 759
│   lb = 2.675803230024651
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 451
└   length(nodes) = 903
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101519
└   sum(fire_plans.plans_per_fire) = 37725
┌ Info: Time check
└   time() - start_time = 984.3359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 900
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259589
┌ Info: Price and cut time (b-and-b)
└   t = 1.1536399
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 900
│   lb = 2.675803230024651
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 452
└   length(nodes) = 905
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101683
└   sum(fire_plans.plans_per_fire) = 37768
┌ Info: Time check
└   time() - start_time = 985.5309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 901
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025649
┌ Info: Price and cut time (b-and-b)
└   t = 0.180863
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 901
│   lb = 2.675809223128881
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 453
└   length(nodes) = 907
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101705
└   sum(fire_plans.plans_per_fire) = 37775
┌ Info: Time check
└   time() - start_time = 985.7539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 474
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247263
┌ Info: Price and cut time (b-and-b)
└   t = 0.67671
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 474
│   lb = 2.675809223128881
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 454
└   length(nodes) = 909
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101773
└   sum(fire_plans.plans_per_fire) = 37797
┌ Info: Time check
└   time() - start_time = 986.470999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 475
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278165
┌ Info: Price and cut time (b-and-b)
└   t = 1.8815396
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 475
│   lb = 2.6758120114050317
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 455
└   length(nodes) = 911
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101961
└   sum(fire_plans.plans_per_fire) = 37857
┌ Info: Time check
└   time() - start_time = 988.4019999504089
┌ Info: Exploring node
└   branch_and_bound_node.ix = 792
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0379838
┌ Info: Price and cut time (b-and-b)
└   t = 1.426442
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 792
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   0  16  4  0  0
│     0   0   0  6  3  3  6  6  6   2   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  6  0  0  0  0  0   0   0  0  0  0
│     0   0   0  4  9  9  9  9  9  11   1  0  0  0
└     6   1   1  0  1  0  0  0  0   2   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5400317
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1126828
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   1  17  5  1  1
│      1   1   1  7   4   4   7   7   7   3   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  7   1   1   1   1   1   1   1  1  1  1
│      1   1   1  5  10  10  10  10  10  12   2  1  1  1
└      7   2   2  1   2   1   1   1   1   3   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1089348
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.295692
│   obj = 2.7326278663112515
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   2  18  6  2  2
│      2   2   2  8   5   5   8   8   8   4   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  8   2   2   2   2   2   2   2  2  2  2
│      2   2   2  6  11  11  11  11  11  13   3  2  2  2
└      8   3   3  2   3   2   2   2   2   4   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.343698
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3110182
│   obj = 2.732627866311251
└   obj_bound = 2.73258532818607
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 792
│   lb = 2.6758120114050317
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 456
└   length(nodes) = 913
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102452
└   sum(fire_plans.plans_per_fire) = 38112
┌ Info: Time check
└   time() - start_time = 994.0920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 793
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261641
┌ Info: Price and cut time (b-and-b)
└   t = 0.2392062
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 10, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 10, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 793
│   lb = 2.6758188351193257
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 457
└   length(nodes) = 915
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102479
└   sum(fire_plans.plans_per_fire) = 38121
┌ Info: Time check
└   time() - start_time = 994.375
┌ Info: Exploring node
└   branch_and_bound_node.ix = 552
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260026
┌ Info: Price and cut time (b-and-b)
└   t = 0.6779972
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 552
│   lb = 2.6758188351193257
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 458
└   length(nodes) = 917
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102555
└   sum(fire_plans.plans_per_fire) = 38143
┌ Info: Time check
└   time() - start_time = 995.0950000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 553
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262936
┌ Info: Price and cut time (b-and-b)
└   t = 0.9673721
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 553
│   lb = 2.67581892149201
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 459
└   length(nodes) = 919
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102624
└   sum(fire_plans.plans_per_fire) = 38167
┌ Info: Time check
└   time() - start_time = 996.1499998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 806
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269883
┌ Info: Price and cut time (b-and-b)
└   t = 0.5251532
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 806
│   lb = 2.67581892149201
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 460
└   length(nodes) = 921
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102663
└   sum(fire_plans.plans_per_fire) = 38186
┌ Info: Time check
└   time() - start_time = 996.7189998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 807
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028899
┌ Info: Price and cut time (b-and-b)
└   t = 1.4745652
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 807
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0   0  1  1   0  17  3  0  0
│     0   0   0  6   2   2   6  9  6   0   0  0  0  0
│     9   2   0  0   0   0   0  0  0   0   0  0  0  0
│     6  18  20  6   0   0   0  0  0   0   0  1  0  0
│     0   0   0  4  10  10  10  6  9  15   0  1  0  0
└     6   0   1  0   1   0   0  0  0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.549458
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0789961
│   obj = 2.732627866311251
└   obj_bound = 2.7324113300801844
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   2   2   1  18  4  1  1
│      1   1   1  7   3   3   7  10   7   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  5  11  11  11   7  10  16   1  2  1  1
└      7   1   2  1   2   1   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3102893
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.244165
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   3   3   2  19  5  2  2
│      2   2   2  8   4   4   8  11   8   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  6  12  12  12   8  11  17   2  3  2  2
└      8   2   3  2   3   2   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5385486
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3880347
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 807
│   lb = 2.6758452420696455
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 461
└   length(nodes) = 923
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103093
└   sum(fire_plans.plans_per_fire) = 38421
┌ Info: Time check
└   time() - start_time = 1001.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 830
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280703
┌ Info: Price and cut time (b-and-b)
└   t = 0.6692344
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 830
│   lb = 2.6758452420696455
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 462
└   length(nodes) = 925
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103113
└   sum(fire_plans.plans_per_fire) = 38445
┌ Info: Time check
└   time() - start_time = 1002.6199998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 831
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334693
┌ Info: Price and cut time (b-and-b)
└   t = 1.0253955
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 831
│   lb = 2.675878445375166
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 463
└   length(nodes) = 927
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103191
└   sum(fire_plans.plans_per_fire) = 38495
┌ Info: Time check
└   time() - start_time = 1003.6959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 698
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250197
┌ Info: Price and cut time (b-and-b)
└   t = 0.4465746
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 698
│   lb = 2.675878445375166
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 464
└   length(nodes) = 929
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103247
└   sum(fire_plans.plans_per_fire) = 38514
┌ Info: Time check
└   time() - start_time = 1004.1819999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 699
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269786
┌ Info: Price and cut time (b-and-b)
└   t = 1.0331919
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 699
│   lb = 2.6758836908364048
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 465
└   length(nodes) = 931
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103417
└   sum(fire_plans.plans_per_fire) = 38563
┌ Info: Time check
└   time() - start_time = 1005.2569999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 514
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280068
┌ Info: Price and cut time (b-and-b)
└   t = 0.5913731
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 514
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   1  17  3  0  0
│     0   0   0  5  3  2  6  6  9   1   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  6  9  9  9  9  6  12   0  0  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4363137
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1064805
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  6   4   3   7   7  10   2   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  10  10  10  10   7  13   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0545088
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3045303
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  7   5   4   8   8  11   3   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  11  11  11  11   8  14   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.804111
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3844044
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 514
│   lb = 2.6758836908364048
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 466
└   length(nodes) = 933
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103953
└   sum(fire_plans.plans_per_fire) = 38767
┌ Info: Time check
└   time() - start_time = 1009.4859998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 515
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340389
┌ Info: Price and cut time (b-and-b)
└   t = 1.3637436
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 515
│   lb = 2.675884488727165
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 467
└   length(nodes) = 935
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104155
└   sum(fire_plans.plans_per_fire) = 38819
┌ Info: Time check
└   time() - start_time = 1010.9010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 748
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253283
┌ Info: Price and cut time (b-and-b)
└   t = 1.039539
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 748
│   lb = 2.675884488727165
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 468
└   length(nodes) = 937
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104268
└   sum(fire_plans.plans_per_fire) = 38862
┌ Info: Time check
└   time() - start_time = 1011.9809999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 749
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295571
┌ Info: Price and cut time (b-and-b)
└   t = 0.3263697
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 749
│   lb = 2.6758869417925344
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 469
└   length(nodes) = 939
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104292
└   sum(fire_plans.plans_per_fire) = 38873
┌ Info: Time check
└   time() - start_time = 1012.3550000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 406
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289239
┌ Info: Price and cut time (b-and-b)
└   t = 0.8031585
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 406
│   lb = 2.6758869417925344
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 470
└   length(nodes) = 941
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104384
└   sum(fire_plans.plans_per_fire) = 38895
┌ Info: Time check
└   time() - start_time = 1013.2519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 407
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255501
┌ Info: Price and cut time (b-and-b)
└   t = 1.4041207
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 407
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0  0   1  17  3  0  0
│     0   0   0   0  6  6  11   2  6   0   0  0  0  0
│     9   2   0   0  0  0   0   0  0   0   0  0  0  0
│     6  18  20   5  0  0   0   0  0   0   0  1  0  0
│     0   0   0  11  6  5   5  14  9  13   0  0  0  0
└     6   0   1   0  1  0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3998632
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0725489
│   obj = 2.7326278663112515
└   obj_bound = 2.732395899168387
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   1  7  7  12   3   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  12  7  6   6  15  10  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4811221
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4138858
│   obj = 2.732627866311251
└   obj_bound = 2.732357622025273
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   3  19  5  2  2
│      2   2   2   2  8  8  13   4   8   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  20  22   7  2  2   2   2   2   2   2  3  2  2
│      2   2   2  13  8  7   7  16  11  15   2  2  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.676468
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3949442
│   obj = 2.732627866311251
└   obj_bound = 2.7323593993342077
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326278663112515
┌ Info: current bounds
│   node_ix = 407
│   lb = 2.6758924310344807
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 471
└   length(nodes) = 943
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105090
└   sum(fire_plans.plans_per_fire) = 39126
┌ Info: Time check
└   time() - start_time = 1018.6480000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 498
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0226668
┌ Info: Price and cut time (b-and-b)
└   t = 0.9681455
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 498
│   lb = 2.6758924310344807
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 472
└   length(nodes) = 945
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105235
└   sum(fire_plans.plans_per_fire) = 39172
┌ Info: Time check
└   time() - start_time = 1019.6529998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 499
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302257
┌ Info: Price and cut time (b-and-b)
└   t = 0.821386
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 499
│   lb = 2.675893379929719
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 473
└   length(nodes) = 947
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105365
└   sum(fire_plans.plans_per_fire) = 39209
┌ Info: Time check
└   time() - start_time = 1020.5199999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 590
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299477
┌ Info: Price and cut time (b-and-b)
└   t = 1.6675082
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 590
│   lb = 2.675893379929719
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 474
└   length(nodes) = 949
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105552
└   sum(fire_plans.plans_per_fire) = 39274
┌ Info: Time check
└   time() - start_time = 1022.231999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 591
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314583
┌ Info: Price and cut time (b-and-b)
└   t = 0.3736618
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 591
│   lb = 2.6758963187200666
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 475
└   length(nodes) = 951
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105572
└   sum(fire_plans.plans_per_fire) = 39285
┌ Info: Time check
└   time() - start_time = 1022.6510000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 944
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023091
┌ Info: Price and cut time (b-and-b)
└   t = 1.1448967
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 944
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   0  17  3  0  0
│     0   0   0  9  8  2  6   3   3   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  6  0  0  0   0   0   0   0  0  0  0
│     0   0   0  0  5  9  9  12  12  14   0  0  0  0
└     6   1   1  0  1  1  0   0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5166936
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1157933
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   1  18  4  1  1
│      1   1   1  10  9   3   7   4   4   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   7  1   1   1   1   1   1   1  1  1  1
│      1   1   1   1  6  10  10  13  13  15   1  1  1  1
└      7   2   2   1  2   2   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1049047
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2889112
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  11  10   4   8   5   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   8   2   2   2   2   2   2   2  2  2  2
│      2   2   2   2   7  11  11  14  14  16   2  2  2  2
└      8   3   3   2   3   3   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.83619
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4338088
│   obj = 2.732627866311251
└   obj_bound = 2.7324429371155237
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 944
│   lb = 2.6758963187200666
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 476
└   length(nodes) = 953
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106112
└   sum(fire_plans.plans_per_fire) = 39541
┌ Info: Time check
└   time() - start_time = 1027.6269998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 945
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275843
┌ Info: Price and cut time (b-and-b)
└   t = 0.4190369
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 945
│   lb = 2.6759037445622327
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 477
└   length(nodes) = 955
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106135
└   sum(fire_plans.plans_per_fire) = 39554
┌ Info: Time check
└   time() - start_time = 1028.0920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 664
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247955
┌ Info: Price and cut time (b-and-b)
└   t = 1.2964042
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 664
│   lb = 2.6759037445622327
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 478
└   length(nodes) = 957
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106332
└   sum(fire_plans.plans_per_fire) = 39608
┌ Info: Time check
└   time() - start_time = 1029.4279999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 665
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252177
┌ Info: Price and cut time (b-and-b)
└   t = 0.4271566
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 665
│   lb = 2.67590400797299
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 479
└   length(nodes) = 959
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106392
└   sum(fire_plans.plans_per_fire) = 39620
┌ Info: Time check
└   time() - start_time = 1029.8959999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 262
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249563
┌ Info: Price and cut time (b-and-b)
└   t = 1.0107578
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 262
│   lb = 2.67590400797299
└   ub = 2.732627866311251
┌ Info: number of nodes
│   node_explored_count = 480
└   length(nodes) = 961
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106454
└   sum(fire_plans.plans_per_fire) = 39644
┌ Info: Time check
└   time() - start_time = 1030.9459998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 263
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264768
┌ Info: Price and cut time (b-and-b)
└   t = 1.2552064
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 263
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0   0   0   0   1  17  2  0  0
│     0   0   0  6   2   2   3  10  10   0   0  0  0  0
│     9   2   0  0   0   0   0   0   0   0   0  0  0  0
│     6  18  20  5   0   0   0   0   0   0   0  1  0  0
│     0   0   0  5  10  10  12   6   6  13   0  1  0  0
└     6   0   1  0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4186542
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1009724
│   obj = 2.7326278663112507
└   obj_bound = 2.732565016311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  3  1  1
│      1   1   1  7   3   3   4  11  11   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  11  11  13   7   7  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1180674
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2957353
│   obj = 2.732627866311251
└   obj_bound = 2.7323709220623615
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  4  2  2
│      2   2   2  8   4   4   5  12  12   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  12  12  14   8   8  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4345281
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3515168
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7326278663112507
┌ Info: current bounds
│   node_ix = 263
│   lb = 2.6759198214128963
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 481
└   length(nodes) = 963
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107179
└   sum(fire_plans.plans_per_fire) = 39922
┌ Info: Time check
└   time() - start_time = 1036.494999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 836
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246798
┌ Info: Price and cut time (b-and-b)
└   t = 0.6143629
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 836
│   lb = 2.6759198214128963
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 482
└   length(nodes) = 965
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107227
└   sum(fire_plans.plans_per_fire) = 39938
┌ Info: Time check
└   time() - start_time = 1037.148999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 837
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286285
┌ Info: Price and cut time (b-and-b)
└   t = 1.4030446
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 837
│   lb = 2.6759220282934173
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 483
└   length(nodes) = 967
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107445
└   sum(fire_plans.plans_per_fire) = 39991
┌ Info: Time check
└   time() - start_time = 1038.5969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 680
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288137
┌ Info: Price and cut time (b-and-b)
└   t = 1.4073382
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 680
│   lb = 2.6759220282934173
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 484
└   length(nodes) = 969
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107608
└   sum(fire_plans.plans_per_fire) = 40042
┌ Info: Time check
└   time() - start_time = 1040.0499999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 681
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026647
┌ Info: Price and cut time (b-and-b)
└   t = 0.4081139
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 681
│   lb = 2.67592789127824
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 485
└   length(nodes) = 971
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107649
└   sum(fire_plans.plans_per_fire) = 40055
┌ Info: Time check
└   time() - start_time = 1040.5030000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 194
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224023
┌ Info: Price and cut time (b-and-b)
└   t = 0.9465641
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 194
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   0  17  3  0  0
│     0   0   0  6  9  6   3   3   4   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  7  0  0   0   0   0   0   0  1  0  0
│     0   0   0  3  3  5  12  12  13  13   1  0  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4585375
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.081081
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  10  7   4   4   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  8   1  1   1   1   1   1   1  2  1  1
│      1   1   1  4   4  6  13  13  14  14   2  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4061681
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5773627
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   2  19  5  2  2
│      2   2   2  8  11  8   5   5   6   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  9   2  2   2   2   2   2   2  3  2  2
│      2   2   2  5   5  7  14  14  15  15   3  2  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9665714
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3646651
│   obj = 2.732627866311251
└   obj_bound = 2.7326278663112507
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 194
│   lb = 2.67592789127824
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 486
└   length(nodes) = 973
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108069
└   sum(fire_plans.plans_per_fire) = 40318
┌ Info: Time check
└   time() - start_time = 1045.832999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 195
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0750599
┌ Info: Price and cut time (b-and-b)
└   t = 1.2295589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 195
│   lb = 2.6759278961217294
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 487
└   length(nodes) = 975
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108188
└   sum(fire_plans.plans_per_fire) = 40362
┌ Info: Time check
└   time() - start_time = 1047.1529998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 702
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287405
┌ Info: Price and cut time (b-and-b)
└   t = 0.7856864
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 702
│   lb = 2.6759278961217294
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 488
└   length(nodes) = 977
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108209
└   sum(fire_plans.plans_per_fire) = 40389
┌ Info: Time check
└   time() - start_time = 1047.9829998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 703
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281134
┌ Info: Price and cut time (b-and-b)
└   t = 1.0705707
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 703
│   lb = 2.67592789612173
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 489
└   length(nodes) = 979
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108374
└   sum(fire_plans.plans_per_fire) = 40438
┌ Info: Time check
└   time() - start_time = 1049.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 978
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267462
┌ Info: Price and cut time (b-and-b)
└   t = 1.5188402
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 978
│   lb = 2.67592789612173
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 490
└   length(nodes) = 981
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108516
└   sum(fire_plans.plans_per_fire) = 40503
┌ Info: Time check
└   time() - start_time = 1050.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 979
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313828
┌ Info: Price and cut time (b-and-b)
└   t = 0.2449349
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 979
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0   0  0   0   0   1  17  3  0  0
│      0   0   0  4  7  10  7   3   4   0   0  0  0  0
│     10   2   0  0  0   0  0   0   0   0   0  0  0  0
│      5  19  20  6  0   0  0   0   0   0   0  1  0  0
│      0   0   0  7  6   2  9  12  12  13   0  0  0  0
└      6   0   1  0  1   0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.434903
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1737714
│   obj = 2.732627866311251
└   obj_bound = 2.732358054209727
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  5  8  11   8   4   5   1   1  1  1  1
│     11   3   1  1  1   1   1   1   1   1   1  1  1  1
│      6  20  21  7  1   1   1   1   1   1   1  2  1  1
│      1   1   1  8  7   3  10  13  13  14   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6982577
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3693634
│   obj = 2.732627866311251
└   obj_bound = 2.7323816948594373
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  6  9  12   9   5   6   2   2  2  2  2
│     12   4   2  2  2   2   2   2   2   2   2  2  2  2
│      7  21  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  8   4  11  14  14  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8299164
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.348414
│   obj = 2.732627866311251
└   obj_bound = 2.7325313652586276
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 979
│   lb = 2.675934024459881
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 491
└   length(nodes) = 983
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108862
└   sum(fire_plans.plans_per_fire) = 40748
┌ Info: Time check
└   time() - start_time = 1055.3650000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 772
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319983
┌ Info: Price and cut time (b-and-b)
└   t = 0.9054251
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 772
│   lb = 2.675934024459881
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 492
└   length(nodes) = 985
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108963
└   sum(fire_plans.plans_per_fire) = 40785
┌ Info: Time check
└   time() - start_time = 1056.3179998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 773
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249849
┌ Info: Price and cut time (b-and-b)
└   t = 1.3329412
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 773
│   lb = 2.6759354926959333
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 493
└   length(nodes) = 987
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109165
└   sum(fire_plans.plans_per_fire) = 40844
┌ Info: Time check
└   time() - start_time = 1057.6909999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 400
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283586
┌ Info: Price and cut time (b-and-b)
└   t = 1.1692858
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 400
│   lb = 2.6759354926959333
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 494
└   length(nodes) = 989
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109278
└   sum(fire_plans.plans_per_fire) = 40889
┌ Info: Time check
└   time() - start_time = 1058.9039998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 401
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279075
┌ Info: Price and cut time (b-and-b)
└   t = 1.5476639
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 401
│   lb = 2.675935705059372
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 495
└   length(nodes) = 991
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109508
└   sum(fire_plans.plans_per_fire) = 40969
┌ Info: Time check
└   time() - start_time = 1060.4939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 534
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257685
┌ Info: Price and cut time (b-and-b)
└   t = 0.7153393
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 534
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  6  3  6  9  6   1   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  5  9  5  6  9  15  13   0  1  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4577305
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.094116
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  7   4  7  10   7   2   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  6   7  10  16  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5365778
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2966523
│   obj = 2.732627866311251
└   obj_bound = 2.732403731879185
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  8   5  8  11   8   3   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  7   8  11  17  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9683855
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5164802
│   obj = 2.732627866311251
└   obj_bound = 2.7324268836256245
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 534
│   lb = 2.675935705059372
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 496
└   length(nodes) = 993
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110172
└   sum(fire_plans.plans_per_fire) = 41205
┌ Info: Time check
└   time() - start_time = 1065.6099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 535
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0547735
┌ Info: Price and cut time (b-and-b)
└   t = 1.130108
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 535
│   lb = 2.6759377929653754
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 497
└   length(nodes) = 995
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110468
└   sum(fire_plans.plans_per_fire) = 41261
┌ Info: Time check
└   time() - start_time = 1066.811999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 622
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0890586
┌ Info: Price and cut time (b-and-b)
└   t = 0.429485
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 622
│   lb = 2.6759377929653754
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 498
└   length(nodes) = 997
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110556
└   sum(fire_plans.plans_per_fire) = 41287
┌ Info: Time check
└   time() - start_time = 1067.343999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 623
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0218064
┌ Info: Price and cut time (b-and-b)
└   t = 1.1596005
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 623
│   lb = 2.675937792965376
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 499
└   length(nodes) = 999
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110828
└   sum(fire_plans.plans_per_fire) = 41346
┌ Info: Time check
└   time() - start_time = 1068.539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 996
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231545
┌ Info: Price and cut time (b-and-b)
└   t = 0.9801755
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 996
│   lb = 2.675937792965376
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 500
└   length(nodes) = 1001
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110921
└   sum(fire_plans.plans_per_fire) = 41387
┌ Info: Time check
└   time() - start_time = 1069.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 997
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252669
┌ Info: Price and cut time (b-and-b)
└   t = 1.563742
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 997
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  18  3  0  0
│     0   0   0  5  6  3  6  8   3   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  19  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  6  6  8  9  8  12  13   0  0  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4299363
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1029553
│   obj = 2.732627866311251
└   obj_bound = 2.732627866311251
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1  1   1   2  19  4  1  1
│      1   1   1  6  7  4   7  9   4   1   1  1  1  1
│     10   3   1  1  1  1   1  1   1   1   1  1  1  1
│      7  20  21  6  1  1   1  1   1   1   1  2  1  1
│      1   1   1  7  7  9  10  9  13  14   1  1  1  1
└      7   1   2  1  2  1   1  1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2763004
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3361492
│   obj = 2.732627866311251
└   obj_bound = 2.732391628519464
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  20  5  2  2
│      2   2   2  7  8   5   8  10   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  21  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  8  10  11  10  14  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.006139
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3460043
│   obj = 2.732627866311251
└   obj_bound = 2.732359977451015
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732627866311251
┌ Info: current bounds
│   node_ix = 997
│   lb = 2.675940060454812
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 501
└   length(nodes) = 1003
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111495
└   sum(fire_plans.plans_per_fire) = 41661
┌ Info: Time check
└   time() - start_time = 1075.1740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 460
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235199
┌ Info: Price and cut time (b-and-b)
└   t = 1.3638489
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 460
│   lb = 2.675940060454812
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 502
└   length(nodes) = 1005
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111628
└   sum(fire_plans.plans_per_fire) = 41725
┌ Info: Time check
└   time() - start_time = 1076.5769999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 461
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0381886
┌ Info: Price and cut time (b-and-b)
└   t = 0.2709129
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 461
│   lb = 2.675940141262807
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 503
└   length(nodes) = 1007
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111652
└   sum(fire_plans.plans_per_fire) = 41733
┌ Info: Time check
└   time() - start_time = 1076.9010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 676
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306684
┌ Info: Price and cut time (b-and-b)
└   t = 0.5832751
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 676
│   lb = 2.675940141262807
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 504
└   length(nodes) = 1009
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111710
└   sum(fire_plans.plans_per_fire) = 41755
┌ Info: Time check
└   time() - start_time = 1077.5319998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 677
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275277
┌ Info: Price and cut time (b-and-b)
└   t = 0.8929216
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 677
│   lb = 2.675942567192882
└   ub = 2.7326278663112507
┌ Info: number of nodes
│   node_explored_count = 505
└   length(nodes) = 1011
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111802
└   sum(fire_plans.plans_per_fire) = 41786
┌ Info: Time check
└   time() - start_time = 1078.4670000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 992
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281286
┌ Info: Price and cut time (b-and-b)
└   t = 0.6188232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 992
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   0  17  3  0  0
│     0   0   0  3  3  6  13  6   0   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  7  0  0   0  0   0   0   0  1  0  0
│     0   0   0  7  9  6   3  9  16  13   1  1  0  0
└     6   0   1  0  1  0   0  0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6367115
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1119148
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   1  18  4  1  1
│      1   1   1  4   4  7  14   7   1   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  8   1  1   1   1   1   1   1  2  1  1
│      1   1   1  8  10  7   4  10  17  14   2  2  1  1
└      7   1   2  1   2  1   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1406472
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3230115
│   obj = 2.7325285460278343
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   2  19  5  2  2
│      2   2   2  5   5  8  15   8   2   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  9   2  2   2   2   2   2   2  3  2  2
│      2   2   2  9  11  8   5  11  18  15   3  3  2  2
└      8   2   3  2   3  2   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1710037
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5324534
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 992
│   lb = 2.675942567192882
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 506
└   length(nodes) = 1013
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112358
└   sum(fire_plans.plans_per_fire) = 42038
┌ Info: Time check
└   time() - start_time = 1083.6209998130798
┌ Info: Exploring node
└   branch_and_bound_node.ix = 993
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0395151
┌ Info: Price and cut time (b-and-b)
└   t = 1.1164643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 993
│   lb = 2.675942567192882
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 507
└   length(nodes) = 1015
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112489
└   sum(fire_plans.plans_per_fire) = 42075
┌ Info: Time check
└   time() - start_time = 1084.7929999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1014
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273165
┌ Info: Price and cut time (b-and-b)
└   t = 1.3418823
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1014
│   lb = 2.675942567192882
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 508
└   length(nodes) = 1017
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112624
└   sum(fire_plans.plans_per_fire) = 42141
┌ Info: Time check
└   time() - start_time = 1086.1799998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1015
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290908
┌ Info: Price and cut time (b-and-b)
└   t = 0.5347537
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1015
│   lb = 2.6759434858507674
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 509
└   length(nodes) = 1019
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112648
└   sum(fire_plans.plans_per_fire) = 42160
┌ Info: Time check
└   time() - start_time = 1086.7579998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 868
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251561
┌ Info: Price and cut time (b-and-b)
└   t = 0.6882619
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 868
│   lb = 2.6759434858507674
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 510
└   length(nodes) = 1021
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112689
└   sum(fire_plans.plans_per_fire) = 42182
┌ Info: Time check
└   time() - start_time = 1087.486999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 869
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269888
┌ Info: Price and cut time (b-and-b)
└   t = 1.4925356
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 869
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0   0   2  17  3  0  0
│     0   0   0   0   2   2  6  9  12   0   0  0  0  0
│     9   2   0   0   0   0  0  0   0   0   0  0  0  0
│     6  18  20   5   0   0  0  0   0   0   0  1  0  0
│     0   0   0  11  11  10  9  6   3  12   1  0  0  0
└     6   0   1   0   1   0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.550476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1222746
│   obj = 2.732528546027834
└   obj_bound = 2.732333461358669
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1   1   3   3   7  10  13   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  12  11  10   7   4  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1027245
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3805694
│   obj = 2.7325285460278343
└   obj_bound = 2.7324485969513628
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2   2   4   4   8  11  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  13  12  11   8   5  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.920733
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4102248
│   obj = 2.7325285460278343
└   obj_bound = 2.7325285460278343
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 869
│   lb = 2.6759504211784537
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 511
└   length(nodes) = 1023
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113321
└   sum(fire_plans.plans_per_fire) = 42402
┌ Info: Time check
└   time() - start_time = 1093.1719999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 604
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024037
┌ Info: Price and cut time (b-and-b)
└   t = 1.3007007
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 604
│   lb = 2.6759504211784537
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 512
└   length(nodes) = 1025
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113436
└   sum(fire_plans.plans_per_fire) = 42444
┌ Info: Time check
└   time() - start_time = 1094.5119998455048
┌ Info: Exploring node
└   branch_and_bound_node.ix = 605
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315793
┌ Info: Price and cut time (b-and-b)
└   t = 1.415155
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 605
│   lb = 2.6759527481245113
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 513
└   length(nodes) = 1027
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113464
└   sum(fire_plans.plans_per_fire) = 42478
┌ Info: Time check
└   time() - start_time = 1095.9739999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 696
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029875
┌ Info: Price and cut time (b-and-b)
└   t = 0.5521809
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 696
│   lb = 2.6759527481245113
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 514
└   length(nodes) = 1029
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113536
└   sum(fire_plans.plans_per_fire) = 42495
┌ Info: Time check
└   time() - start_time = 1096.5699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 697
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237704
┌ Info: Price and cut time (b-and-b)
└   t = 1.2666244
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 697
│   lb = 2.6759585449599874
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 515
└   length(nodes) = 1031
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113731
└   sum(fire_plans.plans_per_fire) = 42551
┌ Info: Time check
└   time() - start_time = 1097.875
┌ Info: Exploring node
└   branch_and_bound_node.ix = 704
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261497
┌ Info: Price and cut time (b-and-b)
└   t = 0.6189741
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 704
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0   0   2  17  3  0  0
│     0   0   0   0   1   1  6  12  12   0   0  0  0  0
│     9   2   0   0   0   0  0   0   0   0   0  0  0  0
│     6  18  20   5   0   0  0   0   0   0   0  1  0  0
│     0   0   0  11  12  11  9   3   4  12   1  1  0  0
└     6   0   1   0   1   0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4144749
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.103317
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1   1   2   2   7  13  13   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  13  12  10   4   5  13   2  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2129191
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3205036
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2   2   3   3   8  14  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13  11   5   6  14   3  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8721999
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9246485
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 704
│   lb = 2.6759585449599874
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 516
└   length(nodes) = 1033
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114231
└   sum(fire_plans.plans_per_fire) = 42790
┌ Info: Time check
└   time() - start_time = 1102.8819999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 705
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253215
┌ Info: Price and cut time (b-and-b)
└   t = 1.3529019
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 705
│   lb = 2.67596394451037
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 517
└   length(nodes) = 1035
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114398
└   sum(fire_plans.plans_per_fire) = 42846
┌ Info: Time check
└   time() - start_time = 1104.2749998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 480
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271103
┌ Info: Price and cut time (b-and-b)
└   t = 1.2965082
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 480
│   lb = 2.67596394451037
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 518
└   length(nodes) = 1037
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114574
└   sum(fire_plans.plans_per_fire) = 42889
┌ Info: Time check
└   time() - start_time = 1105.6169998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 481
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237049
┌ Info: Price and cut time (b-and-b)
└   t = 1.0994906
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 481
│   lb = 2.6759652946773342
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 519
└   length(nodes) = 1039
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114784
└   sum(fire_plans.plans_per_fire) = 42929
┌ Info: Time check
└   time() - start_time = 1106.755999803543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 500
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290939
┌ Info: Price and cut time (b-and-b)
└   t = 0.8783856
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 500
│   lb = 2.6759652946773342
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 520
└   length(nodes) = 1041
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114872
└   sum(fire_plans.plans_per_fire) = 42963
┌ Info: Time check
└   time() - start_time = 1107.6779999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 501
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238011
┌ Info: Price and cut time (b-and-b)
└   t = 0.7883827
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 501
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  17  3  0  0
│     0   0   0  5  6  8   3  6   3   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  7  6  4  13  9  13  13   0  1  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5648434
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1079432
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  6  7  9   4   7   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  8  7  5  14  10  14  14   1  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0144243
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2662602
│   obj = 2.7325285460278343
└   obj_bound = 2.732258415056079
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  7  8  10   5   8   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  8   6  15  11  15  15   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9516338
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4553455
│   obj = 2.732528546027834
└   obj_bound = 2.7322621447726037
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 501
│   lb = 2.675975851269533
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 521
└   length(nodes) = 1043
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115412
└   sum(fire_plans.plans_per_fire) = 43200
┌ Info: Time check
└   time() - start_time = 1112.369999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 644
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0317353
┌ Info: Price and cut time (b-and-b)
└   t = 0.9964026
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 644
│   lb = 2.675975851269533
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 522
└   length(nodes) = 1045
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115554
└   sum(fire_plans.plans_per_fire) = 43235
┌ Info: Time check
└   time() - start_time = 1113.412999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 645
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258458
┌ Info: Price and cut time (b-and-b)
└   t = 0.6516032
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 645
│   lb = 2.6759760262843373
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 523
└   length(nodes) = 1047
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115599
└   sum(fire_plans.plans_per_fire) = 43254
┌ Info: Time check
└   time() - start_time = 1114.1079998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 744
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287857
┌ Info: Price and cut time (b-and-b)
└   t = 1.357707
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 744
│   lb = 2.6759760262843373
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 524
└   length(nodes) = 1049
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115734
└   sum(fire_plans.plans_per_fire) = 43320
┌ Info: Time check
└   time() - start_time = 1115.510999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 745
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251864
┌ Info: Price and cut time (b-and-b)
└   t = 0.3946099
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 745
│   lb = 2.675986624574974
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 525
└   length(nodes) = 1051
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115756
└   sum(fire_plans.plans_per_fire) = 43331
┌ Info: Time check
└   time() - start_time = 1115.9470000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 672
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025554
┌ Info: Price and cut time (b-and-b)
└   t = 0.4853768
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 672
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0   0   3  16  3  0  0
│     0   0   0  3   1  6  9  9   4   0   0  0  0  0
│     9   2   0  0   0  0  0  0   0   0   0  0  0  0
│     6  18  20  5   0  0  0  0   0   0   0  1  0  0
│     0   0   0  8  12  5  6  6  12  11   2  0  0  0
└     6   0   1  0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3978416
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1130115
│   obj = 2.732528546027834
└   obj_bound = 2.7323131097649753
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   4  17  4  1  1
│      1   1   1  4   2  7  10  10   5   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  9  13  6   7   7  13  12   3  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7371962
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2924686
│   obj = 2.732528546027834
└   obj_bound = 2.7322580483772745
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   5  18  5  2  2
│      2   2   2   5   3  8  11  11   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  10  14  7   8   8  14  13   4  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2132132
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2901009
│   obj = 2.732528546027834
└   obj_bound = 2.732426507652119
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 672
│   lb = 2.675986624574974
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 526
└   length(nodes) = 1053
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116274
└   sum(fire_plans.plans_per_fire) = 43585
┌ Info: Time check
└   time() - start_time = 1121.0009999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 673
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0227854
┌ Info: Price and cut time (b-and-b)
└   t = 1.1685096
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 673
│   lb = 2.675986624574974
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 527
└   length(nodes) = 1055
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116489
└   sum(fire_plans.plans_per_fire) = 43645
┌ Info: Time check
└   time() - start_time = 1122.207999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1052
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272624
┌ Info: Price and cut time (b-and-b)
└   t = 1.2823349
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1052
│   lb = 2.675986624574974
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 528
└   length(nodes) = 1057
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116646
└   sum(fire_plans.plans_per_fire) = 43695
┌ Info: Time check
└   time() - start_time = 1123.5329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1053
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0904341
┌ Info: Price and cut time (b-and-b)
└   t = 0.1230924
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1053
│   lb = 2.67599572508431
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 529
└   length(nodes) = 1059
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116666
└   sum(fire_plans.plans_per_fire) = 43701
┌ Info: Time check
└   time() - start_time = 1123.760999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 252
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0222691
┌ Info: Price and cut time (b-and-b)
└   t = 1.1134491
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 252
│   lb = 2.67599572508431
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 530
└   length(nodes) = 1061
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116842
└   sum(fire_plans.plans_per_fire) = 43771
┌ Info: Time check
└   time() - start_time = 1124.9119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 253
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274081
┌ Info: Price and cut time (b-and-b)
└   t = 0.5415599
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 253
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0   0   0   1  17  3  0  0
│      0   0   0  9  9  6  6   0   0   0   0  0  0  0
│     10   1   0  0  0  0  0   0   0   0   0  0  0  0
│      5  19  20  6  0  0  0   0   0   0   0  1  0  0
│      0   0   0  1  3  5  9  15  16  13   0  0  0  0
└      6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4878967
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1714389
│   obj = 2.732528546027834
└   obj_bound = 2.732284939974514
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  10  10  7   7   1   1   1   1  1  1  1
│     11   2   1   1   1  1   1   1   1   1   1  1  1  1
│      6  20  21   7   1  1   1   1   1   1   1  2  1  1
│      1   1   1   2   4  6  10  16  17  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2532597
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.3323284
│   obj = 2.7325285460278343
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  11  11  8   8   2   2   2   2  2  2  2
│     12   3   2   2   2  2   2   2   2   2   2  2  2  2
│      7  21  22   8   2  2   2   2   2   2   2  3  2  2
│      2   2   2   3   5  7  11  17  18  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7744762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5067056
│   obj = 2.7325285460278343
└   obj_bound = 2.732288506285193
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 253
│   lb = 2.676000388740586
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 531
└   length(nodes) = 1063
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117244
└   sum(fire_plans.plans_per_fire) = 44001
┌ Info: Time check
└   time() - start_time = 1130.5309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 920
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251134
┌ Info: Price and cut time (b-and-b)
└   t = 1.2295981
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 920
│   lb = 2.676000388740586
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 532
└   length(nodes) = 1065
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117337
└   sum(fire_plans.plans_per_fire) = 44063
┌ Info: Time check
└   time() - start_time = 1131.8019998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 921
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292229
┌ Info: Price and cut time (b-and-b)
└   t = 0.3254444
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 921
│   lb = 2.6760037227068887
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 533
└   length(nodes) = 1067
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117381
└   sum(fire_plans.plans_per_fire) = 44073
┌ Info: Time check
└   time() - start_time = 1132.1710000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 716
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281927
┌ Info: Price and cut time (b-and-b)
└   t = 0.8663867
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 716
│   lb = 2.6760037227068887
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 534
└   length(nodes) = 1069
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117511
└   sum(fire_plans.plans_per_fire) = 44112
┌ Info: Time check
└   time() - start_time = 1133.0789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 717
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259534
┌ Info: Price and cut time (b-and-b)
└   t = 0.834303
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 717
│   lb = 2.676004665529686
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 535
└   length(nodes) = 1071
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117608
└   sum(fire_plans.plans_per_fire) = 44150
┌ Info: Time check
└   time() - start_time = 1133.954999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 862
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240061
┌ Info: Price and cut time (b-and-b)
└   t = 0.5508295
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 862
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   1  17  3  0  0
│     0   0   0  4  9  9   3   4   3   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  7  3  3  12  12  13  13   0  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5236746
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1071163
│   obj = 2.7325285460278343
└   obj_bound = 2.7325285460278343
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  5  10  10   4   5   4   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  8   4   4  13  13  14  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1049735
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3033663
│   obj = 2.7325285460278343
└   obj_bound = 2.732289503415134
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  6  11  11   5   6   5   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  9   5   5  14  14  15  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8623717
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5159775
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325285460278343
┌ Info: current bounds
│   node_ix = 862
│   lb = 2.676004665529686
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 536
└   length(nodes) = 1073
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118012
└   sum(fire_plans.plans_per_fire) = 44393
┌ Info: Time check
└   time() - start_time = 1138.4759998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 863
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235084
┌ Info: Price and cut time (b-and-b)
└   t = 1.7510954
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 863
│   lb = 2.676004665529686
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 537
└   length(nodes) = 1075
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118156
└   sum(fire_plans.plans_per_fire) = 44458
┌ Info: Time check
└   time() - start_time = 1140.2649998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1072
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273819
┌ Info: Price and cut time (b-and-b)
└   t = 0.8267182
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1072
│   lb = 2.676004665529686
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 538
└   length(nodes) = 1077
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118239
└   sum(fire_plans.plans_per_fire) = 44493
┌ Info: Time check
└   time() - start_time = 1141.1349999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1073
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305762
┌ Info: Price and cut time (b-and-b)
└   t = 1.0875298
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1073
│   lb = 2.676014505316345
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 539
└   length(nodes) = 1079
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118318
└   sum(fire_plans.plans_per_fire) = 44535
┌ Info: Time check
└   time() - start_time = 1142.2679998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 172
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283246
┌ Info: Price and cut time (b-and-b)
└   t = 1.4529275
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 172
│   lb = 2.676014505316345
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 540
└   length(nodes) = 1081
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118496
└   sum(fire_plans.plans_per_fire) = 44590
┌ Info: Time check
└   time() - start_time = 1143.7639999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 173
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025633
┌ Info: Price and cut time (b-and-b)
└   t = 1.3970614
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 173
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0  0   1  17  3  0  0
│     0   0   0   2  7  4   5  7  9   0   0  0  0  0
│     9   2   0   0  0  0   0  0  0   0   0  0  0  0
│     6  18  20   5  0  0   0  0  0   0   0  1  0  0
│     0   0   0  10  6  8  10  9  6  13   0  0  0  0
└     6   0   1   0  1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4413279
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1058559
│   obj = 2.732528546027834
└   obj_bound = 2.732528546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   3  8  5   6   8  10   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  11  7  9  11  10   7  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3504557
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3277577
│   obj = 2.732528546027834
└   obj_bound = 2.7323073774207813
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   4  9   6   7   9  11   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  8  10  12  11   8  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6945735
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3150743
│   obj = 2.7325285460278343
└   obj_bound = 2.732263461856638
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732528546027834
┌ Info: current bounds
│   node_ix = 173
│   lb = 2.6760162304089876
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 541
└   length(nodes) = 1083
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119127
└   sum(fire_plans.plans_per_fire) = 44843
┌ Info: Time check
└   time() - start_time = 1148.9240000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1008
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259336
┌ Info: Price and cut time (b-and-b)
└   t = 1.3361001
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1008
│   lb = 2.6760162304089876
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 542
└   length(nodes) = 1085
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119217
└   sum(fire_plans.plans_per_fire) = 44899
┌ Info: Time check
└   time() - start_time = 1150.3029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1009
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295739
┌ Info: Price and cut time (b-and-b)
└   t = 0.2898238
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1009
│   lb = 2.6760267093182213
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 543
└   length(nodes) = 1087
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119244
└   sum(fire_plans.plans_per_fire) = 44907
┌ Info: Time check
└   time() - start_time = 1150.6959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 924
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261895
┌ Info: Price and cut time (b-and-b)
└   t = 1.342735
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 924
│   lb = 2.6760267093182213
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 544
└   length(nodes) = 1089
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119360
└   sum(fire_plans.plans_per_fire) = 44984
┌ Info: Time check
└   time() - start_time = 1152.0820000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 925
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339009
┌ Info: Price and cut time (b-and-b)
└   t = 0.3852302
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 925
│   lb = 2.676027741280448
└   ub = 2.732528546027834
┌ Info: number of nodes
│   node_explored_count = 545
└   length(nodes) = 1091
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119382
└   sum(fire_plans.plans_per_fire) = 44998
┌ Info: Time check
└   time() - start_time = 1152.5179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 708
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0210577
┌ Info: Price and cut time (b-and-b)
└   t = 0.8228825
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 708
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   2  17  3  0  0
│     0   0   0  2  3  6  6  9  7   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  9  9  6  9  6  9  12   1  0  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4049916
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1060779
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   3  18  4  1  1
│      1   1   1   3   4  7   7  10   8   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  10  7  10   7  10  13   2  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2403513
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2801911
│   obj = 2.732516344329671
└   obj_bound = 2.732378936345198
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   4  19  5  2  2
│      2   2   2   4   5  8   8  11   9   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  11  11  8  11   8  11  14   3  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5684538
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3375942
│   obj = 2.7325163443296705
└   obj_bound = 2.7322514276794965
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 708
│   lb = 2.676027741280448
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 546
└   length(nodes) = 1093
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119825
└   sum(fire_plans.plans_per_fire) = 45215
┌ Info: Time check
└   time() - start_time = 1156.914999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 709
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244628
┌ Info: Price and cut time (b-and-b)
└   t = 1.1467914
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 709
│   lb = 2.6760281374109143
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 547
└   length(nodes) = 1095
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120076
└   sum(fire_plans.plans_per_fire) = 45263
┌ Info: Time check
└   time() - start_time = 1158.1569998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 186
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296877
┌ Info: Price and cut time (b-and-b)
└   t = 0.9312824
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 186
│   lb = 2.6760281374109143
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 548
└   length(nodes) = 1097
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120205
└   sum(fire_plans.plans_per_fire) = 45304
┌ Info: Time check
└   time() - start_time = 1159.1319999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 187
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215207
┌ Info: Price and cut time (b-and-b)
└   t = 0.6735777
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 187
│   lb = 2.676029784353894
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 549
└   length(nodes) = 1099
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120339
└   sum(fire_plans.plans_per_fire) = 45334
┌ Info: Time check
└   time() - start_time = 1159.8429999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 634
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275217
┌ Info: Price and cut time (b-and-b)
└   t = 0.3138433
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 634
│   lb = 2.676029784353894
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 550
└   length(nodes) = 1101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120379
└   sum(fire_plans.plans_per_fire) = 45346
┌ Info: Time check
└   time() - start_time = 1160.1999998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 635
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224226
┌ Info: Price and cut time (b-and-b)
└   t = 0.9815629
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 635
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0  0  0   1  17  3  0  0
│     0   0   0  8  6   2   3  6  6   0   0  0  0  0
│     9   2   0  0  0   0   0  0  0   0   0  0  0  0
│     6  19  20  5  0   0   0  0  0   0   0  1  0  0
│     0   0   0  3  6  10  12  9  9  13   0  0  0  0
└     6   0   1  0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6421127
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.119375
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  9  7   3   4   7   7   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  20  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  4  7  11  13  10  10  14   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1222791
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.301047
│   obj = 2.7325163443296705
└   obj_bound = 2.732369219692485
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  10  8   4   5   8   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  21  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   5  8  12  14  11  11  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8824064
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3561386
│   obj = 2.732516344329671
└   obj_bound = 2.7324277340734655
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 635
│   lb = 2.6760334525409513
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 551
└   length(nodes) = 1103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120789
└   sum(fire_plans.plans_per_fire) = 45592
┌ Info: Time check
└   time() - start_time = 1165.1150000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1102
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033712
┌ Info: Price and cut time (b-and-b)
└   t = 1.5107049
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1102
│   lb = 2.6760334525409513
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 552
└   length(nodes) = 1105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120945
└   sum(fire_plans.plans_per_fire) = 45648
┌ Info: Time check
└   time() - start_time = 1166.675999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1103
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258249
┌ Info: Price and cut time (b-and-b)
└   t = 0.2618168
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1103
│   lb = 2.676035850411053
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 553
└   length(nodes) = 1107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121002
└   sum(fire_plans.plans_per_fire) = 45656
┌ Info: Time check
└   time() - start_time = 1166.9809999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1076
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.03235
┌ Info: Price and cut time (b-and-b)
└   t = 1.4063327
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1076
│   lb = 2.676035850411053
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 554
└   length(nodes) = 1109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121073
└   sum(fire_plans.plans_per_fire) = 45712
┌ Info: Time check
└   time() - start_time = 1168.4359998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1077
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300744
┌ Info: Price and cut time (b-and-b)
└   t = 0.2480354
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1077
│   lb = 2.676039121862766
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 555
└   length(nodes) = 1111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121108
└   sum(fire_plans.plans_per_fire) = 45719
┌ Info: Time check
└   time() - start_time = 1168.731999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 558
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0442544
┌ Info: Price and cut time (b-and-b)
└   t = 0.9623046
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 558
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0  0   1  17  3  0  0
│     0   0   0   2  6  8   3  6  6   0   0  0  0  0
│     9   2   0   0  0  0   0  0  0   0   0  0  0  0
│     6  18  20   5  0  0   0  0  0   0   0  1  0  0
│     0   0   0  10  6  3  12  9  9  13   0  0  0  0
└     6   0   1   0  1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7306355
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.110894
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   3  7  9   4   7   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  11  7  4  13  10  10  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1681532
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3026514
│   obj = 2.73251634432967
└   obj_bound = 2.7324446445379964
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   4  8  10   5   8   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  8   5  14  11  11  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9489348
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4122454
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 558
│   lb = 2.676039121862766
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 556
└   length(nodes) = 1113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121604
└   sum(fire_plans.plans_per_fire) = 45963
┌ Info: Time check
└   time() - start_time = 1173.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 559
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252688
┌ Info: Price and cut time (b-and-b)
└   t = 0.8305742
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 559
│   lb = 2.6760453848928596
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 557
└   length(nodes) = 1115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121660
└   sum(fire_plans.plans_per_fire) = 45985
┌ Info: Time check
└   time() - start_time = 1174.7809998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 332
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251921
┌ Info: Price and cut time (b-and-b)
└   t = 0.6516741
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 332
│   lb = 2.6760453848928596
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 558
└   length(nodes) = 1117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121740
└   sum(fire_plans.plans_per_fire) = 46015
┌ Info: Time check
└   time() - start_time = 1175.4739999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1116
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285173
┌ Info: Price and cut time (b-and-b)
└   t = 0.4133313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1116
│   lb = 2.6760453848928596
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 559
└   length(nodes) = 1119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121784
└   sum(fire_plans.plans_per_fire) = 46039
┌ Info: Time check
└   time() - start_time = 1175.9349999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1117
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303261
┌ Info: Price and cut time (b-and-b)
└   t = 0.8048797
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1117
│   lb = 2.6760453848928596
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 560
└   length(nodes) = 1121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121924
└   sum(fire_plans.plans_per_fire) = 46074
┌ Info: Time check
└   time() - start_time = 1176.787999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 333
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256041
┌ Info: Price and cut time (b-and-b)
└   t = 0.8917215
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 333
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0   0  17  3  0  0
│     0   0   0   0  6  6  6  6  7   1   0  0  0  0
│     9   2   0   0  0  0  0  0  0   0   0  0  0  0
│     6  19  20   5  0  0  0  1  0   0   0  1  0  0
│     0   0   0  11  6  6  9  9  8  12   1  0  0  0
└     6   0   1   0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3885052
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1309155
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1  1   1  18  4  1  1
│      1   1   1   1  7  7   7   7  8   2   1  1  1  1
│     10   3   1   1  1  1   1   1  1   1   1  1  1  1
│      7  20  21   6  1  1   1   2  1   1   1  2  1  1
│      1   1   1  12  7  7  10  10  9  13   2  1  1  1
└      7   1   2   1  2  1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0539783
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3715253
│   obj = 2.7325163443296705
└   obj_bound = 2.732326767514069
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  19  5  2  2
│      2   2   2   2  8  8   8   8   9   3   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      8  21  22   7  2  2   2   3   2   2   2  3  2  2
│      2   2   2  13  8  8  11  11  10  14   3  2  2  2
└      8   2   3   2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8711652
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3897032
│   obj = 2.732516344329671
└   obj_bound = 2.7322559561051074
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 333
│   lb = 2.676045770864085
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 561
└   length(nodes) = 1123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122422
└   sum(fire_plans.plans_per_fire) = 46300
┌ Info: Time check
└   time() - start_time = 1181.4969999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 562
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250984
┌ Info: Price and cut time (b-and-b)
└   t = 0.4284704
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 562
│   lb = 2.676045770864085
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 562
└   length(nodes) = 1125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122442
└   sum(fire_plans.plans_per_fire) = 46314
┌ Info: Time check
└   time() - start_time = 1181.96599984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 563
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263043
┌ Info: Price and cut time (b-and-b)
└   t = 1.1989081
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 563
│   lb = 2.676055850834598
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 563
└   length(nodes) = 1127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122488
└   sum(fire_plans.plans_per_fire) = 46351
┌ Info: Time check
└   time() - start_time = 1183.204999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1020
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0974669
┌ Info: Price and cut time (b-and-b)
└   t = 0.8688026
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1020
│   lb = 2.676055850834598
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 564
└   length(nodes) = 1129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122582
└   sum(fire_plans.plans_per_fire) = 46403
┌ Info: Time check
└   time() - start_time = 1184.186999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1021
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234312
┌ Info: Price and cut time (b-and-b)
└   t = 0.4273267
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1021
│   lb = 2.6760565553130773
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 565
└   length(nodes) = 1131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122621
└   sum(fire_plans.plans_per_fire) = 46423
┌ Info: Time check
└   time() - start_time = 1184.71599984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 932
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028663
┌ Info: Price and cut time (b-and-b)
└   t = 0.5607083
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 932
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  4  3  2  7  7  10   2   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  8  9  9  9  9   6  12   0  0  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5062504
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1254843
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  5   4   3   8   8  11   3   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  9  10  10  10  10   7  13   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8964762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3042273
│   obj = 2.7325163443296705
└   obj_bound = 2.7322635474609798
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   6   5   4   9   9  12   4   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  10  11  11  11  11   8  14   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6407729
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3716515
│   obj = 2.7325163443296705
└   obj_bound = 2.732318804428758
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 932
│   lb = 2.6760565553130773
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 566
└   length(nodes) = 1133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123049
└   sum(fire_plans.plans_per_fire) = 46624
┌ Info: Time check
└   time() - start_time = 1188.6779999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 933
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266678
┌ Info: Price and cut time (b-and-b)
└   t = 1.4065393
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 933
│   lb = 2.6760572920104853
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 567
└   length(nodes) = 1135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123190
└   sum(fire_plans.plans_per_fire) = 46684
┌ Info: Time check
└   time() - start_time = 1190.1879999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 348
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276015
┌ Info: Price and cut time (b-and-b)
└   t = 0.5737121
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 348
│   lb = 2.6760572920104853
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 568
└   length(nodes) = 1137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123258
└   sum(fire_plans.plans_per_fire) = 46711
┌ Info: Time check
└   time() - start_time = 1190.8049998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 349
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241778
┌ Info: Price and cut time (b-and-b)
└   t = 1.4625147
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 10, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 10, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 349
│   lb = 2.676062925084477
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 569
└   length(nodes) = 1139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123315
└   sum(fire_plans.plans_per_fire) = 46746
┌ Info: Time check
└   time() - start_time = 1192.3069999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 736
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242269
┌ Info: Price and cut time (b-and-b)
└   t = 0.8222484
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 736
│   lb = 2.676062925084477
└   ub = 2.7325163443296705
┌ Info: number of nodes
│   node_explored_count = 570
└   length(nodes) = 1141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123453
└   sum(fire_plans.plans_per_fire) = 46776
┌ Info: Time check
└   time() - start_time = 1193.1659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 737
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246651
┌ Info: Price and cut time (b-and-b)
└   t = 0.454613
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 737
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0   1  17  2  0  0
│     0   0   0  10  3  7  10   2   1   0   0  0  0  0
│     9   2   0   0  0  0   0   0   0   0   0  0  0  0
│     6  18  20   5  0  0   0   0   0   0   0  1  0  0
│     0   0   0   2  9  5   6  14  15  12   0  1  0  0
└     6   0   1   0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6046661
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0949968
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  3  1  1
│      1   1   1  11   4  8  11   3   2   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   3  10  6   7  15  16  13   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3810892
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3359653
│   obj = 2.7325163443296705
└   obj_bound = 2.732289830989875
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  4  2  2
│      2   2   2  12   5  9  12   4   3   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   4  11  7   8  16  17  14   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1675025
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3041342
│   obj = 2.73251634432967
└   obj_bound = 2.7322521697777993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 737
│   lb = 2.6760796102472706
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 571
└   length(nodes) = 1143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124022
└   sum(fire_plans.plans_per_fire) = 47028
┌ Info: Time check
└   time() - start_time = 1198.1369998455048
┌ Info: Exploring node
└   branch_and_bound_node.ix = 608
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229927
┌ Info: Price and cut time (b-and-b)
└   t = 1.156434
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 608
│   lb = 2.6760796102472706
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 572
└   length(nodes) = 1145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124217
└   sum(fire_plans.plans_per_fire) = 47073
┌ Info: Time check
└   time() - start_time = 1199.3309998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 609
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.149702
┌ Info: Price and cut time (b-and-b)
└   t = 1.2355451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 609
│   lb = 2.6760803210600694
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 573
└   length(nodes) = 1147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124310
└   sum(fire_plans.plans_per_fire) = 47113
┌ Info: Time check
└   time() - start_time = 1200.7300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1136
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292743
┌ Info: Price and cut time (b-and-b)
└   t = 0.9331745
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1136
│   lb = 2.6760803210600694
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 574
└   length(nodes) = 1149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124447
└   sum(fire_plans.plans_per_fire) = 47160
┌ Info: Time check
└   time() - start_time = 1201.7089998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1137
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285411
┌ Info: Price and cut time (b-and-b)
└   t = 1.0122356
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1137
│   lb = 2.676084324506849
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 575
└   length(nodes) = 1151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124475
└   sum(fire_plans.plans_per_fire) = 47194
┌ Info: Time check
└   time() - start_time = 1202.766000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 690
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250167
┌ Info: Price and cut time (b-and-b)
└   t = 1.6997902
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 690
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0  0   0  16  4  0  0
│     0   0   0  5  4  7  7   5  7   0   0  0  0  0
│     9   2   0  0  0  0  0   0  0   0   0  0  0  0
│     6  18  20  7  0  0  0   0  0   0   0  1  0  0
│     0   0   0  5  9  5  9  10  9  14   1  1  0  0
└     6   1   1  0  1  1  0   0  0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5076064
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1354511
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   1  17  5  1  1
│      1   1   1  6   5  8   8   6   8   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  8   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  6  10  11  10  15   2  2  1  1
└      7   2   2  1   2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1379173
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8717397
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   2  18  6  2  2
│      2   2   2  7   6  9   9   7   9   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  9   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  7  11  12  11  16   3  3  2  2
└      8   3   3  2   3  3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6726078
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0955493
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 690
│   lb = 2.676084324506849
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 576
└   length(nodes) = 1153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124957
└   sum(fire_plans.plans_per_fire) = 47453
┌ Info: Time check
└   time() - start_time = 1209.4639999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 691
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0351606
┌ Info: Price and cut time (b-and-b)
└   t = 0.3880829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 691
│   lb = 2.676084373402199
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 577
└   length(nodes) = 1155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124977
└   sum(fire_plans.plans_per_fire) = 47470
┌ Info: Time check
└   time() - start_time = 1209.9029998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 584
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273318
┌ Info: Price and cut time (b-and-b)
└   t = 1.2099307
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 584
│   lb = 2.676084373402199
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 578
└   length(nodes) = 1157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125139
└   sum(fire_plans.plans_per_fire) = 47521
┌ Info: Time check
└   time() - start_time = 1211.2170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 585
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0336545
┌ Info: Price and cut time (b-and-b)
└   t = 0.2873864
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 585
│   lb = 2.6760862600167563
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 579
└   length(nodes) = 1159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125162
└   sum(fire_plans.plans_per_fire) = 47531
┌ Info: Time check
└   time() - start_time = 1211.5549998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 798
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294285
┌ Info: Price and cut time (b-and-b)
└   t = 0.9043993
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 798
│   lb = 2.6760862600167563
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 580
└   length(nodes) = 1161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125276
└   sum(fire_plans.plans_per_fire) = 47582
┌ Info: Time check
└   time() - start_time = 1212.5039999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 799
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028486
┌ Info: Price and cut time (b-and-b)
└   t = 0.9404708
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 799
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  9  3  6  6  6   1   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  2  9  6  9  9  15  13   0  0  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5124966
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1060002
│   obj = 2.732516344329671
└   obj_bound = 2.7323412848965045
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  10   4  7   7   7   2   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   3  10  7  10  10  16  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1609583
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2843616
│   obj = 2.732516344329671
└   obj_bound = 2.7322464794199437
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  11   5  8   8   8   3   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   4  11  8  11  11  17  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9940003
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2837973
│   obj = 2.7325163443296705
└   obj_bound = 2.7324522594931064
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 799
│   lb = 2.6760946743188208
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 581
└   length(nodes) = 1163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125626
└   sum(fire_plans.plans_per_fire) = 47809
┌ Info: Time check
└   time() - start_time = 1217.3680000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 602
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0386765
┌ Info: Price and cut time (b-and-b)
└   t = 0.8256981
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 602
│   lb = 2.6760946743188208
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 582
└   length(nodes) = 1165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125763
└   sum(fire_plans.plans_per_fire) = 47843
┌ Info: Time check
└   time() - start_time = 1218.2469999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 603
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307901
┌ Info: Price and cut time (b-and-b)
└   t = 0.723513
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 603
│   lb = 2.6760946743188208
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 583
└   length(nodes) = 1167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125960
└   sum(fire_plans.plans_per_fire) = 47876
┌ Info: Time check
└   time() - start_time = 1219.0179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1164
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252923
┌ Info: Price and cut time (b-and-b)
└   t = 0.9005542
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1164
│   lb = 2.6760946743188208
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 584
└   length(nodes) = 1169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126044
└   sum(fire_plans.plans_per_fire) = 47902
┌ Info: Time check
└   time() - start_time = 1219.957999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1165
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253445
┌ Info: Price and cut time (b-and-b)
└   t = 1.3683191
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1165
│   lb = 2.676110048869083
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 585
└   length(nodes) = 1171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126222
└   sum(fire_plans.plans_per_fire) = 47939
┌ Info: Time check
└   time() - start_time = 1221.3669998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 930
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267211
┌ Info: Price and cut time (b-and-b)
└   t = 0.5529782
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 930
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0   0   0   2  17  3  0  0
│     0   0   0   1   3  9  9   6   3   0   0  0  0  0
│     9   2   0   0   0  0  0   0   0   0   0  0  0  0
│     6  18  20   5   0  0  0   0   0   0   0  1  0  0
│     0   0   0  10  10  2  7  10  13  12   1  0  0  0
└     6   0   1   0   1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.510873
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0673842
│   obj = 2.732516344329671
└   obj_bound = 2.7322814461279807
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1   2   4  10  10   7   4   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  11   3   8  11  14  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.346952
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3506709
│   obj = 2.73251634432967
└   obj_bound = 2.7323383978401985
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2   3   5  11  11   8   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  12   4   9  12  15  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2651498
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3759236
│   obj = 2.73251634432967
└   obj_bound = 2.7323726946912386
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 930
│   lb = 2.676110048869083
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 586
└   length(nodes) = 1173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126763
└   sum(fire_plans.plans_per_fire) = 48194
┌ Info: Time check
└   time() - start_time = 1226.401999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 931
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254108
┌ Info: Price and cut time (b-and-b)
└   t = 1.0717585
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 931
│   lb = 2.676110592627602
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 587
└   length(nodes) = 1175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126922
└   sum(fire_plans.plans_per_fire) = 48246
┌ Info: Time check
└   time() - start_time = 1227.5149998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 438
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273444
┌ Info: Price and cut time (b-and-b)
└   t = 1.5750539
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 438
│   lb = 2.676110592627602
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 588
└   length(nodes) = 1177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127083
└   sum(fire_plans.plans_per_fire) = 48294
┌ Info: Time check
└   time() - start_time = 1229.1329998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 439
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269646
┌ Info: Price and cut time (b-and-b)
└   t = 0.9860676
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 439
│   lb = 2.6761199545665613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 589
└   length(nodes) = 1179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127215
└   sum(fire_plans.plans_per_fire) = 48323
┌ Info: Time check
└   time() - start_time = 1230.159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 402
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028085
┌ Info: Price and cut time (b-and-b)
└   t = 1.1959238
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 402
│   lb = 2.6761199545665613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 590
└   length(nodes) = 1181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127332
└   sum(fire_plans.plans_per_fire) = 48364
┌ Info: Time check
└   time() - start_time = 1231.3999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 403
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027491
┌ Info: Price and cut time (b-and-b)
└   t = 1.0979662
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 403
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0   1  17  3  0  0
│     0   0   0   2  6  2  6  9  6   0   0  0  0  0
│     9   2   0   0  0  0  0  0  0   0   0  0  0  0
│     6  18  20   5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  10  6  9  9  6  9  13   0  1  0  0
└     6   0   1   0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5962502
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1034023
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  4  1  1
│      1   1   1   3  7   3   7  10   7   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  7  10  10   7  10  14   1  2  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0678855
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2795902
│   obj = 2.732516344329671
└   obj_bound = 2.7322524717514254
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   4  8   4   8  11   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  8  11  11   8  11  15   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8015495
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5814573
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 403
│   lb = 2.676122797136384
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 591
└   length(nodes) = 1183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127813
└   sum(fire_plans.plans_per_fire) = 48595
┌ Info: Time check
└   time() - start_time = 1236.4509999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 444
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249711
┌ Info: Price and cut time (b-and-b)
└   t = 0.9642875
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 444
│   lb = 2.676122797136384
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 592
└   length(nodes) = 1185
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127977
└   sum(fire_plans.plans_per_fire) = 48639
┌ Info: Time check
└   time() - start_time = 1237.4559998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 445
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268513
┌ Info: Price and cut time (b-and-b)
└   t = 1.4721497
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 445
│   lb = 2.676122797136384
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 593
└   length(nodes) = 1187
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128205
└   sum(fire_plans.plans_per_fire) = 48716
┌ Info: Time check
└   time() - start_time = 1238.970999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1186
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348002
┌ Info: Price and cut time (b-and-b)
└   t = 1.3914446
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1186
│   lb = 2.676122797136384
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 594
└   length(nodes) = 1189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128375
└   sum(fire_plans.plans_per_fire) = 48778
┌ Info: Time check
└   time() - start_time = 1240.4759998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1187
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326092
┌ Info: Price and cut time (b-and-b)
└   t = 0.2133586
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1187
│   lb = 2.67612753445059
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 595
└   length(nodes) = 1191
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128396
└   sum(fire_plans.plans_per_fire) = 48785
┌ Info: Time check
└   time() - start_time = 1240.736999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 726
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252588
┌ Info: Price and cut time (b-and-b)
└   t = 1.4592699
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 726
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  10  6  9  6   0   0   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   6  0  0  0   0   0   0   0  0  0  0
│     0   0   0   0  6  2  9  15  15  14   0  1  0  0
└     6   1   1   0  1  1  0   0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5174357
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1152213
│   obj = 2.7325163443296705
└   obj_bound = 2.7324680431441615
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  11  7  10   7   1   1   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   7  1   1   1   1   1   1   1  1  1  1
│      1   1   1   1  7   3  10  16  16  15   1  2  1  1
└      7   2   2   1  2   2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4665712
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3024562
│   obj = 2.732516344329671
└   obj_bound = 2.732257438685272
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  8  11   8   2   2   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   8  2   2   2   2   2   2   2  2  2  2
│      2   2   2   2  8   4  11  17  17  16   2  3  2  2
└      8   3   3   2  3   3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9809783
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3587999
│   obj = 2.73251634432967
└   obj_bound = 2.7325103443296705
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 726
│   lb = 2.67612753445059
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 596
└   length(nodes) = 1193
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129055
└   sum(fire_plans.plans_per_fire) = 49059
┌ Info: Time check
└   time() - start_time = 1246.4789998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 727
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253458
┌ Info: Price and cut time (b-and-b)
└   t = 0.4214556
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 727
│   lb = 2.6761313053463147
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 597
└   length(nodes) = 1195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129096
└   sum(fire_plans.plans_per_fire) = 49072
┌ Info: Time check
└   time() - start_time = 1246.9409999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 230
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288246
┌ Info: Price and cut time (b-and-b)
└   t = 0.7923019
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 230
│   lb = 2.6761313053463147
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 598
└   length(nodes) = 1197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129180
└   sum(fire_plans.plans_per_fire) = 49094
┌ Info: Time check
└   time() - start_time = 1247.7749998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 231
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0222636
┌ Info: Price and cut time (b-and-b)
└   t = 0.656094
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 231
│   lb = 2.6761432678142025
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 599
└   length(nodes) = 1199
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129285
└   sum(fire_plans.plans_per_fire) = 49117
┌ Info: Time check
└   time() - start_time = 1248.4700000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 946
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285869
┌ Info: Price and cut time (b-and-b)
└   t = 0.8121087
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 946
│   lb = 2.6761432678142025
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 600
└   length(nodes) = 1201
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129368
└   sum(fire_plans.plans_per_fire) = 49144
┌ Info: Time check
└   time() - start_time = 1249.3259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 947
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271121
┌ Info: Price and cut time (b-and-b)
└   t = 0.6487303
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 947
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  2  0  0
│     0   0   0  9  7  2  9   2   2   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  2  6  9  6  14  14  13   0  1  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3925592
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0691647
│   obj = 2.7325163443296705
└   obj_bound = 2.7324663120789494
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  10  8   3  10   3   3   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1   3  7  10   7  15  15  14   1  2  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2911341
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3095301
│   obj = 2.7325163443296705
└   obj_bound = 2.7322973642971884
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  11  9   4  11   4   4   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   4  8  11   8  16  16  15   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0495085
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4416293
│   obj = 2.73251634432967
└   obj_bound = 2.732264085905493
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 947
│   lb = 2.6761519827009352
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 601
└   length(nodes) = 1203
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129828
└   sum(fire_plans.plans_per_fire) = 49371
┌ Info: Time check
└   time() - start_time = 1254.066999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 142
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0205286
┌ Info: Price and cut time (b-and-b)
└   t = 0.5075795
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 142
│   lb = 2.6761519827009352
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 602
└   length(nodes) = 1205
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129906
└   sum(fire_plans.plans_per_fire) = 49390
┌ Info: Time check
└   time() - start_time = 1254.608999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 143
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257343
┌ Info: Price and cut time (b-and-b)
└   t = 1.4832511
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 143
│   lb = 2.676153959045936
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 603
└   length(nodes) = 1207
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130142
└   sum(fire_plans.plans_per_fire) = 49448
┌ Info: Time check
└   time() - start_time = 1256.1329998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 962
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285176
┌ Info: Price and cut time (b-and-b)
└   t = 0.7772376
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 962
│   lb = 2.676153959045936
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 604
└   length(nodes) = 1209
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130186
└   sum(fire_plans.plans_per_fire) = 49469
┌ Info: Time check
└   time() - start_time = 1256.9519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 963
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282004
┌ Info: Price and cut time (b-and-b)
└   t = 1.2736278
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 963
│   lb = 2.676156996913715
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 605
└   length(nodes) = 1211
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130406
└   sum(fire_plans.plans_per_fire) = 49512
┌ Info: Time check
└   time() - start_time = 1258.2699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1070
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280638
┌ Info: Price and cut time (b-and-b)
└   t = 1.3808323
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1070
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   0  17  3  0  0
│     0   0   0  6  6  6  9   3   0   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  7  0  0  0   0   0   0   0  0  0  0
│     0   0   0  3  6  6  6  12  15  14   1  0  0  0
└     6   1   1  0  1  0  0   0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8352507
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1931662
│   obj = 2.732516344329671
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  7  7  10   4   1   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  8  1  1   1   1   1   1   1  1  1  1
│      1   1   1  4  7  7   7  13  16  15   2  1  1  1
└      7   2   2  1  2  1   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4196179
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2746825
│   obj = 2.7325163443296705
└   obj_bound = 2.7322603046389085
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   2  19  5  2  2
│      2   2   2  8  8  8  11   5   2   2   2  2  2  2
│     11   4   2  2  2  2   2   2   2   2   2  2  2  2
│      8  20  22  9  2  2   2   2   2   2   2  2  2  2
│      2   2   2  5  8  8   8  14  17  16   3  2  2  2
└      8   3   3  2  3  2   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9153201
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3519626
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1070
│   lb = 2.676156996913715
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 606
└   length(nodes) = 1213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130914
└   sum(fire_plans.plans_per_fire) = 49787
┌ Info: Time check
└   time() - start_time = 1264.175999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1071
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251243
┌ Info: Price and cut time (b-and-b)
└   t = 0.4936943
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1071
│   lb = 2.6761579780876747
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 607
└   length(nodes) = 1215
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130946
└   sum(fire_plans.plans_per_fire) = 49803
┌ Info: Time check
└   time() - start_time = 1264.7099997997284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1032
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288683
┌ Info: Price and cut time (b-and-b)
└   t = 0.5285903
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1032
│   lb = 2.6761579780876747
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 608
└   length(nodes) = 1217
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131011
└   sum(fire_plans.plans_per_fire) = 49824
┌ Info: Time check
└   time() - start_time = 1265.2829999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1033
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263895
┌ Info: Price and cut time (b-and-b)
└   t = 1.0674277
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1033
│   lb = 2.676159218118598
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 609
└   length(nodes) = 1219
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131124
└   sum(fire_plans.plans_per_fire) = 49862
┌ Info: Time check
└   time() - start_time = 1266.3919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 986
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240988
┌ Info: Price and cut time (b-and-b)
└   t = 0.939461
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 986
│   lb = 2.676159218118598
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 610
└   length(nodes) = 1221
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131228
└   sum(fire_plans.plans_per_fire) = 49905
┌ Info: Time check
└   time() - start_time = 1267.3719999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 987
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288339
┌ Info: Price and cut time (b-and-b)
└   t = 1.2250571
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 987
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  2  0  0
│     0   0   0  6  3  6  6  9   1   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  5  9  5  9  6  15  13   0  1  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6000769
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.096215
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  3  1  1
│      1   1   1  7   4  7   7  10   2   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  6  10   7  16  14   1  2  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3338111
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3257797
│   obj = 2.7325163443296705
└   obj_bound = 2.7325086726261323
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  4  2  2
│      2   2   2  8   5  8   8  11   3   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  7  11   8  17  15   2  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9853038
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3816305
│   obj = 2.73251634432967
└   obj_bound = 2.7322485200406845
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 987
│   lb = 2.6761617974369876
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 611
└   length(nodes) = 1223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131906
└   sum(fire_plans.plans_per_fire) = 50155
┌ Info: Time check
└   time() - start_time = 1272.8769998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 624
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0475611
┌ Info: Price and cut time (b-and-b)
└   t = 0.7522036
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 624
│   lb = 2.6761617974369876
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 612
└   length(nodes) = 1225
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131990
└   sum(fire_plans.plans_per_fire) = 50199
┌ Info: Time check
└   time() - start_time = 1273.6970000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 625
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271823
┌ Info: Price and cut time (b-and-b)
└   t = 0.903208
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 625
│   lb = 2.676161972311499
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 613
└   length(nodes) = 1227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132038
└   sum(fire_plans.plans_per_fire) = 50233
┌ Info: Time check
└   time() - start_time = 1274.6419999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 568
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252519
┌ Info: Price and cut time (b-and-b)
└   t = 0.7956663
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 568
│   lb = 2.676161972311499
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 614
└   length(nodes) = 1229
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132099
└   sum(fire_plans.plans_per_fire) = 50259
┌ Info: Time check
└   time() - start_time = 1275.4769999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 569
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259188
┌ Info: Price and cut time (b-and-b)
└   t = 0.8823971
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 569
│   lb = 2.676186107550991
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 615
└   length(nodes) = 1231
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132224
└   sum(fire_plans.plans_per_fire) = 50301
┌ Info: Time check
└   time() - start_time = 1276.4010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 908
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251606
┌ Info: Price and cut time (b-and-b)
└   t = 0.5216518
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 908
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  17  3  0  0
│     0   0   0  6  3  2  11  6   4   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  5  9  9   5  9  12  13   0  0  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4984607
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.107381
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   4   3  12   7   5   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  10   6  10  13  14   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1738675
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3411884
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   5   4  13   8   6   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  11   7  11  14  15   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5847638
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7216932
│   obj = 2.73251634432967
└   obj_bound = 2.7322913880637865
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 908
│   lb = 2.676186107550991
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 616
└   length(nodes) = 1233
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132813
└   sum(fire_plans.plans_per_fire) = 50484
┌ Info: Time check
└   time() - start_time = 1280.9210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 909
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0342755
┌ Info: Price and cut time (b-and-b)
└   t = 1.3237601
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 909
│   lb = 2.676189772338663
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 617
└   length(nodes) = 1235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132882
└   sum(fire_plans.plans_per_fire) = 50533
┌ Info: Time check
└   time() - start_time = 1282.2949998378754
┌ Info: Exploring node
└   branch_and_bound_node.ix = 834
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282083
┌ Info: Price and cut time (b-and-b)
└   t = 0.588927
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 834
│   lb = 2.676189772338663
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 618
└   length(nodes) = 1237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132902
└   sum(fire_plans.plans_per_fire) = 50550
┌ Info: Time check
└   time() - start_time = 1282.9289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 835
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262361
┌ Info: Price and cut time (b-and-b)
└   t = 1.3655028
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 835
│   lb = 2.676196142735887
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 619
└   length(nodes) = 1239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133121
└   sum(fire_plans.plans_per_fire) = 50597
┌ Info: Time check
└   time() - start_time = 1284.3359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1230
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260176
┌ Info: Price and cut time (b-and-b)
└   t = 1.1060094
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1230
│   lb = 2.676196142735887
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 620
└   length(nodes) = 1241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133269
└   sum(fire_plans.plans_per_fire) = 50640
┌ Info: Time check
└   time() - start_time = 1285.481999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1231
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.022451
┌ Info: Price and cut time (b-and-b)
└   t = 0.5699549
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1231
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0  0  0   1  17  2  0  0
│     0   0   0  7  6   2   2  6  9   0   0  0  0  0
│     9   2   0  0  0   0   0  0  0   0   0  0  0  0
│     6  18  20  5  0   0   0  0  0   0   0  1  0  0
│     0   0   0  4  6  10  14  9  6  12   0  1  0  0
└     6   0   1  0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5392826
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0779966
│   obj = 2.7325163443296705
└   obj_bound = 2.732305792150953
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  8  7   3   3   7  10   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  5  7  11  15  10   7  13   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8585403
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2521614
│   obj = 2.7325163443296705
└   obj_bound = 2.7322836112643967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  9  8   4   4   8  11   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  6  8  12  16  11   8  14   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.183435
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3761951
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1231
│   lb = 2.676197534095374
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 621
└   length(nodes) = 1243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133765
└   sum(fire_plans.plans_per_fire) = 50913
┌ Info: Time check
└   time() - start_time = 1290.8939998149872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 198
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220774
┌ Info: Price and cut time (b-and-b)
└   t = 1.0814047
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 198
│   lb = 2.676197534095374
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 622
└   length(nodes) = 1245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133970
└   sum(fire_plans.plans_per_fire) = 50961
┌ Info: Time check
└   time() - start_time = 1292.013000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 199
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246742
┌ Info: Price and cut time (b-and-b)
└   t = 1.1956888
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 199
│   lb = 2.676198438150301
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 623
└   length(nodes) = 1247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134186
└   sum(fire_plans.plans_per_fire) = 51022
┌ Info: Time check
└   time() - start_time = 1293.24799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 682
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027156
┌ Info: Price and cut time (b-and-b)
└   t = 1.1711187
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 682
│   lb = 2.676198438150301
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 624
└   length(nodes) = 1249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134304
└   sum(fire_plans.plans_per_fire) = 51068
┌ Info: Time check
└   time() - start_time = 1294.4619998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 683
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251982
┌ Info: Price and cut time (b-and-b)
└   t = 0.3003988
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 683
│   lb = 2.6761990670612037
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 625
└   length(nodes) = 1251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134327
└   sum(fire_plans.plans_per_fire) = 51077
┌ Info: Time check
└   time() - start_time = 1294.8029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 966
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242434
┌ Info: Price and cut time (b-and-b)
└   t = 1.2923723
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 966
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0   0   0   0  17  3  0  0
│     0   0   0  1  10  8  7   4   5   0   0  0  0  0
│     9   2   0  0   0  0  0   0   0   0   0  0  0  0
│     6  18  20  6   0  0  0   0   0   0   0  0  0  0
│     0   0   0  9   3  3  9  12  11  14   0  0  0  0
└     6   1   1  0   1  1  0   0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6174519
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1460059
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  18  4  1  1
│      1   1   1   2  11  9   8   5   6   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   7   1  1   1   1   1   1   1  1  1  1
│      1   1   1  10   4  4  10  13  12  15   1  1  1  1
└      7   2   2   1   2  2   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2587748
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3207951
│   obj = 2.732516344329671
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  19  5  2  2
│      2   2   2   3  12  10   9   6   7   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   8   2   2   2   2   2   2   2  2  2  2
│      2   2   2  11   5   5  11  14  13  16   2  2  2  2
└      8   3   3   2   3   3   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.991638
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3328068
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 966
│   lb = 2.6761990670612037
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 626
└   length(nodes) = 1253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134811
└   sum(fire_plans.plans_per_fire) = 51329
┌ Info: Time check
└   time() - start_time = 1300.3780000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 967
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025159
┌ Info: Price and cut time (b-and-b)
└   t = 0.5584541
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 967
│   lb = 2.676200421039012
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 627
└   length(nodes) = 1255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134836
└   sum(fire_plans.plans_per_fire) = 51343
┌ Info: Time check
└   time() - start_time = 1300.9779999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1218
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284065
┌ Info: Price and cut time (b-and-b)
└   t = 1.3894565
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1218
│   lb = 2.676200421039012
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 628
└   length(nodes) = 1257
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134928
└   sum(fire_plans.plans_per_fire) = 51396
┌ Info: Time check
└   time() - start_time = 1302.4119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1219
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0337486
┌ Info: Price and cut time (b-and-b)
└   t = 0.1480412
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1219
│   lb = 2.6762020738450762
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 629
└   length(nodes) = 1259
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134948
└   sum(fire_plans.plans_per_fire) = 51402
┌ Info: Time check
└   time() - start_time = 1302.6079998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 756
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264778
┌ Info: Price and cut time (b-and-b)
└   t = 0.6644752
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 756
│   lb = 2.6762020738450762
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 630
└   length(nodes) = 1261
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135085
└   sum(fire_plans.plans_per_fire) = 51430
┌ Info: Time check
└   time() - start_time = 1303.3159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 757
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262414
┌ Info: Price and cut time (b-and-b)
└   t = 0.853458
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 757
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   3  16  3  0  0
│     0   0   0  7  3  9  12   2   0   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  5  0  0   0   0   0   0   0  1  0  0
│     0   0   0  5  9  3   4  14  15  11   2  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.582205
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1053854
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   4  17  4  1  1
│      1   1   1  8   4  10  13   3   1   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  10   4   5  15  16  12   3  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3821725
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2555467
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   5  18  5  2  2
│      2   2   2  9   5  11  14   4   2   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11   5   6  16  17  13   4  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5788629
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3840775
│   obj = 2.73251634432967
└   obj_bound = 2.732246045509342
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 757
│   lb = 2.6762022423880714
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 631
└   length(nodes) = 1263
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135650
└   sum(fire_plans.plans_per_fire) = 51634
┌ Info: Time check
└   time() - start_time = 1307.99799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 778
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300722
┌ Info: Price and cut time (b-and-b)
└   t = 0.4315769
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 778
│   lb = 2.6762022423880714
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 632
└   length(nodes) = 1265
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135718
└   sum(fire_plans.plans_per_fire) = 51653
┌ Info: Time check
└   time() - start_time = 1308.4759998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1264
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283661
┌ Info: Price and cut time (b-and-b)
└   t = 1.4189145
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1264
│   lb = 2.6762022423880714
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 633
└   length(nodes) = 1267
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135839
└   sum(fire_plans.plans_per_fire) = 51710
┌ Info: Time check
└   time() - start_time = 1309.936999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1265
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251471
┌ Info: Price and cut time (b-and-b)
└   t = 0.2261007
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1265
│   lb = 2.6762022423880714
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 634
└   length(nodes) = 1269
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135862
└   sum(fire_plans.plans_per_fire) = 51718
┌ Info: Time check
└   time() - start_time = 1310.204999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 779
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263036
┌ Info: Price and cut time (b-and-b)
└   t = 1.4105568
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 779
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 635
└   length(nodes) = 1271
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136039
└   sum(fire_plans.plans_per_fire) = 51787
┌ Info: Time check
└   time() - start_time = 1311.6559998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 820
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272276
┌ Info: Price and cut time (b-and-b)
└   t = 0.7492146
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 820
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0   0   1  17  3  0  0
│     0   0   0  10  8  2   4  7   3   0   0  0  0  0
│     9   2   0   0  0  0   0  0   0   0   0  0  0  0
│     6  18  20   5  0  0   0  0   0   0   0  1  0  0
│     0   0   0   2  5  9  12  9  12  13   0  0  0  0
└     6   0   1   0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5360365
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0977412
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  11  9   3   5   8   4   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1   3  6  10  13  10  13  14   1  1  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9138136
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2722671
│   obj = 2.732516344329671
└   obj_bound = 2.732470514739237
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  10   4   6   9   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   4   7  11  14  11  14  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9592928
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8228899
│   obj = 2.7325163443296705
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 820
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 636
└   length(nodes) = 1273
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136511
└   sum(fire_plans.plans_per_fire) = 52013
┌ Info: Time check
└   time() - start_time = 1316.5279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 821
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260621
┌ Info: Price and cut time (b-and-b)
└   t = 1.3659914
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 821
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 637
└   length(nodes) = 1275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136680
└   sum(fire_plans.plans_per_fire) = 52083
┌ Info: Time check
└   time() - start_time = 1317.9359998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1272
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025846
┌ Info: Price and cut time (b-and-b)
└   t = 0.3686584
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1272
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 638
└   length(nodes) = 1277
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136734
└   sum(fire_plans.plans_per_fire) = 52102
┌ Info: Time check
└   time() - start_time = 1318.345999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1273
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262173
┌ Info: Price and cut time (b-and-b)
└   t = 0.7790547
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1273
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 639
└   length(nodes) = 1279
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136818
└   sum(fire_plans.plans_per_fire) = 52138
┌ Info: Time check
└   time() - start_time = 1319.1659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1278
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0358635
┌ Info: Price and cut time (b-and-b)
└   t = 1.43903
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1278
│   lb = 2.676204618425848
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 640
└   length(nodes) = 1281
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136987
└   sum(fire_plans.plans_per_fire) = 52193
┌ Info: Time check
└   time() - start_time = 1320.6549999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1279
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278534
┌ Info: Price and cut time (b-and-b)
└   t = 0.1736876
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 1, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1279
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0  0   0   1  18  3  0  0
│      0   0   0  9  8  2   3  6   3   0   0  0  0  0
│     10   1   0  0  0  0   0  0   0   0   0  0  0  0
│      5  19  20  6  0  0   0  0   0   0   0  1  0  0
│      0   0   0  1  5  9  13  9  13  13   0  0  0  0
└      6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8889089
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1258773
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  19  4  1  1
│      1   1   1  10  9   3   4   7   4   1   1  1  1  1
│     11   2   1   1  1   1   1   1   1   1   1  1  1  1
│      6  20  21   7  1   1   1   1   1   1   1  2  1  1
│      1   1   1   2  6  10  14  10  14  14   1  1  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.519464
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3576534
│   obj = 2.732516344329671
└   obj_bound = 2.7324504700727235
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  20  5  2  2
│      2   2   2  11  10   4   5   8   5   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2   3   7  11  15  11  15  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7442753
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2601581
│   obj = 2.73251634432967
└   obj_bound = 2.7323030119884026
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1279
│   lb = 2.6762068553146063
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 641
└   length(nodes) = 1283
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137449
└   sum(fire_plans.plans_per_fire) = 52416
┌ Info: Time check
└   time() - start_time = 1325.2960000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 560
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257417
┌ Info: Price and cut time (b-and-b)
└   t = 0.8303387
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 560
│   lb = 2.6762068553146063
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 642
└   length(nodes) = 1285
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137564
└   sum(fire_plans.plans_per_fire) = 52449
┌ Info: Time check
└   time() - start_time = 1326.1679999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 561
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244196
┌ Info: Price and cut time (b-and-b)
└   t = 1.3467405
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 561
│   lb = 2.6762068553146063
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 643
└   length(nodes) = 1287
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137713
└   sum(fire_plans.plans_per_fire) = 52506
┌ Info: Time check
└   time() - start_time = 1327.5549998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1286
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248968
┌ Info: Price and cut time (b-and-b)
└   t = 0.8873603
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 12, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 12, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1286
│   lb = 2.6762068553146063
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 644
└   length(nodes) = 1289
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137734
└   sum(fire_plans.plans_per_fire) = 52530
┌ Info: Time check
└   time() - start_time = 1328.4859998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1287
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285273
┌ Info: Price and cut time (b-and-b)
└   t = 0.7953679
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1287
│   lb = 2.6762167869733555
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 645
└   length(nodes) = 1291
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137765
└   sum(fire_plans.plans_per_fire) = 52550
┌ Info: Time check
└   time() - start_time = 1329.3249998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 670
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303273
┌ Info: Price and cut time (b-and-b)
└   t = 0.4363028
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 670
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  6  3  2  6  10   4   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  5  9  9  9   6  12  13   0  0  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4540981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0944974
│   obj = 2.732516344329671
└   obj_bound = 2.732511932265874
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  7   4   3   7  11   5   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  10  10  10   7  13  14   1  1  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2250916
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2728121
│   obj = 2.7325163443296705
└   obj_bound = 2.732451785521721
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  8   5   4   8  12   6   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  11  11   8  14  15   2  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1259298
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.293967
│   obj = 2.73251634432967
└   obj_bound = 2.732249452268873
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 670
│   lb = 2.6762167869733555
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 646
└   length(nodes) = 1293
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138271
└   sum(fire_plans.plans_per_fire) = 52777
┌ Info: Time check
└   time() - start_time = 1333.7699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 671
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026872
┌ Info: Price and cut time (b-and-b)
└   t = 1.1470264
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 671
│   lb = 2.676218324851438
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 647
└   length(nodes) = 1295
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138382
└   sum(fire_plans.plans_per_fire) = 52820
┌ Info: Time check
└   time() - start_time = 1334.9589998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 852
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248021
┌ Info: Price and cut time (b-and-b)
└   t = 0.6243963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 852
│   lb = 2.676218324851438
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 648
└   length(nodes) = 1297
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138433
└   sum(fire_plans.plans_per_fire) = 52844
┌ Info: Time check
└   time() - start_time = 1335.6219999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 853
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258147
┌ Info: Price and cut time (b-and-b)
└   t = 0.9549363
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 853
│   lb = 2.6762227214435956
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 649
└   length(nodes) = 1299
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138674
└   sum(fire_plans.plans_per_fire) = 52890
┌ Info: Time check
└   time() - start_time = 1336.6180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 892
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025408
┌ Info: Price and cut time (b-and-b)
└   t = 1.403846
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 892
│   lb = 2.6762227214435956
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 650
└   length(nodes) = 1301
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138862
└   sum(fire_plans.plans_per_fire) = 52948
┌ Info: Time check
└   time() - start_time = 1338.0639998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 893
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0376933
┌ Info: Price and cut time (b-and-b)
└   t = 0.1941926
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 1, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 893
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0   2  17  3  0  0
│      0   0   0  9  9  9   2   0   3   0   0  0  0  0
│     10   1   0  0  0  0   0   0   0   0   0  0  0  0
│      5  19  20  6  0  0   0   0   0   0   0  1  0  0
│      0   0   0  1  3  3  14  15  13  12   1  0  0  0
└      6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4593272
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1741276
│   obj = 2.732516344329671
└   obj_bound = 2.7322692514361027
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1  10  10  10   3   1   4   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1   2   4   4  15  16  14  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5667251
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3248277
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2  11  11  11   4   2   5   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2   3   5   5  16  17  15  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2114307
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.373454
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 893
│   lb = 2.6762237236972153
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 651
└   length(nodes) = 1303
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139354
└   sum(fire_plans.plans_per_fire) = 53190
┌ Info: Time check
└   time() - start_time = 1343.0179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 178
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239276
┌ Info: Price and cut time (b-and-b)
└   t = 1.0128503
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 178
│   lb = 2.6762237236972153
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 652
└   length(nodes) = 1305
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139478
└   sum(fire_plans.plans_per_fire) = 53230
┌ Info: Time check
└   time() - start_time = 1344.0699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 179
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247942
┌ Info: Price and cut time (b-and-b)
└   t = 0.8174328
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 179
│   lb = 2.676225341238407
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 653
└   length(nodes) = 1307
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139654
└   sum(fire_plans.plans_per_fire) = 53263
┌ Info: Time check
└   time() - start_time = 1344.9289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1232
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028488
┌ Info: Price and cut time (b-and-b)
└   t = 1.2137258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1232
│   lb = 2.676225341238407
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 654
└   length(nodes) = 1309
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139811
└   sum(fire_plans.plans_per_fire) = 53310
┌ Info: Time check
└   time() - start_time = 1346.2530000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1233
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242507
┌ Info: Price and cut time (b-and-b)
└   t = 0.3179955
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1233
│   lb = 2.676227165445884
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 655
└   length(nodes) = 1311
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139886
└   sum(fire_plans.plans_per_fire) = 53321
┌ Info: Time check
└   time() - start_time = 1346.6099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 822
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025573
┌ Info: Price and cut time (b-and-b)
└   t = 0.6379422
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 822
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   1  17  3  0  0
│     0   0   0  11  12  2   3   4   1   1   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  19  20   5   0  0   0   0   0   0   0  1  0  0
│     0   0   0   0   0  9  12  12  15  13   0  0  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4016461
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1192632
│   obj = 2.732516344329671
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  12  13   3   4   5   2   2   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  20  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1   1   1  10  13  13  16  14   1  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0365173
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2638394
│   obj = 2.7325163443296705
└   obj_bound = 2.732246370031963
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  13  14   4   5   6   3   3   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  21  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2   2  11  14  14  17  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7707476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9050432
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 822
│   lb = 2.676227165445884
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 656
└   length(nodes) = 1313
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140352
└   sum(fire_plans.plans_per_fire) = 53539
┌ Info: Time check
└   time() - start_time = 1351.3539998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 823
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026105
┌ Info: Price and cut time (b-and-b)
└   t = 0.8589346
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 823
│   lb = 2.676228319920135
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 657
└   length(nodes) = 1315
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140517
└   sum(fire_plans.plans_per_fire) = 53576
┌ Info: Time check
└   time() - start_time = 1352.2539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1314
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281249
┌ Info: Price and cut time (b-and-b)
└   t = 0.4469712
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1314
│   lb = 2.676228319920135
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 658
└   length(nodes) = 1317
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140557
└   sum(fire_plans.plans_per_fire) = 53594
┌ Info: Time check
└   time() - start_time = 1352.744999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1315
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242205
┌ Info: Price and cut time (b-and-b)
└   t = 1.7904623
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1315
│   lb = 2.676228319920135
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 659
└   length(nodes) = 1319
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140743
└   sum(fire_plans.plans_per_fire) = 53668
┌ Info: Time check
└   time() - start_time = 1354.5749998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1316
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027859
┌ Info: Price and cut time (b-and-b)
└   t = 1.2391122
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1316
│   lb = 2.676228319920135
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 660
└   length(nodes) = 1321
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140845
└   sum(fire_plans.plans_per_fire) = 53716
┌ Info: Time check
└   time() - start_time = 1355.8579998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1317
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269002
┌ Info: Price and cut time (b-and-b)
└   t = 0.1812406
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1317
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0   0   0   1  17  3  0  0
│      0   0   0  10  10   2   3   3   3   0   0  0  0  0
│     10   1   0   0   0   0   0   0   0   0   0  0  0  0
│      5  19  20   6   0   0   0   0   0   0   0  1  0  0
│      0   0   0   0   3  10  13  13  13  13   0  0  0  0
└      6   0   1   0   1   0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4741945
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0916601
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  11  11   3   4   4   4   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1   1   4  11  14  14  14  14   1  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0359054
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2778619
│   obj = 2.7325163443296705
└   obj_bound = 2.7322562164169564
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  12   4   5   5   5   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2   5  12  15  15  15  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2860667
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2787002
│   obj = 2.73251634432967
└   obj_bound = 2.7322777092014876
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1317
│   lb = 2.6762320097826913
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 661
└   length(nodes) = 1323
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141246
└   sum(fire_plans.plans_per_fire) = 53931
┌ Info: Time check
└   time() - start_time = 1360.0099999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1202
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256429
┌ Info: Price and cut time (b-and-b)
└   t = 1.4722006
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1202
│   lb = 2.6762320097826913
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 662
└   length(nodes) = 1325
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141421
└   sum(fire_plans.plans_per_fire) = 53984
┌ Info: Time check
└   time() - start_time = 1361.523999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1203
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315722
┌ Info: Price and cut time (b-and-b)
└   t = 0.290015
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1203
│   lb = 2.6762339952267875
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 663
└   length(nodes) = 1327
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141445
└   sum(fire_plans.plans_per_fire) = 53990
┌ Info: Time check
└   time() - start_time = 1361.8599998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 784
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275072
┌ Info: Price and cut time (b-and-b)
└   t = 0.7103115
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 784
│   lb = 2.6762339952267875
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 664
└   length(nodes) = 1329
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141528
└   sum(fire_plans.plans_per_fire) = 54028
┌ Info: Time check
└   time() - start_time = 1362.6159999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 785
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287886
┌ Info: Price and cut time (b-and-b)
└   t = 1.1362697
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 785
│   lb = 2.676255901374968
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 665
└   length(nodes) = 1331
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141703
└   sum(fire_plans.plans_per_fire) = 54085
┌ Info: Time check
└   time() - start_time = 1363.7969999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 854
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253202
┌ Info: Price and cut time (b-and-b)
└   t = 0.7557778
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 854
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  0  0   3  15  3  0  0
│     0   0   0   1   2  2  11  9  6   0   0  0  0  0
│     9   2   0   0   0  0   0  0  0   0   0  0  0  0
│     6  18  20   5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  10  10  9   5  7  9  10   3  0  0  0
└     6   0   1   0   1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.523801
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0708014
│   obj = 2.732516344329671
└   obj_bound = 2.7322507503395372
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   4  16  4  1  1
│      1   1   1   2   3   3  12  10   7   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  11  10   6   8  10  11   4  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3773768
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3230908
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   5  17  5  2  2
│      2   2   2   3   4   4  13  11   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  12  11   7   9  11  12   5  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3758326
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9975916
│   obj = 2.732516344329671
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 854
│   lb = 2.676255901374968
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 666
└   length(nodes) = 1333
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142186
└   sum(fire_plans.plans_per_fire) = 54345
┌ Info: Time check
└   time() - start_time = 1369.7689998149872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 855
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266181
┌ Info: Price and cut time (b-and-b)
└   t = 1.1743414
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 855
│   lb = 2.6762566300172215
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 667
└   length(nodes) = 1335
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142419
└   sum(fire_plans.plans_per_fire) = 54397
┌ Info: Time check
└   time() - start_time = 1370.9889998435974
┌ Info: Exploring node
└   branch_and_bound_node.ix = 512
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1083215
┌ Info: Price and cut time (b-and-b)
└   t = 0.773865
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 512
│   lb = 2.6762566300172215
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 668
└   length(nodes) = 1337
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142491
└   sum(fire_plans.plans_per_fire) = 54424
┌ Info: Time check
└   time() - start_time = 1371.8849999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 513
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276454
┌ Info: Price and cut time (b-and-b)
└   t = 1.1578533
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 513
│   lb = 2.6762612762730096
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 669
└   length(nodes) = 1339
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142653
└   sum(fire_plans.plans_per_fire) = 54474
┌ Info: Time check
└   time() - start_time = 1373.0869998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 616
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250084
┌ Info: Price and cut time (b-and-b)
└   t = 0.8553212
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 616
│   lb = 2.6762612762730096
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 670
└   length(nodes) = 1341
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142792
└   sum(fire_plans.plans_per_fire) = 54506
┌ Info: Time check
└   time() - start_time = 1373.981999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 617
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221976
┌ Info: Price and cut time (b-and-b)
└   t = 1.2450214
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 617
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0   0   3  16  3  0  0
│     0   0   0   0   0   0  9  9  12   0   0  0  0  0
│     9   2   0   0   0   0  0  0   0   0   0  0  0  0
│     6  18  20   5   0   0  0  0   0   0   0  1  0  0
│     0   0   0  11  12  11  6  6   3  11   2  0  0  0
└     6   0   1   0   1   0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5195282
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1210676
│   obj = 2.732516344329671
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   4  17  4  1  1
│      1   1   1   1   1   1  10  10  13   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  13  12   7   7   4  12   3  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4339494
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4088367
│   obj = 2.7325163443296705
└   obj_bound = 2.7323070843936583
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   5  18  5  2  2
│      2   2   2   2   2   2  11  11  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13   8   8   5  13   4  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8602571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3201174
│   obj = 2.73251634432967
└   obj_bound = 2.732333050632109
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 617
│   lb = 2.676271903488954
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 671
└   length(nodes) = 1343
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143265
└   sum(fire_plans.plans_per_fire) = 54735
┌ Info: Time check
└   time() - start_time = 1379.4609999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 856
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258261
┌ Info: Price and cut time (b-and-b)
└   t = 0.5330239
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 856
│   lb = 2.676271903488954
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 672
└   length(nodes) = 1345
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143292
└   sum(fire_plans.plans_per_fire) = 54756
┌ Info: Time check
└   time() - start_time = 1380.034999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 857
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283737
┌ Info: Price and cut time (b-and-b)
└   t = 1.1258829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 857
│   lb = 2.676275055907166
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 673
└   length(nodes) = 1347
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143494
└   sum(fire_plans.plans_per_fire) = 54812
┌ Info: Time check
└   time() - start_time = 1381.202999830246
┌ Info: Exploring node
└   branch_and_bound_node.ix = 928
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235565
┌ Info: Price and cut time (b-and-b)
└   t = 0.9928321
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 928
│   lb = 2.676275055907166
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 674
└   length(nodes) = 1349
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143619
└   sum(fire_plans.plans_per_fire) = 54849
┌ Info: Time check
└   time() - start_time = 1382.2329998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 929
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252034
┌ Info: Price and cut time (b-and-b)
└   t = 0.8898814
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 10, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 929
│   lb = 2.676276829400469
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 675
└   length(nodes) = 1351
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143744
└   sum(fire_plans.plans_per_fire) = 54884
┌ Info: Time check
└   time() - start_time = 1383.164999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 620
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229643
┌ Info: Price and cut time (b-and-b)
└   t = 0.8911643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 620
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  6  6  3  9   3   3   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  5  0  0  0   0   0   0   0  1  0  0
│     0   0   0  5  6  8  6  12  12  13   0  0  0  0
└     6   0   1  0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4825117
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0912992
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  7  7  4  10   4   4   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  9   7  13  13  14   1  1  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1785722
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8291332
│   obj = 2.73251634432967
└   obj_bound = 2.7324795989884376
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  8  8   5  11   5   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  10   8  14  14  15   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1129006
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3095588
│   obj = 2.7325163443296705
└   obj_bound = 2.73247783189169
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 620
│   lb = 2.676276829400469
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 676
└   length(nodes) = 1353
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144263
└   sum(fire_plans.plans_per_fire) = 55143
┌ Info: Time check
└   time() - start_time = 1388.630999803543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 621
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292375
┌ Info: Price and cut time (b-and-b)
└   t = 1.2371674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 621
│   lb = 2.676281435336918
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 677
└   length(nodes) = 1355
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144470
└   sum(fire_plans.plans_per_fire) = 55201
┌ Info: Time check
└   time() - start_time = 1389.912999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1354
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312778
┌ Info: Price and cut time (b-and-b)
└   t = 0.7628203
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1354
│   lb = 2.676281435336918
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 678
└   length(nodes) = 1357
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144529
└   sum(fire_plans.plans_per_fire) = 55221
┌ Info: Time check
└   time() - start_time = 1390.7219998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1355
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266825
┌ Info: Price and cut time (b-and-b)
└   t = 1.3784963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1355
│   lb = 2.676284355520171
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 679
└   length(nodes) = 1359
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144803
└   sum(fire_plans.plans_per_fire) = 55282
┌ Info: Time check
└   time() - start_time = 1392.1429998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 414
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276895
┌ Info: Price and cut time (b-and-b)
└   t = 0.8880405
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 414
│   lb = 2.676284355520171
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 680
└   length(nodes) = 1361
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144838
└   sum(fire_plans.plans_per_fire) = 55303
┌ Info: Time check
└   time() - start_time = 1393.0739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 415
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271006
┌ Info: Price and cut time (b-and-b)
└   t = 1.5185441
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 415
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0  0   0   1  17  3  0  0
│      0   0   0  3  6  6  6  6   3   0   0  0  0  0
│     10   1   0  0  0  0  0  0   0   0   0  0  0  0
│      5  19  19  6  0  0  0  0   0   0   0  0  0  0
│      0   0   0  6  6  6  9  9  12  12   1  0  0  0
└      6   0   0  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3655316
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1830598
│   obj = 2.73251634432967
└   obj_bound = 2.7322697717218727
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  4  7  7   7   7   4   1   1  1  1  1
│     11   2   1  1  1  1   1   1   1   1   1  1  1  1
│      6  20  20  7  1  1   1   1   1   1   1  1  1  1
│      1   1   1  7  7  7  10  10  13  13   2  1  1  1
└      7   1   1  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9905559
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2613489
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2  2   2   2   2   3  19  5  2  2
│      2   2   2  5  8  8   8   8   5   2   2  2  2  2
│     12   3   2  2  2  2   2   2   2   2   2  2  2  2
│      7  21  21  8  2  2   2   2   2   2   2  2  2  2
│      2   2   2  8  8  8  11  11  14  14   3  2  2  2
└      8   2   2  2  3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1517844
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3175003
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 415
│   lb = 2.676290285710599
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 681
└   length(nodes) = 1363
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145450
└   sum(fire_plans.plans_per_fire) = 55551
┌ Info: Time check
└   time() - start_time = 1398.3999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1236
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026263
┌ Info: Price and cut time (b-and-b)
└   t = 1.0449815
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1236
│   lb = 2.676290285710599
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 682
└   length(nodes) = 1365
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145593
└   sum(fire_plans.plans_per_fire) = 55602
┌ Info: Time check
└   time() - start_time = 1399.486999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1237
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258445
┌ Info: Price and cut time (b-and-b)
└   t = 0.4203222
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1237
│   lb = 2.676298580725812
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 683
└   length(nodes) = 1367
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145640
└   sum(fire_plans.plans_per_fire) = 55612
┌ Info: Time check
└   time() - start_time = 1399.9479999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 740
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284428
┌ Info: Price and cut time (b-and-b)
└   t = 0.8827801
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 740
│   lb = 2.676298580725812
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 684
└   length(nodes) = 1369
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145712
└   sum(fire_plans.plans_per_fire) = 55653
┌ Info: Time check
└   time() - start_time = 1400.8759999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1368
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287762
┌ Info: Price and cut time (b-and-b)
└   t = 0.3500643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1368
│   lb = 2.676298580725812
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 685
└   length(nodes) = 1371
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145772
└   sum(fire_plans.plans_per_fire) = 55666
┌ Info: Time check
└   time() - start_time = 1401.2689998149872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1369
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246851
┌ Info: Price and cut time (b-and-b)
└   t = 1.471241
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1369
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0  0   0  17  3  0  0
│     0   0   0  5  6  3   5  6  6   0   0  0  0  0
│     9   2   0  0  0  0   0  0  0   0   0  0  0  0
│     6  19  20  7  0  0   0  0  0   0   0  1  0  0
│     0   0   0  5  6  8  11  9  9  14   0  1  0  0
└     6   0   1  0  1  1   0  0  0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7193928
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1089623
│   obj = 2.732516344329671
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  6  7  4   6   7   7   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  20  21  8  1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  9  12  10  10  15   1  2  1  1
└      7   1   2  1  2  2   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1411488
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2944008
│   obj = 2.7325163443296705
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   2  19  5  2  2
│      2   2   2  7  8   5   7   8   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  21  22  9  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  10  13  11  11  16   2  3  2  2
└      8   2   3  2  3   3   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6286741
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3462687
│   obj = 2.7325163443296705
└   obj_bound = 2.732467313838022
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1369
│   lb = 2.676298580725812
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 686
└   length(nodes) = 1373
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146243
└   sum(fire_plans.plans_per_fire) = 55901
┌ Info: Time check
└   time() - start_time = 1406.5369999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 741
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234476
┌ Info: Price and cut time (b-and-b)
└   t = 0.9460621
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 741
│   lb = 2.6762986459649394
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 687
└   length(nodes) = 1375
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146478
└   sum(fire_plans.plans_per_fire) = 55959
┌ Info: Time check
└   time() - start_time = 1407.521999835968
┌ Info: Exploring node
└   branch_and_bound_node.ix = 600
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261794
┌ Info: Price and cut time (b-and-b)
└   t = 1.3114687
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 600
│   lb = 2.6762986459649394
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 688
└   length(nodes) = 1377
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146624
└   sum(fire_plans.plans_per_fire) = 56000
┌ Info: Time check
└   time() - start_time = 1408.8739998340607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 601
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231195
┌ Info: Price and cut time (b-and-b)
└   t = 1.1213978
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 601
│   lb = 2.676309590025841
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 689
└   length(nodes) = 1379
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146754
└   sum(fire_plans.plans_per_fire) = 56041
┌ Info: Time check
└   time() - start_time = 1410.0329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1334
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246691
┌ Info: Price and cut time (b-and-b)
└   t = 1.230365
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1334
│   lb = 2.676309590025841
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 690
└   length(nodes) = 1381
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146865
└   sum(fire_plans.plans_per_fire) = 56097
┌ Info: Time check
└   time() - start_time = 1411.3069999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1335
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318691
┌ Info: Price and cut time (b-and-b)
└   t = 0.250814
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1335
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0  0  0   3  15  3  0  0
│      0   0   0   0   1   1  11  9  9   0   0  0  0  0
│     10   1   0   0   0   0   0  0  0   0   0  0  0  0
│      5  19  20   6   0   0   0  0  0   0   0  1  0  0
│      0   0   0  10  12  11   5  7  7  11   3  0  0  0
└      6   0   1   0   1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5207423
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2868533
│   obj = 2.7325163443296705
└   obj_bound = 2.7324953983189566
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   4  16  4  1  1
│      1   1   1   1   2   2  12  10  10   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  13  12   6   8   8  12   4  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4535752
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2703891
│   obj = 2.7325163443296705
└   obj_bound = 2.7322700474774577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   5  17  5  2  2
│      2   2   2   2   3   3  13  11  11   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  14  13   7   9   9  13   5  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.217132
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.588644
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1335
│   lb = 2.676314573048245
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 691
└   length(nodes) = 1383
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147271
└   sum(fire_plans.plans_per_fire) = 56329
┌ Info: Time check
└   time() - start_time = 1416.468999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1228
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247352
┌ Info: Price and cut time (b-and-b)
└   t = 1.2046343
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1228
│   lb = 2.676314573048245
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 692
└   length(nodes) = 1385
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147469
└   sum(fire_plans.plans_per_fire) = 56375
┌ Info: Time check
└   time() - start_time = 1417.7139999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1229
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251777
┌ Info: Price and cut time (b-and-b)
└   t = 0.7993073
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1229
│   lb = 2.676319974879507
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 693
└   length(nodes) = 1387
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147558
└   sum(fire_plans.plans_per_fire) = 56397
┌ Info: Time check
└   time() - start_time = 1418.5529999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1292
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304836
┌ Info: Price and cut time (b-and-b)
└   t = 1.6364255
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1292
│   lb = 2.676319974879507
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 694
└   length(nodes) = 1389
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147770
└   sum(fire_plans.plans_per_fire) = 56453
┌ Info: Time check
└   time() - start_time = 1420.236999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1293
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258991
┌ Info: Price and cut time (b-and-b)
└   t = 0.2159281
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1293
│   lb = 2.676321020111613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 695
└   length(nodes) = 1391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147790
└   sum(fire_plans.plans_per_fire) = 56462
┌ Info: Time check
└   time() - start_time = 1420.4939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 918
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258174
┌ Info: Price and cut time (b-and-b)
└   t = 0.5615306
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 918
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0   1  17  3  0  0
│     0   0   0   0   1   1  11  12  7   0   0  0  0  0
│     9   2   0   0   0   0   0   0  0   0   0  0  0  0
│     6  18  20   5   0   0   0   0  0   0   0  1  0  0
│     0   0   0  11  12  11   4   3  9  13   0  0  0  0
└     6   0   1   0   1   0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4447111
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0555438
│   obj = 2.732516344329671
└   obj_bound = 2.7323991443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1   1   2   2  12  13   8   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  13  12   5   4  10  14   1  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.31074
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4289325
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   2   3   3  13  14   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  14  13   6   5  11  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8912481
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3363835
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 918
│   lb = 2.676321020111613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 696
└   length(nodes) = 1393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148269
└   sum(fire_plans.plans_per_fire) = 56695
┌ Info: Time check
└   time() - start_time = 1425.0789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 919
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245531
┌ Info: Price and cut time (b-and-b)
└   t = 1.5187224
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 919
│   lb = 2.6763217063002624
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 697
└   length(nodes) = 1395
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148544
└   sum(fire_plans.plans_per_fire) = 56770
┌ Info: Time check
└   time() - start_time = 1426.6389999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1392
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271258
┌ Info: Price and cut time (b-and-b)
└   t = 1.2428442
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1392
│   lb = 2.6763217063002624
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 698
└   length(nodes) = 1397
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148626
└   sum(fire_plans.plans_per_fire) = 56812
┌ Info: Time check
└   time() - start_time = 1428.008999824524
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1393
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321564
┌ Info: Price and cut time (b-and-b)
└   t = 0.1628376
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1393
│   lb = 2.6763231518565527
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 699
└   length(nodes) = 1399
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148646
└   sum(fire_plans.plans_per_fire) = 56819
┌ Info: Time check
└   time() - start_time = 1428.2219998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 988
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247581
┌ Info: Price and cut time (b-and-b)
└   t = 1.0736804
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 988
│   lb = 2.6763231518565527
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 700
└   length(nodes) = 1401
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148808
└   sum(fire_plans.plans_per_fire) = 56857
┌ Info: Time check
└   time() - start_time = 1429.3359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 989
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02702
┌ Info: Price and cut time (b-and-b)
└   t = 0.7819144
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 989
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0  0  0   1  17  2  0  0
│     0   0   0  6  6   1   2  9  6   0   0  0  0  0
│     9   2   0  0  0   0   0  0  0   0   0  0  0  0
│     6  18  20  5  0   0   0  0  0   0   0  1  0  0
│     0   0   0  5  6  10  13  6  9  13   0  1  0  0
└     6   0   1  0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3941923
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0609084
│   obj = 2.73251634432967
└   obj_bound = 2.7322478179586405
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  3  1  1
│      1   1   1  7  7   2   3  10   7   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  11  14   7  10  14   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5536769
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3526732
│   obj = 2.73251634432967
└   obj_bound = 2.73227411283158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  4  2  2
│      2   2   2  8  8   3   4  11   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  12  15   8  11  15   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7052045
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3572416
│   obj = 2.73251634432967
└   obj_bound = 2.7323204782712365
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 989
│   lb = 2.676327356350535
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 701
└   length(nodes) = 1403
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149349
└   sum(fire_plans.plans_per_fire) = 57096
┌ Info: Time check
└   time() - start_time = 1434.2309999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 462
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239945
┌ Info: Price and cut time (b-and-b)
└   t = 0.6820739
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 462
│   lb = 2.676327356350535
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 702
└   length(nodes) = 1405
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149427
└   sum(fire_plans.plans_per_fire) = 57135
┌ Info: Time check
└   time() - start_time = 1434.9519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 463
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251291
┌ Info: Price and cut time (b-and-b)
└   t = 1.3632081
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 463
│   lb = 2.6763303858560215
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 703
└   length(nodes) = 1407
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149691
└   sum(fire_plans.plans_per_fire) = 57196
┌ Info: Time check
└   time() - start_time = 1436.3559999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1296
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251323
┌ Info: Price and cut time (b-and-b)
└   t = 0.7233287
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1296
│   lb = 2.6763303858560215
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 704
└   length(nodes) = 1409
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149754
└   sum(fire_plans.plans_per_fire) = 57216
┌ Info: Time check
└   time() - start_time = 1437.1189999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1297
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274705
┌ Info: Price and cut time (b-and-b)
└   t = 0.6849762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1297
│   lb = 2.6763452375893255
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 705
└   length(nodes) = 1411
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149834
└   sum(fire_plans.plans_per_fire) = 57237
┌ Info: Time check
└   time() - start_time = 1437.8499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1150
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294184
┌ Info: Price and cut time (b-and-b)
└   t = 1.6173201
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1150
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0  0   4  13  4  0  0
│     0   0   0  4   2  6  6  6  6   0   0  0  0  0
│     9   2   0  0   0  0  0  0  0   0   0  0  0  0
│     6  18  20  6   0  0  0  0  0   0   0  0  0  0
│     0   0   0  6  10  5  9  9  9  10   5  0  0  0
└     6   1   1  0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6119946
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0698898
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   5  14  5  1  1
│      1   1   1  5   3  7   7   7   7   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  7   1  1   1   1   1   1   1  1  1  1
│      1   1   1  7  11  6  10  10  10  11   6  1  1  1
└      7   2   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6394909
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7287798
│   obj = 2.73251634432967
└   obj_bound = 2.732253522145058
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   6  15  6  2  2
│      2   2   2  6   4  8   8   8   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  8   2  2   2   2   2   2   2  2  2  2
│      2   2   2  8  12  7  11  11  11  12   7  2  2  2
└      8   3   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1793112
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8077883
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1150
│   lb = 2.6763452375893255
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 706
└   length(nodes) = 1413
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150334
└   sum(fire_plans.plans_per_fire) = 57529
┌ Info: Time check
└   time() - start_time = 1445.1429998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1151
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298409
┌ Info: Price and cut time (b-and-b)
└   t = 0.1503111
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1151
│   lb = 2.676351534458639
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 707
└   length(nodes) = 1415
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150354
└   sum(fire_plans.plans_per_fire) = 57535
┌ Info: Time check
└   time() - start_time = 1445.3389999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 654
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235747
┌ Info: Price and cut time (b-and-b)
└   t = 0.5679756
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 654
│   lb = 2.676351534458639
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 708
└   length(nodes) = 1417
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150396
└   sum(fire_plans.plans_per_fire) = 57548
┌ Info: Time check
└   time() - start_time = 1445.944000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 655
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254437
┌ Info: Price and cut time (b-and-b)
└   t = 2.3375813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 655
│   lb = 2.6763517024005874
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 709
└   length(nodes) = 1419
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150583
└   sum(fire_plans.plans_per_fire) = 57596
┌ Info: Time check
└   time() - start_time = 1448.3239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 430
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0433906
┌ Info: Price and cut time (b-and-b)
└   t = 1.6420759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 430
│   lb = 2.6763517024005874
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 710
└   length(nodes) = 1421
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150677
└   sum(fire_plans.plans_per_fire) = 57629
┌ Info: Time check
└   time() - start_time = 1450.023999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 431
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.037781
┌ Info: Price and cut time (b-and-b)
└   t = 1.2656495
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 431
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   1  17  3  0  0
│     0   0   0  10  3  6  6   3   3   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   5  0  0  0   0   0   0   0  1  0  0
│     0   0   0   1  9  5  9  12  13  13   0  0  0  0
└     6   0   1   0  1  0  0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5669445
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1192724
│   obj = 2.7325163443296705
└   obj_bound = 2.7324214663982844
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  11   4  7   7   4   4   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1   2  10  6  10  13  14  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5737052
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7492849
│   obj = 2.7325163443296705
└   obj_bound = 2.732250421840967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  12   5  8   8   5   5   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   3  11  7  11  14  15  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2166881
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0542245
│   obj = 2.7325163443296705
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 431
│   lb = 2.6763556017963803
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 711
└   length(nodes) = 1423
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151099
└   sum(fire_plans.plans_per_fire) = 57901
┌ Info: Time check
└   time() - start_time = 1457.2170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1092
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027315
┌ Info: Price and cut time (b-and-b)
└   t = 0.8321164
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1092
│   lb = 2.6763556017963803
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 712
└   length(nodes) = 1425
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151175
└   sum(fire_plans.plans_per_fire) = 57929
┌ Info: Time check
└   time() - start_time = 1458.09099984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1093
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340699
┌ Info: Price and cut time (b-and-b)
└   t = 1.4342922
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1093
│   lb = 2.676356612895275
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 713
└   length(nodes) = 1427
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151468
└   sum(fire_plans.plans_per_fire) = 57999
┌ Info: Time check
└   time() - start_time = 1459.5749998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1424
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0354837
┌ Info: Price and cut time (b-and-b)
└   t = 1.0786755
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1424
│   lb = 2.676356612895275
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 714
└   length(nodes) = 1429
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151555
└   sum(fire_plans.plans_per_fire) = 58034
┌ Info: Time check
└   time() - start_time = 1460.704999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1425
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.036246
┌ Info: Price and cut time (b-and-b)
└   t = 1.3451009
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1425
│   lb = 2.676359183076895
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 715
└   length(nodes) = 1431
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151594
└   sum(fire_plans.plans_per_fire) = 58074
┌ Info: Time check
└   time() - start_time = 1462.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1036
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0353521
┌ Info: Price and cut time (b-and-b)
└   t = 1.1643601
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1036
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   1  17  3  0  0
│     0   0   0  2  3  6  6  6  9   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  19  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  9  9  6  9  9  6  13   0  0  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4481707
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2339512
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1   3   4  7   7   7  10   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  20  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  10  7  10  10   7  14   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0922145
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5772346
│   obj = 2.73251634432967
└   obj_bound = 2.7323348384136947
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2   4   5  8   8   8  11   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  21  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  11  11  8  11  11   8  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5500842
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7248516
│   obj = 2.7325163443296705
└   obj_bound = 2.732252381835371
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1036
│   lb = 2.676359183076895
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 716
└   length(nodes) = 1433
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152056
└   sum(fire_plans.plans_per_fire) = 58264
┌ Info: Time check
└   time() - start_time = 1467.4859998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1037
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319066
┌ Info: Price and cut time (b-and-b)
└   t = 2.0389583
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1037
│   lb = 2.676372987461206
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 717
└   length(nodes) = 1435
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152286
└   sum(fire_plans.plans_per_fire) = 58326
┌ Info: Time check
└   time() - start_time = 1469.5729999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1208
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0379452
┌ Info: Price and cut time (b-and-b)
└   t = 0.6406212
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1208
│   lb = 2.676372987461206
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 718
└   length(nodes) = 1437
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152346
└   sum(fire_plans.plans_per_fire) = 58346
┌ Info: Time check
└   time() - start_time = 1470.266000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1209
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316741
┌ Info: Price and cut time (b-and-b)
└   t = 1.0352924
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1209
│   lb = 2.6763755939546403
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 719
└   length(nodes) = 1439
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152495
└   sum(fire_plans.plans_per_fire) = 58385
┌ Info: Time check
└   time() - start_time = 1471.3469998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1028
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306846
┌ Info: Price and cut time (b-and-b)
└   t = 0.7687799
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1028
│   lb = 2.6763755939546403
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 720
└   length(nodes) = 1441
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152534
└   sum(fire_plans.plans_per_fire) = 58411
┌ Info: Time check
└   time() - start_time = 1472.1610000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1029
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306887
┌ Info: Price and cut time (b-and-b)
└   t = 1.2963248
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1029
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0   0   2  17  3  0  0
│     0   0   0   0   1  9  13   6   3   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   5   0  0   0   0   0   0   0  1  0  0
│     0   0   0  11  11  2   4  10  13  12   1  0  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6190647
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.290642
│   obj = 2.732516344329671
└   obj_bound = 2.7322477879222347
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1   1   2  10  14   7   4   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  12  12   3   5  11  14  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0154594
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7369842
│   obj = 2.73251634432967
└   obj_bound = 2.7322579906483315
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2   2   3  11  15   8   5   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  13  13   4   6  12  15  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8588684
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7241127
│   obj = 2.7325163443296705
└   obj_bound = 2.732418534294274
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1029
│   lb = 2.6763809968230667
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 721
└   length(nodes) = 1443
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153204
└   sum(fire_plans.plans_per_fire) = 58689
┌ Info: Time check
└   time() - start_time = 1479.2990000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 464
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313697
┌ Info: Price and cut time (b-and-b)
└   t = 1.4098199
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 464
│   lb = 2.6763809968230667
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 722
└   length(nodes) = 1445
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153405
└   sum(fire_plans.plans_per_fire) = 58747
┌ Info: Time check
└   time() - start_time = 1480.7649998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 465
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0364366
┌ Info: Price and cut time (b-and-b)
└   t = 0.4557509
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 465
│   lb = 2.6763848834988098
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 723
└   length(nodes) = 1447
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153495
└   sum(fire_plans.plans_per_fire) = 58758
┌ Info: Time check
└   time() - start_time = 1481.273999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 888
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0392924
┌ Info: Price and cut time (b-and-b)
└   t = 1.6392102
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 888
│   lb = 2.6763848834988098
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 724
└   length(nodes) = 1449
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153615
└   sum(fire_plans.plans_per_fire) = 58823
┌ Info: Time check
└   time() - start_time = 1482.968999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 889
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0371244
┌ Info: Price and cut time (b-and-b)
└   t = 0.3702539
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 889
│   lb = 2.6763887642740762
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 725
└   length(nodes) = 1451
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153640
└   sum(fire_plans.plans_per_fire) = 58832
┌ Info: Time check
└   time() - start_time = 1483.4519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1344
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305907
┌ Info: Price and cut time (b-and-b)
└   t = 0.6725292
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1344
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0  0   1  17  3  0  0
│     0   0   0  6  6  2  7   4  6   0   0  0  0  0
│     9   2   0  0  0  0  0   0  0   0   0  0  0  0
│     6  18  20  5  0  0  0   0  0   0   0  1  0  0
│     0   0   0  5  6  9  9  12  9  12   1  0  0  0
└     6   0   1  0  1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6114101
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2093793
│   obj = 2.732516344329671
└   obj_bound = 2.7323930516217203
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  7  7   3   8   5   7   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  6  7  10  10  13  10  13   2  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3508459
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5143476
│   obj = 2.73251634432967
└   obj_bound = 2.732248371635941
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  8  8   4   9   6   8   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  8  11  11  14  11  14   3  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0541372
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6800679
│   obj = 2.7325163443296705
└   obj_bound = 2.7324012363137316
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1344
│   lb = 2.6763887642740762
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 726
└   length(nodes) = 1453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154019
└   sum(fire_plans.plans_per_fire) = 59030
┌ Info: Time check
└   time() - start_time = 1489.1949999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1345
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316633
┌ Info: Price and cut time (b-and-b)
└   t = 0.6669876
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1345
│   lb = 2.6763896690155566
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 727
└   length(nodes) = 1455
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154120
└   sum(fire_plans.plans_per_fire) = 59061
┌ Info: Time check
└   time() - start_time = 1489.9110000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 860
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347252
┌ Info: Price and cut time (b-and-b)
└   t = 1.028165
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 860
│   lb = 2.6763896690155566
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 728
└   length(nodes) = 1457
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154161
└   sum(fire_plans.plans_per_fire) = 59101
┌ Info: Time check
└   time() - start_time = 1490.9889998435974
┌ Info: Exploring node
└   branch_and_bound_node.ix = 861
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0331296
┌ Info: Price and cut time (b-and-b)
└   t = 0.9279698
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 861
│   lb = 2.6763915176633195
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 729
└   length(nodes) = 1459
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154259
└   sum(fire_plans.plans_per_fire) = 59144
┌ Info: Time check
└   time() - start_time = 1491.96599984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1436
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0346131
┌ Info: Price and cut time (b-and-b)
└   t = 0.4241169
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1436
│   lb = 2.6763915176633195
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 730
└   length(nodes) = 1461
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154326
└   sum(fire_plans.plans_per_fire) = 59154
┌ Info: Time check
└   time() - start_time = 1492.4399998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1437
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.035832
┌ Info: Price and cut time (b-and-b)
└   t = 1.284639
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1437
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0   0  0  0   2  16  3  0  0
│     0   0   0  6  3   1   3  9  8   0   0  0  0  0
│     9   2   0  0  0   0   0  0  0   0   0  0  0  0
│     6  18  20  5  0   0   0  0  0   0   0  1  0  0
│     0   0   0  5  9  10  12  6  7  12   2  0  0  0
└     6   0   1  0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6219269
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1097736
│   obj = 2.7325163443296705
└   obj_bound = 2.732260271796807
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1  1   3  17  4  1  1
│      1   1   1  7   4   2   4  10  9   1   1  1  1  1
│     10   3   1  1   1   1   1   1  1   1   1  1  1  1
│      7  19  21  6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  6  10  11  13   7  8  13   3  1  1  1
└      7   1   2  1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7518242
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6214127
│   obj = 2.732516344329671
└   obj_bound = 2.732248812870663
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  18  5  2  2
│      2   2   2  8   5   3   5  11  10   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  7  11  12  14   8   9  14   4  2  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6486924
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7504696
│   obj = 2.73251634432967
└   obj_bound = 2.7322996758615807
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1437
│   lb = 2.6763916258505223
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 731
└   length(nodes) = 1463
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155023
└   sum(fire_plans.plans_per_fire) = 59391
┌ Info: Time check
└   time() - start_time = 1498.8369998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 718
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264755
┌ Info: Price and cut time (b-and-b)
└   t = 1.2247933
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 718
│   lb = 2.6763916258505223
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 732
└   length(nodes) = 1465
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155197
└   sum(fire_plans.plans_per_fire) = 59431
┌ Info: Time check
└   time() - start_time = 1500.1039998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 719
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316698
┌ Info: Price and cut time (b-and-b)
└   t = 1.2711905
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 719
│   lb = 2.6763925484966613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 733
└   length(nodes) = 1467
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155300
└   sum(fire_plans.plans_per_fire) = 59468
┌ Info: Time check
└   time() - start_time = 1501.4240000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 522
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299648
┌ Info: Price and cut time (b-and-b)
└   t = 0.5264641
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 522
│   lb = 2.6763925484966613
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 734
└   length(nodes) = 1469
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155344
└   sum(fire_plans.plans_per_fire) = 59486
┌ Info: Time check
└   time() - start_time = 1501.99799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 523
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314169
┌ Info: Price and cut time (b-and-b)
└   t = 0.793627
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 523
│   lb = 2.6763928445434804
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 735
└   length(nodes) = 1471
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155407
└   sum(fire_plans.plans_per_fire) = 59512
┌ Info: Time check
└   time() - start_time = 1502.8389999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1132
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334848
┌ Info: Price and cut time (b-and-b)
└   t = 1.4825076
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1132
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   0  17  3  0  0
│     0   0   0  3  3  3  6  6  10   1   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  6  0  0  0  0   0   0   0  0  0  0
│     0   0   0  7  9  9  9  9   6  12   1  0  0  0
└     6   1   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6759749
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1922131
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   1  18  4  1  1
│      1   1   1  4   4   4   7   7  11   2   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  7   1   1   1   1   1   1   1  1  1  1
│      1   1   1  8  10  10  10  10   7  13   2  1  1  1
└      7   2   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1893591
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2114252
│   obj = 2.732516344329671
└   obj_bound = 2.7322506659887438
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  5   5   5   8   8  12   3   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  8   2   2   2   2   2   2   2  2  2  2
│      2   2   2  9  11  11  11  11   8  14   3  2  2  2
└      8   3   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4407887
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.0570303
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1132
│   lb = 2.6763928445434804
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 736
└   length(nodes) = 1473
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156011
└   sum(fire_plans.plans_per_fire) = 59783
┌ Info: Time check
└   time() - start_time = 1510.805999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1133
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0322325
┌ Info: Price and cut time (b-and-b)
└   t = 0.2643161
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1133
│   lb = 2.6763997802278663
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 737
└   length(nodes) = 1475
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156031
└   sum(fire_plans.plans_per_fire) = 59793
┌ Info: Time check
└   time() - start_time = 1511.119999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1442
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027921
┌ Info: Price and cut time (b-and-b)
└   t = 1.3612537
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1442
│   lb = 2.6763997802278663
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 738
└   length(nodes) = 1477
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156144
└   sum(fire_plans.plans_per_fire) = 59845
┌ Info: Time check
└   time() - start_time = 1512.5230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1443
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291865
┌ Info: Price and cut time (b-and-b)
└   t = 0.188427
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1443
│   lb = 2.6764050760630833
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 739
└   length(nodes) = 1479
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156165
└   sum(fire_plans.plans_per_fire) = 59852
┌ Info: Time check
└   time() - start_time = 1512.7579998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1298
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0357772
┌ Info: Price and cut time (b-and-b)
└   t = 1.3860295
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1298
│   lb = 2.6764050760630833
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 740
└   length(nodes) = 1481
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156278
└   sum(fire_plans.plans_per_fire) = 59912
┌ Info: Time check
└   time() - start_time = 1514.1959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1299
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0364024
┌ Info: Price and cut time (b-and-b)
└   t = 0.5918821
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1299
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0  0   0  0   3  15  3  0  0
│      0   0   0   0   0   0  9  12  9   0   0  0  0  0
│     10   1   0   0   0   0  0   0  0   0   0  0  0  0
│      5  19  20   6   0   0  0   0  0   0   0  1  0  0
│      0   0   0  10  12  11  6   3  6  11   2  0  0  0
└      6   0   1   0   1   0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.536176
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.235784
│   obj = 2.732516344329671
└   obj_bound = 2.732304672960893
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   4  16  4  1  1
│      1   1   1   1   1   1  10  13  10   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  13  12   7   4   7  12   3  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5908707
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5595422
│   obj = 2.7325163443296705
└   obj_bound = 2.7322465235724174
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   5  17  5  2  2
│      2   2   2   2   2   2  11  14  11   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  14  13   8   5   8  13   4  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8605518
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7621085
│   obj = 2.732516344329671
└   obj_bound = 2.7325163443296705
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1299
│   lb = 2.6764061238342585
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 741
└   length(nodes) = 1483
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156671
└   sum(fire_plans.plans_per_fire) = 60142
┌ Info: Time check
└   time() - start_time = 1520.0539999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1098
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029065
┌ Info: Price and cut time (b-and-b)
└   t = 0.5405127
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1098
│   lb = 2.6764061238342585
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 742
└   length(nodes) = 1485
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156706
└   sum(fire_plans.plans_per_fire) = 60158
┌ Info: Time check
└   time() - start_time = 1520.638000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1099
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030316
┌ Info: Price and cut time (b-and-b)
└   t = 1.0973671
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1099
│   lb = 2.676412680874069
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 743
└   length(nodes) = 1487
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156813
└   sum(fire_plans.plans_per_fire) = 60201
┌ Info: Time check
└   time() - start_time = 1521.7789998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1468
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314976
┌ Info: Price and cut time (b-and-b)
└   t = 1.3198563
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1468
│   lb = 2.676412680874069
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 744
└   length(nodes) = 1489
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156892
└   sum(fire_plans.plans_per_fire) = 60242
┌ Info: Time check
└   time() - start_time = 1523.1459999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1469
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308789
┌ Info: Price and cut time (b-and-b)
└   t = 1.3104297
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1469
│   lb = 2.6764237288239254
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 745
└   length(nodes) = 1491
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157010
└   sum(fire_plans.plans_per_fire) = 60275
┌ Info: Time check
└   time() - start_time = 1524.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 780
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269108
┌ Info: Price and cut time (b-and-b)
└   t = 0.7906681
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 780
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0  0  0  0   1  17  3  0  0
│     0   0   0  5   0  5  6  6  9   0   0  0  0  0
│     9   2   0  0   0  0  0  0  0   0   0  0  0  0
│     6  18  20  5   0  0  0  0  0   0   0  1  0  0
│     0   0   0  6  12  6  9  9  6  13   0  0  0  0
└     6   0   1  0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3722733
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1647192
│   obj = 2.732516344329671
└   obj_bound = 2.7323180554486783
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  6   1  6   7   7  10   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  7  13  7  10  10   7  14   1  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2242673
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4135881
│   obj = 2.732516344329671
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  7   2  7   8   8  11   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  8  14  8  11  11   8  15   2  2  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7867569
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6408477
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 780
│   lb = 2.6764237288239254
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 746
└   length(nodes) = 1493
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157571
└   sum(fire_plans.plans_per_fire) = 60480
┌ Info: Time check
└   time() - start_time = 1529.539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 781
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0341336
┌ Info: Price and cut time (b-and-b)
└   t = 1.7717959
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 781
│   lb = 2.676430881781366
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 747
└   length(nodes) = 1495
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157793
└   sum(fire_plans.plans_per_fire) = 60554
┌ Info: Time check
└   time() - start_time = 1531.3609998226166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 338
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319551
┌ Info: Price and cut time (b-and-b)
└   t = 0.8182241
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 338
│   lb = 2.676430881781366
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 748
└   length(nodes) = 1497
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157861
└   sum(fire_plans.plans_per_fire) = 60583
┌ Info: Time check
└   time() - start_time = 1532.2259998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 339
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262701
┌ Info: Price and cut time (b-and-b)
└   t = 1.0157436
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 339
│   lb = 2.676432416079103
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 749
└   length(nodes) = 1499
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157953
└   sum(fire_plans.plans_per_fire) = 60625
┌ Info: Time check
└   time() - start_time = 1533.2819998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 826
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332532
┌ Info: Price and cut time (b-and-b)
└   t = 1.4325232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 826
│   lb = 2.676432416079103
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 750
└   length(nodes) = 1501
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158120
└   sum(fire_plans.plans_per_fire) = 60676
┌ Info: Time check
└   time() - start_time = 1534.766000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 827
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0354742
┌ Info: Price and cut time (b-and-b)
└   t = 0.5269318
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 827
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0   0   0  0  0  0   1  17  3  0  0
│      0   0   0  5   1   1  9  6  9   0   0  0  0  0
│     10   1   0  0   0   0  0  0  0   0   0  0  0  0
│      5  19  20  6   0   0  0  0  0   0   0  1  0  0
│      0   0   0  6  11  11  6  9  6  13   0  1  0  0
└      6   0   1  0   1   0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1181335
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2479024
│   obj = 2.73251634432967
└   obj_bound = 2.732270976279903
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   2  18  4  1  1
│      1   1   1  6   2   2  10   7  10   1   1  1  1  1
│     11   2   1  1   1   1   1   1   1   1   1  1  1  1
│      6  20  21  7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  7  12  12   7  10   7  14   1  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9079876
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4951417
│   obj = 2.732516344329671
└   obj_bound = 2.7325153149433445
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  7   3   3  11   8  11   2   2  2  2  2
│     12   3   2  2   2   2   2   2   2   2   2  2  2  2
│      7  21  22  8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  8  13  13   8  11   8  15   2  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8326448
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6143836
│   obj = 2.7325163443296705
└   obj_bound = 2.732273601361233
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.73251634432967
┌ Info: current bounds
│   node_ix = 827
│   lb = 2.6764338225641637
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 751
└   length(nodes) = 1503
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158715
└   sum(fire_plans.plans_per_fire) = 60905
┌ Info: Time check
└   time() - start_time = 1541.0989999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1198
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230652
┌ Info: Price and cut time (b-and-b)
└   t = 0.5647032
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1198
│   lb = 2.6764338225641637
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 752
└   length(nodes) = 1505
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158807
└   sum(fire_plans.plans_per_fire) = 60924
┌ Info: Time check
└   time() - start_time = 1541.7019999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1199
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266244
┌ Info: Price and cut time (b-and-b)
└   t = 0.9145464
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1199
│   lb = 2.6764346028954416
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 753
└   length(nodes) = 1507
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158958
└   sum(fire_plans.plans_per_fire) = 60961
┌ Info: Time check
└   time() - start_time = 1542.6569998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1430
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314552
┌ Info: Price and cut time (b-and-b)
└   t = 1.5287992
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1430
│   lb = 2.6764346028954416
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 754
└   length(nodes) = 1509
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159047
└   sum(fire_plans.plans_per_fire) = 61018
┌ Info: Time check
└   time() - start_time = 1544.231999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1431
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0350075
┌ Info: Price and cut time (b-and-b)
└   t = 0.2042408
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1431
│   lb = 2.676435401816752
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 755
└   length(nodes) = 1511
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159067
└   sum(fire_plans.plans_per_fire) = 61025
┌ Info: Time check
└   time() - start_time = 1544.4879999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1496
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306599
┌ Info: Price and cut time (b-and-b)
└   t = 0.6095072
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1496
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0  0   1  17  3  0  0
│     0   0   0  8  3  6   4  6  6   0   0  0  0  0
│     9   2   0  0  0  0   0  0  0   0   0  0  0  0
│     6  18  20  5  0  0   0  0  0   0   0  1  0  0
│     0   0   0  3  9  6  12  9  9  13   0  0  0  0
└     6   0   1  0  1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5761098
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1538879
│   obj = 2.732516344329671
└   obj_bound = 2.732516344329671
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  9   4  7   5   7   7   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  4  10  7  13  10  10  14   1  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1061491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4157548
│   obj = 2.73251634432967
└   obj_bound = 2.732263155625597
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  10   5  8   6   8   8   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2   5  11  8  14  11  11  15   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5913366
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4566559
│   obj = 2.7325163443296705
└   obj_bound = 2.7324941633831874
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1496
│   lb = 2.676435401816752
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 756
└   length(nodes) = 1513
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159459
└   sum(fire_plans.plans_per_fire) = 61231
┌ Info: Time check
└   time() - start_time = 1549.005999803543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1497
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283721
┌ Info: Price and cut time (b-and-b)
└   t = 1.2627917
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1497
│   lb = 2.6764395046209155
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 757
└   length(nodes) = 1515
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159560
└   sum(fire_plans.plans_per_fire) = 61268
┌ Info: Time check
└   time() - start_time = 1550.3139998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1246
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1022403
┌ Info: Price and cut time (b-and-b)
└   t = 0.8015177
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1246
│   lb = 2.6764395046209155
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 758
└   length(nodes) = 1517
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159684
└   sum(fire_plans.plans_per_fire) = 61302
┌ Info: Time check
└   time() - start_time = 1551.2329998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1247
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332216
┌ Info: Price and cut time (b-and-b)
└   t = 0.9565592
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1247
│   lb = 2.676441788304867
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 759
└   length(nodes) = 1519
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159792
└   sum(fire_plans.plans_per_fire) = 61339
┌ Info: Time check
└   time() - start_time = 1552.2379999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1172
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284993
┌ Info: Price and cut time (b-and-b)
└   t = 1.5712697
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1172
│   lb = 2.676441788304867
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 760
└   length(nodes) = 1521
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159919
└   sum(fire_plans.plans_per_fire) = 61382
┌ Info: Time check
└   time() - start_time = 1553.8599998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1173
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0366207
┌ Info: Price and cut time (b-and-b)
└   t = 0.2656741
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1173
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0   0   2  17  3  0  0
│      0   0   0   1   3  9  9  6   3   0   0  0  0  0
│     10   1   0   0   0  0  0  0   0   0   0  0  0  0
│      5  19  20   6   0  0  0  0   0   0   0  1  0  0
│      0   0   0  10  10  2  6  9  12  12   1  0  0  0
└      6   0   1   0   1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3499186
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3603516
│   obj = 2.7325163443296705
└   obj_bound = 2.7322682379194583
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   3  18  4  1  1
│      1   1   1   2   4  10  10   7   4   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  11   3   7  10  13  13   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3532126
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4809107
│   obj = 2.7325163443296705
└   obj_bound = 2.7324407672471125
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   4  19  5  2  2
│      2   2   2   3   5  11  11   8   5   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  12   4   8  11  14  14   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5864595
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.8350415
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1173
│   lb = 2.6764448109870767
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 761
└   length(nodes) = 1523
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160399
└   sum(fire_plans.plans_per_fire) = 61563
┌ Info: Time check
└   time() - start_time = 1559.6579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1336
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0543102
┌ Info: Price and cut time (b-and-b)
└   t = 1.0239762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1336
│   lb = 2.6764448109870767
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 762
└   length(nodes) = 1525
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160456
└   sum(fire_plans.plans_per_fire) = 61592
┌ Info: Time check
└   time() - start_time = 1560.7519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1337
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294643
┌ Info: Price and cut time (b-and-b)
└   t = 1.6157564
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1337
│   lb = 2.6764526697186257
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 763
└   length(nodes) = 1527
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160591
└   sum(fire_plans.plans_per_fire) = 61647
┌ Info: Time check
└   time() - start_time = 1562.4140000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1352
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254709
┌ Info: Price and cut time (b-and-b)
└   t = 1.0136395
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1352
│   lb = 2.6764526697186257
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 764
└   length(nodes) = 1529
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160715
└   sum(fire_plans.plans_per_fire) = 61684
┌ Info: Time check
└   time() - start_time = 1563.468999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1353
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024632
┌ Info: Price and cut time (b-and-b)
└   t = 1.0389985
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1353
│   lb = 2.6764543952402082
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 765
└   length(nodes) = 1531
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160915
└   sum(fire_plans.plans_per_fire) = 61726
┌ Info: Time check
└   time() - start_time = 1564.5579998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1222
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270481
┌ Info: Price and cut time (b-and-b)
└   t = 1.5397046
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1222
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  6  3  6  6  9   1   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  7  0  0  0  0   0   0   0  1  0  0
│     0   0   0  3  9  5  9  6  15  14   0  1  0  0
└     6   1   1  0  1  1  0  0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.57934
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1996781
│   obj = 2.732516344329671
└   obj_bound = 2.7322740093296556
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   2  18  4  1  1
│      1   1   1  7   4  7   7  10   2   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  19  21  8   1  1   1   1   1   1   1  2  1  1
│      1   1   1  4  10  6  10   7  16  15   1  2  1  1
└      7   2   2  1   2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0991833
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9264967
│   obj = 2.73251634432967
└   obj_bound = 2.732281795133368
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   3  19  5  2  2
│      2   2   2  8   5  8   8  11   3   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  9   2  2   2   2   2   2   2  3  2  2
│      2   2   2  5  11  7  11   8  17  16   2  3  2  2
└      8   3   3  2   3  3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5129501
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7197572
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1222
│   lb = 2.6764543952402082
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 766
└   length(nodes) = 1533
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161498
└   sum(fire_plans.plans_per_fire) = 61942
┌ Info: Time check
└   time() - start_time = 1570.816999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1223
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284184
┌ Info: Price and cut time (b-and-b)
└   t = 0.3585978
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1223
│   lb = 2.6764555909328718
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 767
└   length(nodes) = 1535
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161536
└   sum(fire_plans.plans_per_fire) = 61951
┌ Info: Time check
└   time() - start_time = 1571.2200000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 314
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027551
┌ Info: Price and cut time (b-and-b)
└   t = 0.8120736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 314
│   lb = 2.6764555909328718
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 768
└   length(nodes) = 1537
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161620
└   sum(fire_plans.plans_per_fire) = 61975
┌ Info: Time check
└   time() - start_time = 1572.0739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 315
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309275
┌ Info: Price and cut time (b-and-b)
└   t = 1.3150426
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 315
│   lb = 2.67645667734873
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 769
└   length(nodes) = 1539
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161799
└   sum(fire_plans.plans_per_fire) = 62031
┌ Info: Time check
└   time() - start_time = 1573.4349999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1216
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242784
┌ Info: Price and cut time (b-and-b)
└   t = 1.3658329
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1216
│   lb = 2.67645667734873
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 770
└   length(nodes) = 1541
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161888
└   sum(fire_plans.plans_per_fire) = 62083
┌ Info: Time check
└   time() - start_time = 1574.84099984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1217
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.036414
┌ Info: Price and cut time (b-and-b)
└   t = 0.3427319
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1217
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0   0  0   1  17  3  0  0
│      0   0   0   0   2   2   6  12  9   0   0  0  0  0
│     10   1   0   0   0   0   0   0  0   0   0  0  0  0
│      5  19  20   6   0   0   0   0  0   0   0  1  0  0
│      0   0   0  10  11  10  10   4  6  12   1  1  0  0
└      6   0   1   0   1   0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6672571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1899871
│   obj = 2.732516344329671
└   obj_bound = 2.7322467725477013
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1   1   3   3   7  13  10   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  12  11  11   5   7  13   2  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4998362
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5120501
│   obj = 2.732516344329671
└   obj_bound = 2.7322690671486582
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   2   4   4   8  14  11   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  13  12  12   6   8  14   3  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.060357
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5488618
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1217
│   lb = 2.676458133862707
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 771
└   length(nodes) = 1543
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162391
└   sum(fire_plans.plans_per_fire) = 62323
┌ Info: Time check
└   time() - start_time = 1580.3249998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1082
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221361
┌ Info: Price and cut time (b-and-b)
└   t = 0.5175602
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1082
│   lb = 2.676458133862707
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 772
└   length(nodes) = 1545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162471
└   sum(fire_plans.plans_per_fire) = 62341
┌ Info: Time check
└   time() - start_time = 1580.8789999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1083
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265804
┌ Info: Price and cut time (b-and-b)
└   t = 1.595159
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1083
│   lb = 2.6764612168189945
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 773
└   length(nodes) = 1547
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162613
└   sum(fire_plans.plans_per_fire) = 62398
┌ Info: Time check
└   time() - start_time = 1582.5169999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 610
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024419
┌ Info: Price and cut time (b-and-b)
└   t = 0.8891744
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 610
│   lb = 2.6764612168189945
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 774
└   length(nodes) = 1549
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162718
└   sum(fire_plans.plans_per_fire) = 62424
┌ Info: Time check
└   time() - start_time = 1583.4449999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 611
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256123
┌ Info: Price and cut time (b-and-b)
└   t = 1.3507726
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 611
│   lb = 2.676462696008131
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 775
└   length(nodes) = 1551
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162848
└   sum(fire_plans.plans_per_fire) = 62461
┌ Info: Time check
└   time() - start_time = 1584.8359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1126
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277247
┌ Info: Price and cut time (b-and-b)
└   t = 1.3517141
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1126
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   3  14  4  0  0
│     0   0   0  6  9  9  7   0   0   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  7  0  0  0   0   0   0   0  0  0  0
│     0   0   0  3  3  3  9  15  15  11   4  0  0  0
└     6   1   1  0  1  1  0   0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5289395
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1775941
│   obj = 2.7325163443296705
└   obj_bound = 2.732253039125126
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   4  15  5  1  1
│      1   1   1  7  10  10   8   1   1   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  8   1   1   1   1   1   1   1  1  1  1
│      1   1   1  4   4   4  10  16  16  12   5  1  1  1
└      7   2   2  1   2   2   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4286247
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3945761
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   5  16  6  2  2
│      2   2   2  8  11  11   9   2   2   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  9   2   2   2   2   2   2   2  2  2  2
│      2   2   2  5   5   5  11  17  17  13   6  2  2  2
└      8   3   3  2   3   3   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1957773
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 2.7675573
│   obj = 2.7325163443296705
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 1126
│   lb = 2.676462696008131
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 776
└   length(nodes) = 1553
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163380
└   sum(fire_plans.plans_per_fire) = 62719
┌ Info: Time check
└   time() - start_time = 1593.2289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1127
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290696
┌ Info: Price and cut time (b-and-b)
└   t = 0.1924153
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1127
│   lb = 2.676463200640565
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 777
└   length(nodes) = 1555
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163401
└   sum(fire_plans.plans_per_fire) = 62726
┌ Info: Time check
└   time() - start_time = 1593.4670000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 530
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251208
┌ Info: Price and cut time (b-and-b)
└   t = 0.5233246
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 530
│   lb = 2.676463200640565
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 778
└   length(nodes) = 1557
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163466
└   sum(fire_plans.plans_per_fire) = 62744
┌ Info: Time check
└   time() - start_time = 1594.0299999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 531
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263598
┌ Info: Price and cut time (b-and-b)
└   t = 0.8567944
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 531
│   lb = 2.6764651237619996
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 779
└   length(nodes) = 1559
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163576
└   sum(fire_plans.plans_per_fire) = 62779
┌ Info: Time check
└   time() - start_time = 1594.9299998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1168
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287312
┌ Info: Price and cut time (b-and-b)
└   t = 0.6805991
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1168
│   lb = 2.6764651237619996
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 780
└   length(nodes) = 1561
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163630
└   sum(fire_plans.plans_per_fire) = 62799
┌ Info: Time check
└   time() - start_time = 1595.6559998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1169
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290027
┌ Info: Price and cut time (b-and-b)
└   t = 1.062237
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1169
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0   0  17  3  0  0
│     0   0   0  3  6  2  9  10   1   0   0  0  0  0
│     9   2   0  0  0  0  0   0   0   0   0  0  0  0
│     6  18  20  7  0  0  0   0   0   0   0  1  0  0
│     0   0   0  7  6  9  7   5  15  14   0  1  0  0
└     6   0   1  0  1  0  0   0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5789529
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1342754
│   obj = 2.732516344329671
└   obj_bound = 2.73243354432967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   1  18  4  1  1
│      1   1   1  4  7   3  10  11   2   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  8  1   1   1   1   1   1   1  2  1  1
│      1   1   1  8  7  10   8   6  16  15   1  2  1  1
└      7   1   2  1  2   1   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3411197
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.448739
│   obj = 2.73251634432967
└   obj_bound = 2.7322482674384805
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   2  19  5  2  2
│      2   2   2  5  8   4  11  12   3   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  9  2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  8  11   9   7  17  16   2  3  2  2
└      8   2   3  2  3   2   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4703629
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5298413
│   obj = 2.7325163443296705
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732516344329671
┌ Info: current bounds
│   node_ix = 1169
│   lb = 2.6764671788120054
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 781
└   length(nodes) = 1563
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164223
└   sum(fire_plans.plans_per_fire) = 63003
┌ Info: Time check
└   time() - start_time = 1600.9639999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 874
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256565
┌ Info: Price and cut time (b-and-b)
└   t = 0.5010487
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 874
│   lb = 2.6764671788120054
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 782
└   length(nodes) = 1565
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164263
└   sum(fire_plans.plans_per_fire) = 63022
┌ Info: Time check
└   time() - start_time = 1601.505999803543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 875
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295889
┌ Info: Price and cut time (b-and-b)
└   t = 1.1962394
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 875
│   lb = 2.6764727566123945
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 783
└   length(nodes) = 1567
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164396
└   sum(fire_plans.plans_per_fire) = 63072
┌ Info: Time check
└   time() - start_time = 1602.74799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1162
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1192705
┌ Info: Price and cut time (b-and-b)
└   t = 1.621715
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1162
│   lb = 2.6764727566123945
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 784
└   length(nodes) = 1569
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164574
└   sum(fire_plans.plans_per_fire) = 63139
┌ Info: Time check
└   time() - start_time = 1604.5069999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1163
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314566
┌ Info: Price and cut time (b-and-b)
└   t = 0.2458825
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1163
│   lb = 2.6764793317101976
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 785
└   length(nodes) = 1571
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164599
└   sum(fire_plans.plans_per_fire) = 63149
┌ Info: Time check
└   time() - start_time = 1604.8019998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 688
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290237
┌ Info: Price and cut time (b-and-b)
└   t = 0.9168655
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 688
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0  1  1   1  18  3  0  0
│     0   0   0  6   0  6   6  6  6   0   0  0  0  0
│     9   2   0  0   0  0   0  0  0   0   0  0  0  0
│     6  19  20  5   0  0   0  0  0   0   0  1  0  0
│     0   0   0  5  12  5  10  9  9  13   0  0  0  0
└     6   0   1  0   1  0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4510419
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.119457
│   obj = 2.7325163443296705
└   obj_bound = 2.7325163443296705
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   2   2   2  19  4  1  1
│      1   1   1  7   1  7   7   7   7   1   1  1  1  1
│     10   3   1  1   1  1   1   1   1   1   1  1  1  1
│      7  20  21  6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  6  13  6  11  10  10  14   1  1  1  1
└      7   1   2  1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0404261
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2796173
│   obj = 2.7325163443296705
└   obj_bound = 2.7322787001929223
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   3   3   3  20  5  2  2
│      2   2   2  8   2  8   8   8   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  21  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  7  14  7  12  11  11  15   2  2  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9895074
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3708365
│   obj = 2.73251634432967
└   obj_bound = 2.73251634432967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7325163443296705
┌ Info: current bounds
│   node_ix = 688
│   lb = 2.6764793317101976
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 786
└   length(nodes) = 1573
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164971
└   sum(fire_plans.plans_per_fire) = 63367
┌ Info: Time check
└   time() - start_time = 1609.534999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 689
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245155
┌ Info: Price and cut time (b-and-b)
└   t = 1.1582073
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 689
│   lb = 2.6764822509890225
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 787
└   length(nodes) = 1575
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165110
└   sum(fire_plans.plans_per_fire) = 63403
┌ Info: Time check
└   time() - start_time = 1610.733999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1484
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298779
┌ Info: Price and cut time (b-and-b)
└   t = 0.9516232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1484
│   lb = 2.6764822509890225
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 788
└   length(nodes) = 1577
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165208
└   sum(fire_plans.plans_per_fire) = 63447
┌ Info: Time check
└   time() - start_time = 1611.7300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1485
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262856
┌ Info: Price and cut time (b-and-b)
└   t = 1.2917256
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1485
│   lb = 2.676482285353273
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 789
└   length(nodes) = 1579
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165440
└   sum(fire_plans.plans_per_fire) = 63496
┌ Info: Time check
└   time() - start_time = 1613.0649998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1204
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026257
┌ Info: Price and cut time (b-and-b)
└   t = 0.8163671
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1204
│   lb = 2.676482285353273
└   ub = 2.73251634432967
┌ Info: number of nodes
│   node_explored_count = 790
└   length(nodes) = 1581
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165522
└   sum(fire_plans.plans_per_fire) = 63521
┌ Info: Time check
└   time() - start_time = 1613.9229998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1205
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272049
┌ Info: Price and cut time (b-and-b)
└   t = 0.6743043
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1205
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   1   1   2  18  2  0  0
│     0   0   0   0   0  7  10  10   4   0   0  0  0  0
│     9   2   0   0   0  0   0   0   0   0   0  0  0  0
│     6  18  20   3   0  0   0   0   0   0   0  1  0  0
│     0   0   0  13  12  5   6   6  12  11   0  0  0  0
└     6   0   1   0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7397543
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0642797
│   obj = 2.7325163443296705
└   obj_bound = 2.7323460027374256
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   2   2   3  19  3  1  1
│      1   1   1   1   1  8  11  11   5   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   4   1  1   1   1   1   1   1  2  1  1
│      1   1   1  14  13  6   7   7  13  12   1  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2876384
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3542281
│   obj = 2.732516344329671
└   obj_bound = 2.7322527754006987
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   3   3   4  20  4  2  2
│      2   2   2   2   2  9  12  12   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   5   2  2   2   2   2   2   2  3  2  2
│      2   2   2  15  14  7   8   8  14  13   2  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9694368
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4146091
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   4   4   5  21  5  3  3
│      3   3   3   3   3  10  13  13   7   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   6   3   3   3   3   3   3   3  4  3  3
│      3   3   3  16  15   8   9   9  15  14   3  3  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6994127
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.8429
│   obj = 2.732408546027834
└   obj_bound = 2.7322390780971033
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   5   5   6  22  6  4  4
│      4   4   4   4   4  11  14  14   8   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   7   4   4   4   4   4   4   4  5  4  4
│      4   4   4  17  16   9  10  10  16  15   4  4  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6765422
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.7365233
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 1205
│   lb = 2.6764848112175983
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 791
└   length(nodes) = 1583
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166236
└   sum(fire_plans.plans_per_fire) = 63830
┌ Info: Time check
└   time() - start_time = 1624.2909998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1432
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279189
┌ Info: Price and cut time (b-and-b)
└   t = 0.6874046
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1432
│   lb = 2.6764848112175983
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 792
└   length(nodes) = 1585
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166388
└   sum(fire_plans.plans_per_fire) = 63865
┌ Info: Time check
└   time() - start_time = 1625.021999835968
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1433
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304979
┌ Info: Price and cut time (b-and-b)
└   t = 1.3815416
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1433
│   lb = 2.676506128841775
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 793
└   length(nodes) = 1587
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166432
└   sum(fire_plans.plans_per_fire) = 63920
┌ Info: Time check
└   time() - start_time = 1626.4499998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 700
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302898
┌ Info: Price and cut time (b-and-b)
└   t = 1.4011985
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 700
│   lb = 2.676506128841775
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 794
└   length(nodes) = 1589
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166568
└   sum(fire_plans.plans_per_fire) = 63979
┌ Info: Time check
└   time() - start_time = 1627.9039998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 701
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278812
┌ Info: Price and cut time (b-and-b)
└   t = 0.9415948
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 701
│   lb = 2.676506128841775
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 795
└   length(nodes) = 1591
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166667
└   sum(fire_plans.plans_per_fire) = 64015
┌ Info: Time check
└   time() - start_time = 1628.891000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1590
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324318
┌ Info: Price and cut time (b-and-b)
└   t = 0.3248455
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1590
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0  0   1  17  3  0  0
│     0   0   0  2  6  8  6   3  6   0   0  0  0  0
│     9   2   0  0  0  0  0   0  0   0   0  0  0  0
│     6  18  20  5  0  0  0   0  0   0   0  1  0  0
│     0   0   0  9  6  3  9  12  9  13   0  0  0  0
└     6   0   1  0  1  0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5476762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1290869
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1   3  7  9   7   4   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  7  4  10  13  10  14   1  1  1  1
└      7   1   2   1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4988839
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3783344
│   obj = 2.7324085460278345
└   obj_bound = 2.73232674145271
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2   4  8  10   8   5   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  11  8   5  11  14  11  15   2  2  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9184335
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.104812
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 1590
│   lb = 2.676506128841775
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 796
└   length(nodes) = 1593
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167171
└   sum(fire_plans.plans_per_fire) = 64221
┌ Info: Time check
└   time() - start_time = 1634.361999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1591
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298953
┌ Info: Price and cut time (b-and-b)
└   t = 0.8870468
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1591
│   lb = 2.6765124586938027
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 797
└   length(nodes) = 1595
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167297
└   sum(fire_plans.plans_per_fire) = 64257
┌ Info: Time check
└   time() - start_time = 1635.2969999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1572
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246671
┌ Info: Price and cut time (b-and-b)
└   t = 1.4942234
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1572
│   lb = 2.6765124586938027
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 798
└   length(nodes) = 1597
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167418
└   sum(fire_plans.plans_per_fire) = 64336
┌ Info: Time check
└   time() - start_time = 1636.8309998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1573
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247832
┌ Info: Price and cut time (b-and-b)
└   t = 0.458998
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1573
│   lb = 2.676518048219252
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 799
└   length(nodes) = 1599
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167438
└   sum(fire_plans.plans_per_fire) = 64347
┌ Info: Time check
└   time() - start_time = 1637.329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 658
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029142
┌ Info: Price and cut time (b-and-b)
└   t = 0.9622455
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 658
│   lb = 2.676518048219252
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 800
└   length(nodes) = 1601
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167533
└   sum(fire_plans.plans_per_fire) = 64374
┌ Info: Time check
└   time() - start_time = 1638.4039998054504
┌ Info: Exploring node
└   branch_and_bound_node.ix = 659
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238774
┌ Info: Price and cut time (b-and-b)
└   t = 1.2297907
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 659
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   2  17  2  0  0
│     0   0   0  6  6  9   6   3   1   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  3  0  0   0   0   0   0   0  1  0  0
│     0   0   0  7  6  3  10  13  15  11   0  0  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6230254
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1246151
│   obj = 2.732408546027834
└   obj_bound = 2.7322720097967674
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   3  18  3  1  1
│      1   1   1  7  7  10   7   4   2   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  4  1   1   1   1   1   1   1  2  1  1
│      1   1   1  8  7   4  11  14  16  12   1  1  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6234598
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3123323
│   obj = 2.732408546027834
└   obj_bound = 2.7321406315098162
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   4  19  4  2  2
│      2   2   2  8  8  11   8   5   3   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  5  2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  8   5  12  15  17  13   2  2  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8071923
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3497903
│   obj = 2.732408546027834
└   obj_bound = 2.7321748114913698
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 659
│   lb = 2.6765288183985936
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 801
└   length(nodes) = 1603
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167926
└   sum(fire_plans.plans_per_fire) = 64600
┌ Info: Time check
└   time() - start_time = 1644.0679998397827
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1022
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249785
┌ Info: Price and cut time (b-and-b)
└   t = 1.3074368
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1022
│   lb = 2.6765288183985936
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 802
└   length(nodes) = 1605
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168003
└   sum(fire_plans.plans_per_fire) = 64658
┌ Info: Time check
└   time() - start_time = 1645.4159998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1023
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296278
┌ Info: Price and cut time (b-and-b)
└   t = 0.4264589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1023
│   lb = 2.6765299654471124
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 803
└   length(nodes) = 1607
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168058
└   sum(fire_plans.plans_per_fire) = 64670
┌ Info: Time check
└   time() - start_time = 1645.8899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1492
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266906
┌ Info: Price and cut time (b-and-b)
└   t = 1.0771258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1492
│   lb = 2.6765299654471124
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 804
└   length(nodes) = 1609
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168156
└   sum(fire_plans.plans_per_fire) = 64719
┌ Info: Time check
└   time() - start_time = 1647.0079998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1493
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288166
┌ Info: Price and cut time (b-and-b)
└   t = 1.2362721
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1493
│   lb = 2.6765366778259763
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 805
└   length(nodes) = 1611
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168387
└   sum(fire_plans.plans_per_fire) = 64782
┌ Info: Time check
└   time() - start_time = 1648.2890000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1404
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269995
┌ Info: Price and cut time (b-and-b)
└   t = 1.109822
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1404
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0   0   0   0  17  3  0  0
│     0   0   0  7  10  9   3   0   4   0   0  0  0  0
│     9   2   0  0   0  0   0   0   0   0   0  0  0  0
│     6  18  20  7   0  0   0   0   0   0   0  1  0  0
│     0   0   0  3   3  3  13  15  12  13   1  1  0  0
└     6   0   1  0   1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5222111
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1364752
│   obj = 2.732408546027834
└   obj_bound = 2.7321432215754937
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   1  18  4  1  1
│      1   1   1  8  11  10   4   1   5   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  8   1   1   1   1   1   1   1  2  1  1
│      1   1   1  4   4   4  14  16  13  14   2  2  1  1
└      7   1   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3329812
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8027211
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  9  12  11   5   2   6   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  9   2   2   2   2   2   2   2  3  2  2
│      2   2   2  5   5   5  15  17  14  15   3  3  2  2
└      8   2   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8209456
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5399149
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 1404
│   lb = 2.6765366778259763
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 806
└   length(nodes) = 1613
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168940
└   sum(fire_plans.plans_per_fire) = 65020
┌ Info: Time check
└   time() - start_time = 1654.1949999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1405
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258731
┌ Info: Price and cut time (b-and-b)
└   t = 0.8775759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1405
│   lb = 2.6765418771245786
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 807
└   length(nodes) = 1615
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169035
└   sum(fire_plans.plans_per_fire) = 65050
┌ Info: Time check
└   time() - start_time = 1655.1150000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1564
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264053
┌ Info: Price and cut time (b-and-b)
└   t = 1.2744625
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1564
│   lb = 2.6765418771245786
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 808
└   length(nodes) = 1617
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169166
└   sum(fire_plans.plans_per_fire) = 65107
┌ Info: Time check
└   time() - start_time = 1656.4319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1565
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297868
┌ Info: Price and cut time (b-and-b)
└   t = 0.2339717
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1565
│   lb = 2.676545650744217
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 809
└   length(nodes) = 1619
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169186
└   sum(fire_plans.plans_per_fire) = 65115
┌ Info: Time check
└   time() - start_time = 1656.7129998207092
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1224
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318197
┌ Info: Price and cut time (b-and-b)
└   t = 1.5263979
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1224
│   lb = 2.676545650744217
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 810
└   length(nodes) = 1621
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169283
└   sum(fire_plans.plans_per_fire) = 65173
┌ Info: Time check
└   time() - start_time = 1658.2860000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1225
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264357
┌ Info: Price and cut time (b-and-b)
└   t = 0.2525882
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1225
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0  0   0   0  17  3  0  0
│      0   0   0  9  3  2  6  6   5   0   0  0  0  0
│     10   2   0  0  0  0  0  0   0   0   0  0  0  0
│      5  19  20  6  0  0  0  0   0   0   0  1  0  0
│      0   0   0  0  9  9  9  9  11  13   1  0  0  0
└      6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5043023
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1700754
│   obj = 2.732408546027834
└   obj_bound = 2.732139970796042
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   1  18  4  1  1
│      1   1   1  10   4   3   7   7   6   1   1  1  1  1
│     11   3   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1   1  10  10  10  10  12  14   2  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2749205
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4513598
│   obj = 2.732408546027834
└   obj_bound = 2.7323908785682454
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  19  5  2  2
│      2   2   2  11   5   4   8   8   7   2   2  2  2  2
│     12   4   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2   2  11  11  11  11  13  15   3  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1168727
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3073285
│   obj = 2.732408546027834
└   obj_bound = 2.7322138090282184
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 1225
│   lb = 2.6765502142079027
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 811
└   length(nodes) = 1623
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169705
└   sum(fire_plans.plans_per_fire) = 65377
┌ Info: Time check
└   time() - start_time = 1662.9179999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1234
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340609
┌ Info: Price and cut time (b-and-b)
└   t = 1.1940561
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1234
│   lb = 2.6765502142079027
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 812
└   length(nodes) = 1625
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169853
└   sum(fire_plans.plans_per_fire) = 65428
┌ Info: Time check
└   time() - start_time = 1664.162999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1235
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283707
┌ Info: Price and cut time (b-and-b)
└   t = 0.3390991
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1235
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 813
└   length(nodes) = 1627
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169891
└   sum(fire_plans.plans_per_fire) = 65439
┌ Info: Time check
└   time() - start_time = 1664.5490000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 858
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281544
┌ Info: Price and cut time (b-and-b)
└   t = 0.518681
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 858
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 814
└   length(nodes) = 1629
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169947
└   sum(fire_plans.plans_per_fire) = 65457
┌ Info: Time check
└   time() - start_time = 1665.1099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 859
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280347
┌ Info: Price and cut time (b-and-b)
└   t = 0.859863
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 859
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 815
└   length(nodes) = 1631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170088
└   sum(fire_plans.plans_per_fire) = 65494
┌ Info: Time check
└   time() - start_time = 1666.013000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1628
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242739
┌ Info: Price and cut time (b-and-b)
└   t = 0.7608488
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1628
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0  0   1  17  3  0  0
│     0   0   0  10  8  2   4   3  7   0   0  0  0  0
│     9   2   0   0  0  0   0   0  0   0   0  0  0  0
│     6  19  20   5  0  0   0   0  0   0   0  1  0  0
│     0   0   0   2  5  9  12  12  9  13   0  0  0  0
└     6   0   1   0  1  0   0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4176198
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1054219
│   obj = 2.732408546027834
└   obj_bound = 2.732408546027834
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  11  9   3   5   4   8   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  20  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1   3  6  10  13  13  10  14   1  1  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0697112
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3244065
│   obj = 2.732408546027834
└   obj_bound = 2.7322913703813407
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  10   4   6   5   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  21  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   4   7  11  14  14  11  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6026306
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3457768
│   obj = 2.732408546027834
└   obj_bound = 2.7321450964513767
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732408546027834
┌ Info: current bounds
│   node_ix = 1628
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 816
└   length(nodes) = 1633
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170547
└   sum(fire_plans.plans_per_fire) = 65710
┌ Info: Time check
└   time() - start_time = 1671.3579998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1629
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0417629
┌ Info: Price and cut time (b-and-b)
└   t = 1.4428518
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1629
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 817
└   length(nodes) = 1635
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170709
└   sum(fire_plans.plans_per_fire) = 65776
┌ Info: Time check
└   time() - start_time = 1672.8579998016357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1632
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261046
┌ Info: Price and cut time (b-and-b)
└   t = 1.2609188
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1632
│   lb = 2.6765510181316294
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 818
└   length(nodes) = 1637
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170852
└   sum(fire_plans.plans_per_fire) = 65831
┌ Info: Time check
└   time() - start_time = 1674.162999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1633
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305862
┌ Info: Price and cut time (b-and-b)
└   t = 0.2823555
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1633
│   lb = 2.676554315262429
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 819
└   length(nodes) = 1639
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170904
└   sum(fire_plans.plans_per_fire) = 65838
┌ Info: Time check
└   time() - start_time = 1674.4930000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1026
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233513
┌ Info: Price and cut time (b-and-b)
└   t = 0.7701114
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1026
│   lb = 2.676554315262429
└   ub = 2.732408546027834
┌ Info: number of nodes
│   node_explored_count = 820
└   length(nodes) = 1641
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170998
└   sum(fire_plans.plans_per_fire) = 65875
┌ Info: Time check
└   time() - start_time = 1675.388000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1027
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328904
┌ Info: Price and cut time (b-and-b)
└   t = 0.945344
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1027
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0   1  17  3  0  0
│     0   0   0   1  9  9  7  7   0   0   0  0  0  0
│     9   2   0   0  0  0  0  0   0   0   0  0  0  0
│     6  19  20   5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  10  3  3  9  9  15  13   0  0  0  0
└     6   0   1   0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4655343
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1287247
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  18  4  1  1
│      1   1   1   2  10  10   8   8   1   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  20  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11   4   4  10  10  16  14   1  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.145735
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3038768
│   obj = 2.7324010097967673
└   obj_bound = 2.732272680240925
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   3  11  11   9   9   2   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  21  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12   5   5  11  11  17  15   2  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9128384
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3937482
│   obj = 2.7324010097967673
└   obj_bound = 2.7322174611350074
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1027
│   lb = 2.676554315262429
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 821
└   length(nodes) = 1643
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171399
└   sum(fire_plans.plans_per_fire) = 66123
┌ Info: Time check
└   time() - start_time = 1680.3029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1642
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332052
┌ Info: Price and cut time (b-and-b)
└   t = 1.4815873
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1642
│   lb = 2.676554315262429
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 822
└   length(nodes) = 1645
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171561
└   sum(fire_plans.plans_per_fire) = 66197
┌ Info: Time check
└   time() - start_time = 1681.8359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1643
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295057
┌ Info: Price and cut time (b-and-b)
└   t = 0.240583
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1643
│   lb = 2.6765583288276398
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 823
└   length(nodes) = 1647
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171596
└   sum(fire_plans.plans_per_fire) = 66206
┌ Info: Time check
└   time() - start_time = 1682.1239998340607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 450
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250798
┌ Info: Price and cut time (b-and-b)
└   t = 0.9852676
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 450
│   lb = 2.6765583288276398
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 824
└   length(nodes) = 1649
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171775
└   sum(fire_plans.plans_per_fire) = 66244
┌ Info: Time check
└   time() - start_time = 1683.148999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 451
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241312
┌ Info: Price and cut time (b-and-b)
└   t = 0.6748112
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 451
│   lb = 2.676563215233634
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 825
└   length(nodes) = 1651
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171870
└   sum(fire_plans.plans_per_fire) = 66264
┌ Info: Time check
└   time() - start_time = 1683.8629999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 556
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025435
┌ Info: Price and cut time (b-and-b)
└   t = 0.8084596
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 556
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0   0  17  3  0  0
│     0   0   0  6  6  8   0   6   5   0   0  0  0  0
│     9   2   0  0  0  0   0   0   0   0   0  0  0  0
│     6  18  20  6  0  0   0   0   0   0   0  1  0  0
│     0   0   0  3  6  3  15  10  11  13   1  1  0  0
└     6   0   1  0  1  0   0   0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5335954
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0692404
│   obj = 2.7324010097967673
└   obj_bound = 2.732135805820335
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  7  9   1   7   6   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  7  1  1   1   1   1   1   1  2  1  1
│      1   1   1  4  7  4  16  11  12  14   2  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2820405
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.422203
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   2  19  5  2  2
│      2   2   2  8  8  10   2   8   7   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  8  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8   5  17  12  13  15   3  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0698542
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5662936
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 556
│   lb = 2.676563215233634
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 826
└   length(nodes) = 1653
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172417
└   sum(fire_plans.plans_per_fire) = 66513
┌ Info: Time check
└   time() - start_time = 1689.3149998188019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 557
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0399911
┌ Info: Price and cut time (b-and-b)
└   t = 0.6715497
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 557
│   lb = 2.676571492567485
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 827
└   length(nodes) = 1655
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172534
└   sum(fire_plans.plans_per_fire) = 66535
┌ Info: Time check
└   time() - start_time = 1690.0429999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 760
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296423
┌ Info: Price and cut time (b-and-b)
└   t = 1.5122634
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 760
│   lb = 2.676571492567485
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 828
└   length(nodes) = 1657
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172667
└   sum(fire_plans.plans_per_fire) = 66590
┌ Info: Time check
└   time() - start_time = 1691.5999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 761
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291522
┌ Info: Price and cut time (b-and-b)
└   t = 0.2324505
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 761
│   lb = 2.6765728155207213
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 829
└   length(nodes) = 1659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172695
└   sum(fire_plans.plans_per_fire) = 66599
┌ Info: Time check
└   time() - start_time = 1691.8829998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1586
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272829
┌ Info: Price and cut time (b-and-b)
└   t = 1.1230968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1586
│   lb = 2.6765728155207213
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 830
└   length(nodes) = 1661
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172811
└   sum(fire_plans.plans_per_fire) = 66642
┌ Info: Time check
└   time() - start_time = 1693.0499999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1587
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261811
┌ Info: Price and cut time (b-and-b)
└   t = 0.4776002
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1587
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0   1  17  3  0  0
│      0   0   0   1   3  6  6  6  9   0   0  0  0  0
│     10   1   0   0   0  0  0  0  0   0   0  0  0  0
│      5  19  20   6   0  0  0  0  0   0   0  1  0  0
│      0   0   0  10  10  5  9  9  6  13   0  1  0  0
└      6   0   1   0   1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4342437
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1792221
│   obj = 2.7324010097967673
└   obj_bound = 2.73214241894667
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1   2   4  7   7   7  10   1   1  1  1  1
│     11   2   1   1   1  1   1   1   1   1   1  1  1  1
│      6  20  21   7   1  1   1   1   1   1   1  2  1  1
│      1   1   1  11  11  6  10  10   7  14   1  2  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.23327
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3648687
│   obj = 2.7324010097967673
└   obj_bound = 2.7322683262276946
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2   3   5  8   8   8  11   2   2  2  2  2
│     12   3   2   2   2  2   2   2   2   2   2  2  2  2
│      7  21  22   8   2  2   2   2   2   2   2  3  2  2
│      2   2   2  12  12  7  11  11   8  15   2  3  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1372325
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3910479
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1587
│   lb = 2.676576339634469
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 831
└   length(nodes) = 1663
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173181
└   sum(fire_plans.plans_per_fire) = 66849
┌ Info: Time check
└   time() - start_time = 1697.968999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 442
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.041653
┌ Info: Price and cut time (b-and-b)
└   t = 0.8128637
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 442
│   lb = 2.676576339634469
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 832
└   length(nodes) = 1665
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173228
└   sum(fire_plans.plans_per_fire) = 66878
┌ Info: Time check
└   time() - start_time = 1698.84099984169
┌ Info: Exploring node
└   branch_and_bound_node.ix = 443
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289649
┌ Info: Price and cut time (b-and-b)
└   t = 1.8150011
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 443
│   lb = 2.676576339634469
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 833
└   length(nodes) = 1667
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173529
└   sum(fire_plans.plans_per_fire) = 66948
┌ Info: Time check
└   time() - start_time = 1700.6999998092651
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1664
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296744
┌ Info: Price and cut time (b-and-b)
└   t = 0.7994258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1664
│   lb = 2.676576339634469
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 834
└   length(nodes) = 1669
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173622
└   sum(fire_plans.plans_per_fire) = 66971
┌ Info: Time check
└   time() - start_time = 1701.5460000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1665
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027492
┌ Info: Price and cut time (b-and-b)
└   t = 0.7846149
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1665
│   lb = 2.6765807585797967
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 835
└   length(nodes) = 1671
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173756
└   sum(fire_plans.plans_per_fire) = 67004
┌ Info: Time check
└   time() - start_time = 1702.3739998340607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1356
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300639
┌ Info: Price and cut time (b-and-b)
└   t = 0.9845247
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1356
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   0  17  3  0  0
│     0   0   0  6  6  3  9  6   0   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  7  0  0  0  0   0   0   0  1  0  0
│     0   0   0  3  6  8  6  9  15  13   1  0  0  0
└     6   0   1  0  1  0  0  0   0   1   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5379313
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1115044
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   1  18  4  1  1
│      1   1   1  7  7  4  10   7   1   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  8  1  1   1   1   1   1   1  2  1  1
│      1   1   1  4  7  9   7  10  16  14   2  1  1  1
└      7   1   2  1  2  1   1   1   1   2   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6013313
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3386877
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   2  19  5  2  2
│      2   2   2  8  8   5  11   8   2   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  9  2   2   2   2   2   2   2  3  2  2
│      2   2   2  5  8  10   8  11  17  15   3  2  2  2
└      8   2   3  2  3   2   2   2   2   3   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0507346
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3565421
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1356
│   lb = 2.6765807585797967
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 836
└   length(nodes) = 1673
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174368
└   sum(fire_plans.plans_per_fire) = 67274
┌ Info: Time check
└   time() - start_time = 1708.0279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1357
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253709
┌ Info: Price and cut time (b-and-b)
└   t = 1.0496194
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1357
│   lb = 2.676581940576534
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 837
└   length(nodes) = 1675
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174497
└   sum(fire_plans.plans_per_fire) = 67315
┌ Info: Time check
└   time() - start_time = 1709.1209998130798
┌ Info: Exploring node
└   branch_and_bound_node.ix = 380
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323133
┌ Info: Price and cut time (b-and-b)
└   t = 1.2127616
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 17, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 18, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 380
│   lb = 2.676581940576534
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 838
└   length(nodes) = 1677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174677
└   sum(fire_plans.plans_per_fire) = 67369
┌ Info: Time check
└   time() - start_time = 1710.380999803543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 381
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286679
┌ Info: Price and cut time (b-and-b)
└   t = 1.243024
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 381
│   lb = 2.6765851359008783
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 839
└   length(nodes) = 1679
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174903
└   sum(fire_plans.plans_per_fire) = 67429
┌ Info: Time check
└   time() - start_time = 1711.6669998168945
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1078
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279632
┌ Info: Price and cut time (b-and-b)
└   t = 0.7376944
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1078
│   lb = 2.6765851359008783
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 840
└   length(nodes) = 1681
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174955
└   sum(fire_plans.plans_per_fire) = 67447
┌ Info: Time check
└   time() - start_time = 1712.4489998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1079
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301132
┌ Info: Price and cut time (b-and-b)
└   t = 0.5258874
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1079
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  18  2  0  0
│     0   0   0  2  9  9   3  6   2   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  9  3  3  12  9  14  13   0  1  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4169456
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1111261
│   obj = 2.7324010097967673
└   obj_bound = 2.732361814371957
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   2  19  3  1  1
│      1   1   1   3  10  10   4   7   3   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      7  19  21   6   1   1   1   1   1   1   1  2  1  1
│      1   1   1  10   4   4  13  10  15  14   1  2  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7779953
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4069585
│   obj = 2.7324010097967673
└   obj_bound = 2.732184284019069
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  20  4  2  2
│      2   2   2   4  11  11   5   8   4   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2  11   5   5  14  11  16  15   2  3  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6532984
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.43451
│   obj = 2.7324010097967673
└   obj_bound = 2.732271508874331
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1079
│   lb = 2.676585200792108
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 841
└   length(nodes) = 1683
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 175429
└   sum(fire_plans.plans_per_fire) = 67669
┌ Info: Time check
└   time() - start_time = 1717.3789999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1294
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0379282
┌ Info: Price and cut time (b-and-b)
└   t = 1.6227803
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1294
│   lb = 2.676585200792108
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 842
└   length(nodes) = 1685
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 175574
└   sum(fire_plans.plans_per_fire) = 67735
┌ Info: Time check
└   time() - start_time = 1719.0569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1295
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308922
┌ Info: Price and cut time (b-and-b)
└   t = 0.2813504
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1295
│   lb = 2.676586696217153
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 843
└   length(nodes) = 1687
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 175594
└   sum(fire_plans.plans_per_fire) = 67744
┌ Info: Time check
└   time() - start_time = 1719.3869998455048
┌ Info: Exploring node
└   branch_and_bound_node.ix = 896
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309793
┌ Info: Price and cut time (b-and-b)
└   t = 0.6517047
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 896
│   lb = 2.676586696217153
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 844
└   length(nodes) = 1689
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 175664
└   sum(fire_plans.plans_per_fire) = 67760
┌ Info: Time check
└   time() - start_time = 1720.0859999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 897
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290109
┌ Info: Price and cut time (b-and-b)
└   t = 1.3963884
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 897
│   lb = 2.676589022922924
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 845
└   length(nodes) = 1691
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 175902
└   sum(fire_plans.plans_per_fire) = 67813
┌ Info: Time check
└   time() - start_time = 1721.5279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 504
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02719
┌ Info: Price and cut time (b-and-b)
└   t = 0.5313907
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 504
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  1   3  15  3  0  0
│     0   0   0  8  3  2  6  6  6   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  3  9  9  9  9  8  11   3  2  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5450275
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.130805
│   obj = 2.7324010097967673
└   obj_bound = 2.7322366881883253
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1  2   4  16  4  1  1
│      1   1   1  9   4   3   7   7  7   1   1  1  1  1
│     10   3   1  1   1   1   1   1  1   1   1  1  1  1
│      7  19  21  6   1   1   1   1  1   1   1  2  1  1
│      1   1   1  4  10  10  10  10  9  12   4  3  1  1
└      7   1   2  1   2   1   1   1  1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1027072
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3646788
│   obj = 2.7324010097967673
└   obj_bound = 2.73238194722
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   3   5  17  5  2  2
│      2   2   2  10   5   4   8   8   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   7   2   2   2   2   2   2   2  3  2  2
│      2   2   2   5  11  11  11  11  10  13   5  4  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5676604
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4733635
│   obj = 2.7324010097967673
└   obj_bound = 2.732366199310634
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 504
│   lb = 2.676589022922924
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 846
└   length(nodes) = 1693
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 176342
└   sum(fire_plans.plans_per_fire) = 68006
┌ Info: Time check
└   time() - start_time = 1725.9069998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 505
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0395755
┌ Info: Price and cut time (b-and-b)
└   t = 1.4111949
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 505
│   lb = 2.676592555033385
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 847
└   length(nodes) = 1695
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 176424
└   sum(fire_plans.plans_per_fire) = 68054
┌ Info: Time check
└   time() - start_time = 1727.3759999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1306
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281941
┌ Info: Price and cut time (b-and-b)
└   t = 0.6841323
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1306
│   lb = 2.676592555033385
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 848
└   length(nodes) = 1697
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 176479
└   sum(fire_plans.plans_per_fire) = 68073
┌ Info: Time check
└   time() - start_time = 1728.1050000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1307
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270272
┌ Info: Price and cut time (b-and-b)
└   t = 1.3189584
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1307
│   lb = 2.67659385352443
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 849
└   length(nodes) = 1699
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 176682
└   sum(fire_plans.plans_per_fire) = 68128
┌ Info: Time check
└   time() - start_time = 1729.4679999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1332
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0329911
┌ Info: Price and cut time (b-and-b)
└   t = 1.3081705
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1332
│   lb = 2.67659385352443
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 850
└   length(nodes) = 1701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 176810
└   sum(fire_plans.plans_per_fire) = 68180
┌ Info: Time check
└   time() - start_time = 1730.8239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1333
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293208
┌ Info: Price and cut time (b-and-b)
└   t = 0.3402097
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1333
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0  0  0   4  15  3  0  0
│      0   0   0   1   2   2  11  9  6   0   0  0  0  0
│     10   1   0   0   0   0   0  0  0   0   0  0  0  0
│      5  19  20   6   0   0   0  0  0   0   0  1  0  0
│      0   0   0  10  10  10   5  7  9  10   3  0  0  0
└      6   0   1   0   1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5479929
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1172558
│   obj = 2.7324010097967673
└   obj_bound = 2.732397381661985
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   5  16  4  1  1
│      1   1   1   2   3   3  12  10   7   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  11  11   6   8  10  11   4  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9963662
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3335602
│   obj = 2.7324010097967673
└   obj_bound = 2.73213723793155
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   6  17  5  2  2
│      2   2   2   3   4   4  13  11   8   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  12  12   7   9  11  12   5  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9127928
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.346254
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1333
│   lb = 2.676596237504618
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 851
└   length(nodes) = 1703
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 177250
└   sum(fire_plans.plans_per_fire) = 68427
┌ Info: Time check
└   time() - start_time = 1736.1459999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 426
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030636
┌ Info: Price and cut time (b-and-b)
└   t = 0.8671584
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 426
│   lb = 2.676596237504618
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 852
└   length(nodes) = 1705
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 177355
└   sum(fire_plans.plans_per_fire) = 68457
┌ Info: Time check
└   time() - start_time = 1737.0609998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 427
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241788
┌ Info: Price and cut time (b-and-b)
└   t = 1.1087603
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 427
│   lb = 2.6765990448903034
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 853
└   length(nodes) = 1707
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 177493
└   sum(fire_plans.plans_per_fire) = 68502
┌ Info: Time check
└   time() - start_time = 1738.2089998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1410
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287501
┌ Info: Price and cut time (b-and-b)
└   t = 1.1462322
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1410
│   lb = 2.6765990448903034
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 854
└   length(nodes) = 1709
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 177590
└   sum(fire_plans.plans_per_fire) = 68553
┌ Info: Time check
└   time() - start_time = 1739.3999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1411
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250361
┌ Info: Price and cut time (b-and-b)
└   t = 0.3031976
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1411
│   lb = 2.6766034541605386
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 855
└   length(nodes) = 1711
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 177640
└   sum(fire_plans.plans_per_fire) = 68563
┌ Info: Time check
└   time() - start_time = 1739.7439999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1330
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311255
┌ Info: Price and cut time (b-and-b)
└   t = 1.1339335
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1330
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0   0  0   0  0   2  15  4  0  0
│     0   0   0  3   0   0  9  10  9   0   0  0  0  0
│     9   2   0  0   0   0  0   0  0   0   0  0  0  0
│     6  18  20  7   0   0  0   0  0   0   0  0  0  0
│     0   0   0  7  12  11  7   6  7  12   3  0  0  0
└     6   1   1  0   1   0  0   0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8508771
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1517138
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1   1   1   1   1   3  16  5  1  1
│      1   1   1  4   1   1  10  11  10   1   1  1  1  1
│     10   3   1  1   1   1   1   1   1   1   1  1  1  1
│      7  19  21  8   1   1   1   1   1   1   1  1  1  1
│      1   1   1  8  13  12   8   7   8  13   4  1  1  1
└      7   2   2  1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2389741
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3090681
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2   2   2   2   2   4  17  6  2  2
│      2   2   2  5   2   2  11  12  11   2   2  2  2  2
│     11   4   2  2   2   2   2   2   2   2   2  2  2  2
│      8  20  22  9   2   2   2   2   2   2   2  2  2  2
│      2   2   2  9  14  13   9   8   9  14   5  2  2  2
└      8   3   3  2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0113241
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.559484
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1330
│   lb = 2.6766034541605386
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 856
└   length(nodes) = 1713
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178132
└   sum(fire_plans.plans_per_fire) = 68839
┌ Info: Time check
└   time() - start_time = 1745.6859998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1331
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0392196
┌ Info: Price and cut time (b-and-b)
└   t = 0.4622755
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1331
│   lb = 2.676603480703385
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 857
└   length(nodes) = 1715
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178191
└   sum(fire_plans.plans_per_fire) = 68852
┌ Info: Time check
└   time() - start_time = 1746.2039999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 994
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225708
┌ Info: Price and cut time (b-and-b)
└   t = 0.8941462
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 994
│   lb = 2.676603480703385
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 858
└   length(nodes) = 1717
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178250
└   sum(fire_plans.plans_per_fire) = 68882
┌ Info: Time check
└   time() - start_time = 1747.2229998111725
┌ Info: Exploring node
└   branch_and_bound_node.ix = 995
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283961
┌ Info: Price and cut time (b-and-b)
└   t = 0.9439251
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 995
│   lb = 2.6766104163356985
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 859
└   length(nodes) = 1719
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178317
└   sum(fire_plans.plans_per_fire) = 68913
┌ Info: Time check
└   time() - start_time = 1748.2109999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1342
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273125
┌ Info: Price and cut time (b-and-b)
└   t = 1.2357948
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1342
│   lb = 2.6766104163356985
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 860
└   length(nodes) = 1721
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178459
└   sum(fire_plans.plans_per_fire) = 68968
┌ Info: Time check
└   time() - start_time = 1749.4889998435974
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1343
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230618
┌ Info: Price and cut time (b-and-b)
└   t = 0.4094921
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 11, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 11, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1343
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0  0  0   0   3  16  3  0  0
│      0   0   0   0   0   0  9  9  12   0   0  0  0  0
│     10   1   0   0   0   0  0  0   0   0   0  0  0  0
│      5  19  20   6   0   0  0  0   0   0   0  1  0  0
│      0   0   0  10  12  11  6  6   3  11   2  0  0  0
└      6   0   1   0   1   0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3179382
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1763994
│   obj = 2.7324010097967673
└   obj_bound = 2.7321872111262637
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   4  17  4  1  1
│      1   1   1   1   1   1  10  10  13   1   1  1  1  1
│     11   2   1   1   1   1   1   1   1   1   1  1  1  1
│      6  20  21   7   1   1   1   1   1   1   1  2  1  1
│      1   1   1  11  13  12   7   7   4  12   3  1  1  1
└      7   1   2   1   2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3953719
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2919822
│   obj = 2.7324010097967673
└   obj_bound = 2.7322060398343906
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   5  18  5  2  2
│      2   2   2   2   2   2  11  11  14   2   2  2  2  2
│     12   3   2   2   2   2   2   2   2   2   2  2  2  2
│      7  21  22   8   2   2   2   2   2   2   2  3  2  2
│      2   2   2  12  14  13   8   8   5  13   4  2  2  2
└      8   2   3   2   3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.99425
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3967378
│   obj = 2.7324010097967673
└   obj_bound = 2.7324010097967673
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7324010097967673
┌ Info: current bounds
│   node_ix = 1343
│   lb = 2.676622278473161
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 861
└   length(nodes) = 1723
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178883
└   sum(fire_plans.plans_per_fire) = 69182
┌ Info: Time check
└   time() - start_time = 1754.1740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1556
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250099
┌ Info: Price and cut time (b-and-b)
└   t = 0.8062474
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1556
│   lb = 2.676622278473161
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 862
└   length(nodes) = 1725
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 178960
└   sum(fire_plans.plans_per_fire) = 69226
┌ Info: Time check
└   time() - start_time = 1755.0209999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1557
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237816
┌ Info: Price and cut time (b-and-b)
└   t = 1.3185863
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1557
│   lb = 2.6766233546665963
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 863
└   length(nodes) = 1727
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 179211
└   sum(fire_plans.plans_per_fire) = 69273
┌ Info: Time check
└   time() - start_time = 1756.3789999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1144
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239098
┌ Info: Price and cut time (b-and-b)
└   t = 0.4304436
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1144
│   lb = 2.6766233546665963
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 864
└   length(nodes) = 1729
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 179259
└   sum(fire_plans.plans_per_fire) = 69291
┌ Info: Time check
└   time() - start_time = 1756.8489999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1145
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313271
┌ Info: Price and cut time (b-and-b)
└   t = 1.038438
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1145
│   lb = 2.676623354666598
└   ub = 2.7324010097967673
┌ Info: number of nodes
│   node_explored_count = 865
└   length(nodes) = 1731
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 179386
└   sum(fire_plans.plans_per_fire) = 69344
┌ Info: Time check
└   time() - start_time = 1757.9340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1728
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271
┌ Info: Price and cut time (b-and-b)
└   t = 1.3692505
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1728
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  10  7  4  7  7   0   0   0  0  0  0
│     9   2   0   0  0  0  0  0   0   0   0  0  0  0
│     6  18  20   6  0  0  0  0   0   0   0  0  0  0
│     0   0   0   1  6  8  9  9  15  14   0  1  0  0
└     6   1   1   0  1  1  0  0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.706934
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1828018
│   obj = 2.7322720097967674
└   obj_bound = 2.732272009796767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   2  18  4  1  1
│      1   1   1  11  8  5   8   8   1   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      7  19  21   7  1  1   1   1   1   1   1  1  1  1
│      1   1   1   2  7  9  10  10  16  15   1  2  1  1
└      7   2   2   1  2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2223557
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3655838
│   obj = 2.732272009796767
└   obj_bound = 2.732272009796767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  12  9   6   9   9   2   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   8  2   2   2   2   2   2   2  2  2  2
│      2   2   2   3  8  10  11  11  17  16   2  3  2  2
└      8   3   3   2  3   3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0060583
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.6254897
│   obj = 2.732272009796767
└   obj_bound = 2.732272009796767
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7322720097967674
┌ Info: current bounds
│   node_ix = 1728
│   lb = 2.676623354666598
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 866
└   length(nodes) = 1733
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 179967
└   sum(fire_plans.plans_per_fire) = 69644
┌ Info: Time check
└   time() - start_time = 1764.952999830246
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1729
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257991
┌ Info: Price and cut time (b-and-b)
└   t = 0.4393134
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1729
│   lb = 2.6766318348239557
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 867
└   length(nodes) = 1735
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180017
└   sum(fire_plans.plans_per_fire) = 69653
┌ Info: Time check
└   time() - start_time = 1765.4340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 902
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302639
┌ Info: Price and cut time (b-and-b)
└   t = 0.9521282
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 902
│   lb = 2.6766318348239557
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 868
└   length(nodes) = 1737
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180191
└   sum(fire_plans.plans_per_fire) = 69701
┌ Info: Time check
└   time() - start_time = 1766.4319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 903
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284984
┌ Info: Price and cut time (b-and-b)
└   t = 0.9517318
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 903
│   lb = 2.676633442558116
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 869
└   length(nodes) = 1739
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180320
└   sum(fire_plans.plans_per_fire) = 69735
┌ Info: Time check
└   time() - start_time = 1767.4269998073578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1170
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278322
┌ Info: Price and cut time (b-and-b)
└   t = 0.6804331
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1170
│   lb = 2.676633442558116
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 870
└   length(nodes) = 1741
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180372
└   sum(fire_plans.plans_per_fire) = 69761
┌ Info: Time check
└   time() - start_time = 1768.1529998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1171
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283159
┌ Info: Price and cut time (b-and-b)
└   t = 0.8311588
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1171
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0   1  17  3  0  0
│     0   0   0  5  6  2  9  6   3   0   0  0  0  0
│     9   2   0  0  0  0  0  0   0   0   0  0  0  0
│     6  18  20  5  0  0  0  0   0   0   0  1  0  0
│     0   0   0  7  6  9  6  9  13  13   0  1  0  0
└     6   0   1  0  1  0  0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5165229
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1198931
│   obj = 2.7322720097967674
└   obj_bound = 2.732272009796767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1   1   1   1   2  18  4  1  1
│      1   1   1  6  7   3  10   7   4   1   1  1  1  1
│     10   3   1  1  1   1   1   1   1   1   1  1  1  1
│      7  19  21  6  1   1   1   1   1   1   1  2  1  1
│      1   1   1  8  7  10   7  10  14  14   1  2  1  1
└      7   1   2  1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0603341
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2543162
│   obj = 2.732272009796767
└   obj_bound = 2.732007270311002
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2  2   2   2   2   2   3  19  5  2  2
│      2   2   2  7  8   4  11   8   5   2   2  2  2  2
│     11   4   2  2  2   2   2   2   2   2   2  2  2  2
│      8  20  22  7  2   2   2   2   2   2   2  3  2  2
│      2   2   2  9  8  11   8  11  15  15   2  3  2  2
└      8   2   3  2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1923815
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2965932
│   obj = 2.732272009796767
└   obj_bound = 2.7320586523421504
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7322720097967674
┌ Info: current bounds
│   node_ix = 1171
│   lb = 2.6766337280183423
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 871
└   length(nodes) = 1743
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180776
└   sum(fire_plans.plans_per_fire) = 69983
┌ Info: Time check
└   time() - start_time = 1772.9649999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1742
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255365
┌ Info: Price and cut time (b-and-b)
└   t = 1.5544013
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1742
│   lb = 2.6766337280183423
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 872
└   length(nodes) = 1745
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180891
└   sum(fire_plans.plans_per_fire) = 70049
┌ Info: Time check
└   time() - start_time = 1774.561999797821
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1743
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335461
┌ Info: Price and cut time (b-and-b)
└   t = 0.519795
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1743
│   lb = 2.676639884094185
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 873
└   length(nodes) = 1747
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180914
└   sum(fire_plans.plans_per_fire) = 70063
┌ Info: Time check
└   time() - start_time = 1775.1289999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 286
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270883
┌ Info: Price and cut time (b-and-b)
└   t = 0.9898836
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 286
│   lb = 2.676639884094185
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 874
└   length(nodes) = 1749
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 180963
└   sum(fire_plans.plans_per_fire) = 70105
┌ Info: Time check
└   time() - start_time = 1776.1619999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 287
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231584
┌ Info: Price and cut time (b-and-b)
└   t = 0.7347829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 287
│   lb = 2.6766457434758935
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 875
└   length(nodes) = 1751
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181036
└   sum(fire_plans.plans_per_fire) = 70135
┌ Info: Time check
└   time() - start_time = 1776.9359998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1440
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274149
┌ Info: Price and cut time (b-and-b)
└   t = 0.8143486
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1440
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0   0   1  17  3  0  0
│     0   0   0  2  3  6  12  6   3   0   0  0  0  0
│     9   2   0  0  0  0   0  0   0   0   0  0  0  0
│     6  18  20  5  0  0   0  0   0   0   0  1  0  0
│     0   0   0  9  9  5   3  9  13  12   1  0  0  0
└     6   0   1  0  1  0   0  0   0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5256274
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0688248
│   obj = 2.7322720097967674
└   obj_bound = 2.732023345706339
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1   3   4  7  13   7   4   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   6   1  1   1   1   1   1   1  2  1  1
│      1   1   1  10  10  6   4  10  14  13   2  1  1  1
└      7   1   2   1   2  1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.281986
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2659098
│   obj = 2.732272009796767
└   obj_bound = 2.7320887676840235
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   3  19  5  2  2
│      2   2   2   4   5  8  14   8   5   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      8  20  22   7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  11  11  7   5  11  15  14   3  2  2  2
└      8   2   3   2   3  2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1010485
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3729044
│   obj = 2.732272009796767
└   obj_bound = 2.7320389001303615
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7322720097967674
┌ Info: current bounds
│   node_ix = 1440
│   lb = 2.6766457434758935
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 876
└   length(nodes) = 1753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181598
└   sum(fire_plans.plans_per_fire) = 70350
┌ Info: Time check
└   time() - start_time = 1781.9329998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1441
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023722
┌ Info: Price and cut time (b-and-b)
└   t = 1.3093509
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1441
│   lb = 2.676645743475894
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 877
└   length(nodes) = 1755
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181792
└   sum(fire_plans.plans_per_fire) = 70397
┌ Info: Time check
└   time() - start_time = 1783.2819998264313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1752
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306233
┌ Info: Price and cut time (b-and-b)
└   t = 1.2315756
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1752
│   lb = 2.676645743475894
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 878
└   length(nodes) = 1757
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181885
└   sum(fire_plans.plans_per_fire) = 70459
┌ Info: Time check
└   time() - start_time = 1784.5590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1753
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264543
┌ Info: Price and cut time (b-and-b)
└   t = 0.2820692
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1753
│   lb = 2.676646709929207
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 879
└   length(nodes) = 1759
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181907
└   sum(fire_plans.plans_per_fire) = 70468
┌ Info: Time check
└   time() - start_time = 1784.8869998455048
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1100
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025103
┌ Info: Price and cut time (b-and-b)
└   t = 0.7329935
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1100
│   lb = 2.676646709929207
└   ub = 2.7322720097967674
┌ Info: number of nodes
│   node_explored_count = 880
└   length(nodes) = 1761
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 181931
└   sum(fire_plans.plans_per_fire) = 70488
┌ Info: Time check
└   time() - start_time = 1785.6610000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1101
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320192
┌ Info: Price and cut time (b-and-b)
└   t = 1.1527512
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1101
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0   0   0  1  1   1  18  3  0  0
│     0   0   0  10  7   2   0  6  6   0   0  0  0  0
│     9   2   0   0  0   0   0  0  0   0   0  0  0  0
│     6  18  20   5  0   0   0  0  0   0   0  1  0  0
│     0   0   0   1  5  10  15  9  9  13   0  1  0  0
└     6   0   1   0  1   0   0  0  0   2   0  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.787607
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0620781
│   obj = 2.732272009796767
└   obj_bound = 2.732272009796767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   2   2   2  19  4  1  1
│      1   1   1  11  8   3   1   7   7   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      7  19  21   6  1   1   1   1   1   1   1  2  1  1
│      1   1   1   2  6  11  16  10  10  14   1  2  1  1
└      7   1   2   1  2   1   1   1   1   3   1  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5407653
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3612508
│   obj = 2.7322720097967674
└   obj_bound = 2.7322720097967674
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   3   3   3  20  5  2  2
│      2   2   2  12  9   4   2   8   8   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      8  20  22   7  2   2   2   2   2   2   2  3  2  2
│      2   2   2   3  7  12  17  11  11  15   2  3  2  2
└      8   2   3   2  3   2   2   2   2   4   2  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 10, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0068165
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4059711
│   obj = 2.732272009796767
└   obj_bound = 2.732003577895556
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.732272009796767
┌ Info: current bounds
│   node_ix = 1101
│   lb = 2.676649373297501
└   ub = 2.732272009796767
┌ Info: number of nodes
│   node_explored_count = 881
└   length(nodes) = 1763
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 182319
└   sum(fire_plans.plans_per_fire) = 70758
┌ Info: Time check
└   time() - start_time = 1791.5249998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1682
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266116
┌ Info: Price and cut time (b-and-b)
└   t = 0.6580406
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1682
│   lb = 2.676649373297501
└   ub = 2.732272009796767
┌ Info: number of nodes
│   node_explored_count = 882
└   length(nodes) = 1765
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 182385
└   sum(fire_plans.plans_per_fire) = 70779
┌ Info: Time check
└   time() - start_time = 1792.2259998321533
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1683
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293077
┌ Info: Price and cut time (b-and-b)
└   t = 0.9007797
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1683
│   lb = 2.676654479065325
└   ub = 2.732272009796767
┌ Info: number of nodes
│   node_explored_count = 883
└   length(nodes) = 1767
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 182489
└   sum(fire_plans.plans_per_fire) = 70826
┌ Info: Time check
└   time() - start_time = 1793.1729998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 838
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285074
┌ Info: Price and cut time (b-and-b)
└   t = 0.7026484
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 838
│   lb = 2.676654479065325
└   ub = 2.732272009796767
┌ Info: number of nodes
│   node_explored_count = 884
└   length(nodes) = 1769
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 182547
└   sum(fire_plans.plans_per_fire) = 70846
┌ Info: Time check
└   time() - start_time = 1793.9179999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 839
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256763
┌ Info: Price and cut time (b-and-b)
└   t = 1.1299968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 839
│   lb = 2.676655715613454
└   ub = 2.732272009796767
┌ Info: number of nodes
│   node_explored_count = 885
└   length(nodes) = 1771
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 182711
└   sum(fire_plans.plans_per_fire) = 70893
┌ Info: Time check
└   time() - start_time = 1795.0899999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 848
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292849
┌ Info: Price and cut time (b-and-b)
└   t = 1.3440051
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 848
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0   1  17  3  0  0
│     0   0   0   0  9  8  9   5   0   0   0  0  0  0
│     9   2   0   0  0  0  0   0   0   0   0  0  0  0
│     6  18  20   6  0  0  0   0   0   0   0  0  0  0
│     0   0   0  10  3  3  6  11  15  14   0  1  0  0
└     6   1   1   0  1  1  0   0   0   0   1  1  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7438687
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1151514
│   obj = 2.7322720097967674
└   obj_bound = 2.7322720097967674
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   2  18  4  1  1
│      1   1   1   1  10  9  10   6   1   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      7  19  21   7   1  1   1   1   1   1   1  1  1  1
│      1   1   1  11   4  4   7  12  16  15   1  2  1  1
└      7   2   2   1   2  2   1   1   1   1   2  2  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0966448
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3769458
│   obj = 2.732272009796767
└   obj_bound = 2.732272009796767
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   3  19  5  2  2
│      2   2   2   2  11  10  11   7   2   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      8  20  22   8   2   2   2   2   2   2   2  2  2  2
│      2   2   2  12   5   5   8  13  17  16   2  3  2  2
└      8   3   3   2   3   3   2   2   2   2   3  3  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8556503
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3853984
│   obj = 2.732272009796767
└   obj_bound = 2.732272009796767
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7322720097967674
[ Info: Full time limit reached
