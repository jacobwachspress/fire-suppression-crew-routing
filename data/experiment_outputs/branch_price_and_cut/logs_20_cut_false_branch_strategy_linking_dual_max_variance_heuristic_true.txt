[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 3.428999900817871
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102514
┌ Info: Price and cut time (b-and-b)
└   t = 5.0646449
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0   2  17  2  0  0
│     0   0   0  4  4  4  6  6  6   0   0  0  0  0
│     9   2   0  0  0  0  0  0  0   0   0  0  0  0
│     6  18  20  5  0  0  0  0  0   0   0  1  0  0
│     0   0   0  7  8  7  9  9  9  12   1  1  0  0
└     6   0   1  0  1  0  0  0  0   2   0  1  0  0
┌ Info: Price and cut time (heuristic)
└   t = 0.9461238
┌ Info: found sol
│   t = 0.1436511
│   obj = 2.969471366216199
└   obj_bound = 2.9694713662161987
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   3  18  3  1  1
│      1   1   1  5  5  5   7   7   7   1   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      7  19  21  6  1  1   1   1   1   1   1  2  1  1
│      1   1   1  8  9  8  10  10  10  13   2  2  1  1
└      7   1   2  1  2  1   1   1   1   3   1  2  1  1
┌ Info: Price and cut time (heuristic)
└   t = 1.7335189
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8469864
│   obj = 2.819759146024125
└   obj_bound = 2.8197591460241247
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2  2   2  2   2   2   2   4  19  4  2  2
│      2   2   2  6   6  6   8   8   8   2   2  2  2  2
│     11   4   2  2   2  2   2   2   2   2   2  2  2  2
│      8  20  22  7   2  2   2   2   2   2   2  3  2  2
│      2   2   2  9  10  9  11  11  11  14   3  3  2  2
└      8   2   3  2   3  2   2   2   2   4   2  3  2  2
┌ Info: Price and cut time (heuristic)
└   t = 1.5221479
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.5932473
│   obj = 2.813706692874152
└   obj_bound = 2.813706692874152
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   5  20  5  3  3
│      3   3   3   7   7   7   9   9   9   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│      9  21  23   8   3   3   3   3   3   3   3  4  3  3
│      3   3   3  10  11  10  12  12  12  15   4  4  3  3
└      9   3   4   3   4   3   3   3   3   5   3  4  3  3
┌ Info: Price and cut time (heuristic)
└   t = 0.9175646
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.7913908
│   obj = 2.8066302704480677
└   obj_bound = 2.8066302704480677
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   6  21  6  4  4
│      4   4   4   8   8   8  10  10  10   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     10  22  24   9   4   4   4   4   4   4   4  5  4  4
│      4   4   4  11  12  11  13  13  13  16   5  5  4  4
└     10   4   5   4   5   4   4   4   4   6   4  5  4  4
┌ Info: Price and cut time (heuristic)
└   t = 0.4376512
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 3.0894368
│   obj = 2.8066302704480677
└   obj_bound = 2.8066302704480677
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5   7  22  7  5  5
│      5   5   5   9   9   9  11  11  11   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     11  23  25  10   5   5   5   5   5   5   5  6  5  5
│      5   5   5  12  13  12  14  14  14  17   6  6  5  5
└     11   5   6   5   6   5   5   5   5   7   5  6  5  5
┌ Info: Price and cut time (heuristic)
└   t = 0.8733256
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.7471641
│   obj = 2.806630270448068
└   obj_bound = 2.806630270448068
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.8066302704480677
┌ Info: current bounds
│   node_ix = 1
│   lb = 2.670914114050459
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2190
└   sum(fire_plans.plans_per_fire) = 678
┌ Info: Time check
└   time() - start_time = 25.037999868392944
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0208806
┌ Info: Price and cut time (b-and-b)
└   t = 1.1582787
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 2
│   lb = 2.670914114050459
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 5
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2352
└   sum(fire_plans.plans_per_fire) = 707
┌ Info: Time check
└   time() - start_time = 26.233999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0228641
┌ Info: Price and cut time (b-and-b)
└   t = 1.4162454
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 1, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 3
│   lb = 2.672416018453699
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 7
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2591
└   sum(fire_plans.plans_per_fire) = 762
┌ Info: Time check
└   time() - start_time = 27.6729998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 4
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0188554
┌ Info: Price and cut time (b-and-b)
└   t = 1.8614019
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 4
│   lb = 2.672416018453699
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 4
└   length(nodes) = 9
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2836
└   sum(fire_plans.plans_per_fire) = 832
┌ Info: Time check
└   time() - start_time = 29.572999954223633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 5
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239701
┌ Info: Price and cut time (b-and-b)
└   t = 1.7800109
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 1, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 5
│   lb = 2.6870769773708383
└   ub = 2.8066302704480677
┌ Info: number of nodes
│   node_explored_count = 5
└   length(nodes) = 11
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3095
└   sum(fire_plans.plans_per_fire) = 908
┌ Info: Time check
└   time() - start_time = 31.39199995994568
┌ Info: Exploring node
└   branch_and_bound_node.ix = 6
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258488
┌ Info: Price and cut time (b-and-b)
└   t = 0.7938885
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 6
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  8  14  1  0  0
│     0   0   2   4  3  2  6  7  7  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  11  9  8  9  9  9  6   1  0  0  0
└     4   1   0   0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2116303
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3124298
│   obj = 2.802779001779345
└   obj_bound = 2.802779001779345
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  9  15  2  1  1
│      1   1   3   5   4  3   7   8   8  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  12  10  9  10  10  10  7   2  1  1  1
└      5   2   1   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1518875
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9165195
│   obj = 2.736976489688461
└   obj_bound = 2.736976489688461
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  16  3  2  2
│      2   2   4   6   5   4   8   9   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  13  11  10  11  11  11   8   3  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2538397
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.9466692
│   obj = 2.736976489688461
└   obj_bound = 2.736976489688461
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3  11  17  4  3  3
│      3   3   5   7   6   5   9  10  10   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│     10  20  21   3   3   3   3   3   3   3   3  3  3  3
│      3   3   3  14  12  11  12  12  12   9   4  3  3  3
└      7   4   3   3   4   4   3   3   3   3   5  3  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1507064
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.1661177
│   obj = 2.7369764896884616
└   obj_bound = 2.736976489688461
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.736976489688461
┌ Info: current bounds
│   node_ix = 6
│   lb = 2.6870769773708383
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 6
└   length(nodes) = 13
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3889
└   sum(fire_plans.plans_per_fire) = 1218
┌ Info: Time check
└   time() - start_time = 40.94799995422363
┌ Info: Exploring node
└   branch_and_bound_node.ix = 7
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0208486
┌ Info: Price and cut time (b-and-b)
└   t = 1.8752404
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 7
│   lb = 2.6886936894930837
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 7
└   length(nodes) = 15
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4163
└   sum(fire_plans.plans_per_fire) = 1295
┌ Info: Time check
└   time() - start_time = 42.84299993515015
┌ Info: Exploring node
└   branch_and_bound_node.ix = 10
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.138115
┌ Info: Price and cut time (b-and-b)
└   t = 0.9885107
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 4, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 10
│   lb = 2.6886936894930837
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 8
└   length(nodes) = 17
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4303
└   sum(fire_plans.plans_per_fire) = 1344
┌ Info: Time check
└   time() - start_time = 43.99799990653992
┌ Info: Exploring node
└   branch_and_bound_node.ix = 11
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02137
┌ Info: Price and cut time (b-and-b)
└   t = 1.0560065
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 11
│   lb = 2.705046924837801
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 9
└   length(nodes) = 19
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4342
└   sum(fire_plans.plans_per_fire) = 1372
┌ Info: Time check
└   time() - start_time = 45.08500003814697
┌ Info: Exploring node
└   branch_and_bound_node.ix = 12
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0220101
┌ Info: Price and cut time (b-and-b)
└   t = 1.3210003
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 12
│   lb = 2.705046924837801
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 10
└   length(nodes) = 21
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4564
└   sum(fire_plans.plans_per_fire) = 1411
┌ Info: Time check
└   time() - start_time = 46.43400001525879
┌ Info: Exploring node
└   branch_and_bound_node.ix = 13
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225811
┌ Info: Price and cut time (b-and-b)
└   t = 1.0019842
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 13
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  8  15  1  0  0
│     0   0   2   0  3  3  7  8  8  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  9  8  9  8  8  6   1  0  0  0
└     4   1   0   0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7187
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1717974
│   obj = 2.736976489688461
└   obj_bound = 2.7369756694050444
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1  1  1  9  16  2  1  1
│      1   1   3   1   4  4   8  9  9  1   1  1  1  1
│     10   3   1   1   1  1   1  1  1  1   1  1  1  1
│      8  18  19   1   1  1   1  1  1  1   1  1  1  1
│      1   1   1  16  10  9  10  9  9  7   2  1  1  1
└      5   2   1   1   2  2   1  1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8649302
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7401691
│   obj = 2.736976489688461
└   obj_bound = 2.736833882285231
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  17  3  2  2
│      2   2   4   2   5   5   9  10  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  11  10  11  10  10   8   3  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6866847
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.8134085
│   obj = 2.736976489688461
└   obj_bound = 2.7369764896884607
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.736976489688461
┌ Info: current bounds
│   node_ix = 13
│   lb = 2.706038128850459
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 11
└   length(nodes) = 23
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5138
└   sum(fire_plans.plans_per_fire) = 1611
┌ Info: Time check
└   time() - start_time = 52.92899990081787
┌ Info: Exploring node
└   branch_and_bound_node.ix = 22
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231421
┌ Info: Price and cut time (b-and-b)
└   t = 1.1186912
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 22
│   lb = 2.706038128850459
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 12
└   length(nodes) = 25
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5339
└   sum(fire_plans.plans_per_fire) = 1646
┌ Info: Time check
└   time() - start_time = 54.08200001716614
┌ Info: Exploring node
└   branch_and_bound_node.ix = 23
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275915
┌ Info: Price and cut time (b-and-b)
└   t = 1.9456861
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 23
│   lb = 2.7062335436667864
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 13
└   length(nodes) = 27
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5542
└   sum(fire_plans.plans_per_fire) = 1709
┌ Info: Time check
└   time() - start_time = 56.07800006866455
┌ Info: Exploring node
└   branch_and_bound_node.ix = 20
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301953
┌ Info: Price and cut time (b-and-b)
└   t = 1.526353
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 20
│   lb = 2.7062335436667864
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 14
└   length(nodes) = 29
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5671
└   sum(fire_plans.plans_per_fire) = 1745
┌ Info: Time check
└   time() - start_time = 57.6489999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 21
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02201
┌ Info: Price and cut time (b-and-b)
└   t = 1.6843826
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 21
│   lb = 2.7064762142235583
└   ub = 2.736976489688461
┌ Info: number of nodes
│   node_explored_count = 15
└   length(nodes) = 31
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5888
└   sum(fire_plans.plans_per_fire) = 1800
┌ Info: Time check
└   time() - start_time = 59.36400008201599
┌ Info: Exploring node
└   branch_and_bound_node.ix = 16
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284124
┌ Info: Price and cut time (b-and-b)
└   t = 1.5110378
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 16
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  8  9  0  0
│      0   0   0   0  5  6  7  7  6   0  0  0  0  0
│     10   0   0   0  0  0  0  0  0   0  0  0  0  0
│      4  21  21  16  0  0  0  0  0   0  3  3  0  0
│      0   0   0   0  7  6  8  8  9  14  7  1  0  0
└      7   0   0   0  0  0  0  0  0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8664957
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0669113
│   obj = 2.7369764896884607
└   obj_bound = 2.736709316396532
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1  1  1   1   1  9  10  1  1
│      1   1   1   1  6  7  8  8   7   1  1   1  1  1
│     11   1   1   1  1  1  1  1   1   1  1   1  1  1
│      5  22  22  17  1  1  1  1   1   1  4   4  1  1
│      1   1   1   1  8  7  9  9  10  15  8   2  1  1
└      8   1   1   1  1  1  1  1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1608755
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.2246006
│   obj = 2.736976489688461
└   obj_bound = 2.7369764896884607
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  7  8   9   9   8   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      6  23  23  18  2  2   2   2   2   2   5   5  2  2
│      2   2   2   2  9  8  10  10  11  16   9   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0406138
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 1.4348221
│   obj = 2.7369764896884616
└   obj_bound = 2.7369764896884616
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7369764896884607
┌ Info: current bounds
│   node_ix = 16
│   lb = 2.7064762142235583
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 16
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6686
└   sum(fire_plans.plans_per_fire) = 2109
┌ Info: Time check
└   time() - start_time = 68.23600006103516
┌ Info: Exploring node
└   branch_and_bound_node.ix = 17
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 16, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250195
┌ Info: Price and cut time (b-and-b)
└   t = 0.8557002
┌ Info: current bounds
│   node_ix = 17
│   lb = 2.706727452798029
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 17
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6822
└   sum(fire_plans.plans_per_fire) = 2140
┌ Info: Time check
└   time() - start_time = 69.1399998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 26
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290257
┌ Info: Price and cut time (b-and-b)
└   t = 0.9964016
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 26
│   lb = 2.706727452798029
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 18
└   length(nodes) = 35
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6914
└   sum(fire_plans.plans_per_fire) = 2169
┌ Info: Time check
└   time() - start_time = 70.16700005531311
┌ Info: Exploring node
└   branch_and_bound_node.ix = 27
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258988
┌ Info: Price and cut time (b-and-b)
└   t = 2.081763
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 27
│   lb = 2.707147062723144
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 19
└   length(nodes) = 37
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7103
└   sum(fire_plans.plans_per_fire) = 2217
┌ Info: Time check
└   time() - start_time = 72.2979998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 24
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023479
┌ Info: Price and cut time (b-and-b)
└   t = 1.4045284
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 24
│   lb = 2.707147062723144
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 20
└   length(nodes) = 39
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7261
└   sum(fire_plans.plans_per_fire) = 2274
┌ Info: Time check
└   time() - start_time = 73.73900008201599
┌ Info: Exploring node
└   branch_and_bound_node.ix = 25
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283363
┌ Info: Price and cut time (b-and-b)
└   t = 1.2045145
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 25
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0  0  8  14  1  0  0
│     0   0   2   0  6  5  6   5  6  0   0  0  0  0
│     9   2   0   0  0  0  0   0  0  0   0  0  0  0
│     7  17  18   0  0  0  0   0  0  0   0  0  0  0
│     0   0   0  15  5  5  9  10  9  7   1  0  0  0
└     4   1   0   0  1  1  0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6313391
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0531564
│   obj = 2.736976489688461
└   obj_bound = 2.736976489688461
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  9  15  2  1  1
│      1   1   3   1  7  6   7   6   7  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  6  6  10  11  10  8   2  1  1  1
└      5   2   1   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7760863
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2709426
│   obj = 2.736976489688461
└   obj_bound = 2.736976489688461
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  10  16  3  2  2
│      2   2   4   2  8  7   8   7   8   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  7  11  12  11   9   3  2  2  2
└      6   3   2   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6233665
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2360986
│   obj = 2.736976489688461
└   obj_bound = 2.7367563321519
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.736976489688461
┌ Info: current bounds
│   node_ix = 25
│   lb = 2.7071702298535225
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 21
└   length(nodes) = 41
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 7880
└   sum(fire_plans.plans_per_fire) = 2461
┌ Info: Time check
└   time() - start_time = 79.05099987983704
┌ Info: Exploring node
└   branch_and_bound_node.ix = 28
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0373079
┌ Info: Price and cut time (b-and-b)
└   t = 1.0932478
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 28
│   lb = 2.7071702298535225
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 22
└   length(nodes) = 43
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8083
└   sum(fire_plans.plans_per_fire) = 2507
┌ Info: Time check
└   time() - start_time = 80.19799995422363
┌ Info: Exploring node
└   branch_and_bound_node.ix = 29
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296889
┌ Info: Price and cut time (b-and-b)
└   t = 1.1235959
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 29
│   lb = 2.707173312248093
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 23
└   length(nodes) = 45
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8194
└   sum(fire_plans.plans_per_fire) = 2542
┌ Info: Time check
└   time() - start_time = 81.36299991607666
┌ Info: Exploring node
└   branch_and_bound_node.ix = 42
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307672
┌ Info: Price and cut time (b-and-b)
└   t = 1.7133397
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 42
│   lb = 2.707173312248093
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 24
└   length(nodes) = 47
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8318
└   sum(fire_plans.plans_per_fire) = 2587
┌ Info: Time check
└   time() - start_time = 83.11699986457825
┌ Info: Exploring node
└   branch_and_bound_node.ix = 43
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271134
┌ Info: Price and cut time (b-and-b)
└   t = 1.6156632
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 43
│   lb = 2.70736605334477
└   ub = 2.7369764896884607
┌ Info: number of nodes
│   node_explored_count = 25
└   length(nodes) = 49
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 8497
└   sum(fire_plans.plans_per_fire) = 2626
┌ Info: Time check
└   time() - start_time = 84.78499984741211
┌ Info: Exploring node
└   branch_and_bound_node.ix = 34
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295235
┌ Info: Price and cut time (b-and-b)
└   t = 0.5249615
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 34
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0   0  0  9  14  1  0  0
│     0   0   0   0   0  5  9  10  9  0   0  0  0  0
│     9   2   0   0   0  0  0   0  0  0   0  0  0  0
│     7  17  18   0   0  0  0   0  0  0   0  0  0  0
│     0   0   2  15  11  6  7   6  7  6   2  0  0  0
└     4   1   0   0   1  1  0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.403906
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2623728
│   obj = 2.7335179733217085
└   obj_bound = 2.733517973321708
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  10  15  2  1  1
│      1   1   1   1   1  6  10  11  10   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      8  18  19   1   1  1   1   1   1   1   1  1  1  1
│      1   1   3  16  12  7   8   7   8   7   3  1  1  1
└      5   2   1   1   2  2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2497476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3439026
│   obj = 2.73006446311528
└   obj_bound = 2.73006446311528
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  11  16  3  2  2
│      2   2   2   2   2  7  11  12  11   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   4  17  13  8   9   8   9   8   4  2  2  2
└      6   3   2   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8089928
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1638457
│   obj = 2.73006446311528
└   obj_bound = 2.7300644631152795
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3  3   3   3   3  12  17  4  3  3
│      3   3   3   3   3  8  12  13  12   3   3  3  3  3
│     12   5   3   3   3  3   3   3   3   3   3  3  3  3
│     10  20  21   3   3  3   3   3   3   3   3  3  3  3
│      3   3   5  18  14  9  10   9  10   9   5  3  3  3
└      7   4   3   3   4  4   3   3   3   3   5  3  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.298646
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3650433
│   obj = 2.7299114631152803
└   obj_bound = 2.7299114631152785
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4  13  18  5  4  4
│      4   4   4   4   4   9  13  14  13   4   4  4  4  4
│     13   6   4   4   4   4   4   4   4   4   4  4  4  4
│     11  21  22   4   4   4   4   4   4   4   4  4  4  4
│      4   4   6  19  15  10  11  10  11  10   6  4  4  4
└      8   5   4   4   5   5   4   4   4   4   6  4  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4442003
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3569256
│   obj = 2.72991146311528
└   obj_bound = 2.7299114631152794
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      5   5   5   5   5   5   5   5   5  14  19  6  5  5
│      5   5   5   5   5  10  14  15  14   5   5  5  5  5
│     14   7   5   5   5   5   5   5   5   5   5  5  5  5
│     12  22  23   5   5   5   5   5   5   5   5  5  5  5
│      5   5   7  20  16  11  12  11  12  11   7  5  5  5
└      9   6   5   5   6   6   5   5   5   5   7  5  5  5
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6731217
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6139874
│   obj = 2.72991146311528
└   obj_bound = 2.7299114631152794
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7299114631152803
┌ Info: current bounds
│   node_ix = 34
│   lb = 2.70736605334477
└   ub = 2.7299114631152803
┌ Info: number of nodes
│   node_explored_count = 26
└   length(nodes) = 51
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9022
└   sum(fire_plans.plans_per_fire) = 2898
┌ Info: Time check
└   time() - start_time = 93.26399993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 35
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265884
┌ Info: Price and cut time (b-and-b)
└   t = 1.5510847
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 35
│   lb = 2.7075409131260044
└   ub = 2.7299114631152803
┌ Info: number of nodes
│   node_explored_count = 27
└   length(nodes) = 53
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9255
└   sum(fire_plans.plans_per_fire) = 2958
┌ Info: Time check
└   time() - start_time = 94.85899996757507
┌ Info: Exploring node
└   branch_and_bound_node.ix = 8
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263487
┌ Info: Price and cut time (b-and-b)
└   t = 1.3545261
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 8
│   lb = 2.7075409131260044
└   ub = 2.7299114631152803
┌ Info: number of nodes
│   node_explored_count = 28
└   length(nodes) = 55
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9418
└   sum(fire_plans.plans_per_fire) = 2999
┌ Info: Time check
└   time() - start_time = 96.24600005149841
┌ Info: Exploring node
└   branch_and_bound_node.ix = 9
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1415495
┌ Info: Price and cut time (b-and-b)
└   t = 1.0695495
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 9
│   lb = 2.707551623672341
└   ub = 2.7299114631152803
┌ Info: number of nodes
│   node_explored_count = 29
└   length(nodes) = 57
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9506
└   sum(fire_plans.plans_per_fire) = 3033
┌ Info: Time check
└   time() - start_time = 97.47399997711182
┌ Info: Exploring node
└   branch_and_bound_node.ix = 40
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292862
┌ Info: Price and cut time (b-and-b)
└   t = 0.6439078
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 40
│   lb = 2.707551623672341
└   ub = 2.7299114631152803
┌ Info: number of nodes
│   node_explored_count = 30
└   length(nodes) = 59
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 9577
└   sum(fire_plans.plans_per_fire) = 3055
┌ Info: Time check
└   time() - start_time = 98.15700006484985
┌ Info: Exploring node
└   branch_and_bound_node.ix = 41
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026745
┌ Info: Price and cut time (b-and-b)
└   t = 0.9731367
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 41
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0  8  14  1  0  0
│     0   0   2   0  7  7  6   5   5  0   0  0  0  0
│     9   2   0   0  0  0  0   0   0  0   0  0  0  0
│     7  17  18   0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  15  5  4  9  10  10  7   1  0  0  0
└     4   1   0   0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0368953
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0664517
│   obj = 2.72991146311528
└   obj_bound = 2.729658471532287
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  9  15  2  1  1
│      1   1   3   1  8  8   7   6   6  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  6  5  10  11  11  8   2  1  1  1
└      5   2   1   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3826027
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1979063
│   obj = 2.72991146311528
└   obj_bound = 2.729909891250063
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  10  16  3  2  2
│      2   2   4   2  9  9   8   7   7   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  6  11  12  12   9   3  2  2  2
└      6   3   2   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7918127
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3114521
│   obj = 2.72991146311528
└   obj_bound = 2.72991146311528
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.72991146311528
┌ Info: current bounds
│   node_ix = 41
│   lb = 2.7075679174979475
└   ub = 2.72991146311528
┌ Info: number of nodes
│   node_explored_count = 31
└   length(nodes) = 61
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10174
└   sum(fire_plans.plans_per_fire) = 3278
┌ Info: Time check
└   time() - start_time = 103.44099998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 44
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262779
┌ Info: Price and cut time (b-and-b)
└   t = 0.8866652
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 44
│   lb = 2.7075679174979475
└   ub = 2.72991146311528
┌ Info: number of nodes
│   node_explored_count = 32
└   length(nodes) = 63
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10215
└   sum(fire_plans.plans_per_fire) = 3296
┌ Info: Time check
└   time() - start_time = 104.36400008201599
┌ Info: Exploring node
└   branch_and_bound_node.ix = 45
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246419
┌ Info: Price and cut time (b-and-b)
└   t = 1.1903938
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 45
│   lb = 2.707677770639791
└   ub = 2.72991146311528
┌ Info: number of nodes
│   node_explored_count = 33
└   length(nodes) = 65
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10421
└   sum(fire_plans.plans_per_fire) = 3348
┌ Info: Time check
└   time() - start_time = 105.5939998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 58
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271155
┌ Info: Price and cut time (b-and-b)
└   t = 0.4128473
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 58
│   lb = 2.707677770639791
└   ub = 2.72991146311528
┌ Info: number of nodes
│   node_explored_count = 34
└   length(nodes) = 67
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10519
└   sum(fire_plans.plans_per_fire) = 3360
┌ Info: Time check
└   time() - start_time = 106.0479998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 59
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261392
┌ Info: Price and cut time (b-and-b)
└   t = 1.3057708
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 59
│   lb = 2.70769746674726
└   ub = 2.72991146311528
┌ Info: number of nodes
│   node_explored_count = 35
└   length(nodes) = 69
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 10650
└   sum(fire_plans.plans_per_fire) = 3407
┌ Info: Time check
└   time() - start_time = 107.39800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 50
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307904
┌ Info: Price and cut time (b-and-b)
└   t = 0.3926755
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 50
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0  7  14  1  0  0
│     0   0   0   0   0  5  8  9  8  0   0  0  0  0
│     9   2   0   0   0  0  0  0  0  0   0  0  0  0
│     7  17  18   0   0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  11  6  7  7  8  7   1  0  0  0
└     4   1   2   0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6041942
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0551633
│   obj = 2.72991146311528
└   obj_bound = 2.7297119939513808
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1   1  1  8  15  2  1  1
│      1   1   1   1   1  6  9  10  9  1   1  1  1  1
│     10   3   1   1   1  1  1   1  1  1   1  1  1  1
│      8  18  19   1   1  1  1   1  1  1   1  1  1  1
│      1   1   1  16  12  7  8   8  9  8   2  1  1  1
└      5   2   3   1   2  1  1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9016496
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4007154
│   obj = 2.7272559275078536
└   obj_bound = 2.727232269384276
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  9  16  3  2  2
│      2   2   2   2   2  7  10  11  10  2   2  2  2  2
│     11   4   2   2   2  2   2   2   2  2   2  2  2  2
│      9  19  20   2   2  2   2   2   2  2   2  2  2  2
│      2   2   2  17  13  8   9   9  10  9   3  2  2  2
└      6   3   4   2   3  2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7839211
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2699671
│   obj = 2.7272559275078527
└   obj_bound = 2.727247838162476
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3  3   3   3   3  10  17  4  3  3
│      3   3   3   3   3  8  11  12  11   3   3  3  3  3
│     12   5   3   3   3  3   3   3   3   3   3  3  3  3
│     10  20  21   3   3  3   3   3   3   3   3  3  3  3
│      3   3   3  18  14  9  10  10  11  10   4  3  3  3
└      7   4   5   3   4  3   3   3   3   3   5  3  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5637415
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3350039
│   obj = 2.7272559275078527
└   obj_bound = 2.7272559275078527
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7272559275078536
┌ Info: current bounds
│   node_ix = 50
│   lb = 2.70769746674726
└   ub = 2.7272559275078536
┌ Info: number of nodes
│   node_explored_count = 36
└   length(nodes) = 71
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11280
└   sum(fire_plans.plans_per_fire) = 3633
┌ Info: Time check
└   time() - start_time = 113.37899994850159
┌ Info: Exploring node
└   branch_and_bound_node.ix = 51
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272445
┌ Info: Price and cut time (b-and-b)
└   t = 2.0945066
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 51
│   lb = 2.707739853022469
└   ub = 2.7272559275078536
┌ Info: number of nodes
│   node_explored_count = 37
└   length(nodes) = 73
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11491
└   sum(fire_plans.plans_per_fire) = 3698
┌ Info: Time check
└   time() - start_time = 115.50799989700317
┌ Info: Exploring node
└   branch_and_bound_node.ix = 62
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029081
┌ Info: Price and cut time (b-and-b)
└   t = 0.3575691
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 62
│   lb = 2.707739853022469
└   ub = 2.7272559275078536
┌ Info: number of nodes
│   node_explored_count = 38
└   length(nodes) = 75
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11524
└   sum(fire_plans.plans_per_fire) = 3711
┌ Info: Time check
└   time() - start_time = 115.90199995040894
┌ Info: Exploring node
└   branch_and_bound_node.ix = 63
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297138
┌ Info: Price and cut time (b-and-b)
└   t = 1.1519244
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 63
│   lb = 2.7077565543515147
└   ub = 2.7272559275078536
┌ Info: number of nodes
│   node_explored_count = 39
└   length(nodes) = 77
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11710
└   sum(fire_plans.plans_per_fire) = 3760
┌ Info: Time check
└   time() - start_time = 117.1159999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 36
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306264
┌ Info: Price and cut time (b-and-b)
└   t = 0.4169287
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 36
│   lb = 2.7077565543515147
└   ub = 2.7272559275078536
┌ Info: number of nodes
│   node_explored_count = 40
└   length(nodes) = 79
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 11750
└   sum(fire_plans.plans_per_fire) = 3772
┌ Info: Time check
└   time() - start_time = 117.57599997520447
┌ Info: Exploring node
└   branch_and_bound_node.ix = 37
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306847
┌ Info: Price and cut time (b-and-b)
└   t = 0.9530262
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 37
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0   0  10  13  0  0  0
│     0   0   3   0   0   0  8  9  10   0   0  0  0  0
│     9   2   0   0   0   0  0  0   0   0   0  0  0  0
│     7  18  17   0   0   0  0  0   0   0   0  0  0  0
│     0   0   0  15  12  11  7  6   5   4   2  0  0  0
└     4   1   0   0   1   1  0  0   0   0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3281491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1349193
│   obj = 2.727255927507853
└   obj_bound = 2.7270428301689966
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1  1   1   1  11  14  1  1  1
│      1   1   4   1   1   1  9  10  11   1   1  1  1  1
│     10   3   1   1   1   1  1   1   1   1   1  1  1  1
│      8  19  18   1   1   1  1   1   1   1   1  1  1  1
│      1   1   1  16  13  12  8   7   6   5   3  1  1  1
└      5   2   1   1   2   2  1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3896751
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1233935
│   obj = 2.7270600879787223
└   obj_bound = 2.7270600879787223
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  12  15  2  2  2
│      2   2   5   2   2   2  10  11  12   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  20  19   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  14  13   9   8   7   6   4  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9708611
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2389205
│   obj = 2.7270600879787223
└   obj_bound = 2.7270600879787223
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3  13  16  3  3  3
│      3   3   6   3   3   3  11  12  13   3   3  3  3  3
│     12   5   3   3   3   3   3   3   3   3   3  3  3  3
│     10  21  20   3   3   3   3   3   3   3   3  3  3  3
│      3   3   3  18  15  14  10   9   8   7   5  3  3  3
└      7   4   3   3   4   4   3   3   3   3   5  3  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7054146
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3887185
│   obj = 2.727060087978723
└   obj_bound = 2.726808042513729
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7270600879787223
┌ Info: current bounds
│   node_ix = 37
│   lb = 2.7078048079593975
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 41
└   length(nodes) = 81
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12535
└   sum(fire_plans.plans_per_fire) = 4053
┌ Info: Time check
└   time() - start_time = 124.50699996948242
┌ Info: Exploring node
└   branch_and_bound_node.ix = 60
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272797
┌ Info: Price and cut time (b-and-b)
└   t = 0.3884831
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 60
│   lb = 2.7078048079593975
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 42
└   length(nodes) = 83
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12579
└   sum(fire_plans.plans_per_fire) = 4064
┌ Info: Time check
└   time() - start_time = 124.92700004577637
┌ Info: Exploring node
└   branch_and_bound_node.ix = 61
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321764
┌ Info: Price and cut time (b-and-b)
└   t = 1.6022508
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 61
│   lb = 2.7078380726797997
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 43
└   length(nodes) = 85
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12770
└   sum(fire_plans.plans_per_fire) = 4125
┌ Info: Time check
└   time() - start_time = 126.58299994468689
┌ Info: Exploring node
└   branch_and_bound_node.ix = 64
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252622
┌ Info: Price and cut time (b-and-b)
└   t = 0.2334062
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 64
│   lb = 2.7078380726797997
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 44
└   length(nodes) = 87
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12794
└   sum(fire_plans.plans_per_fire) = 4133
┌ Info: Time check
└   time() - start_time = 126.84800004959106
┌ Info: Exploring node
└   branch_and_bound_node.ix = 65
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315319
┌ Info: Price and cut time (b-and-b)
└   t = 1.0775994
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 65
│   lb = 2.707929985040724
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 45
└   length(nodes) = 89
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 12997
└   sum(fire_plans.plans_per_fire) = 4189
┌ Info: Time check
└   time() - start_time = 127.97899985313416
┌ Info: Exploring node
└   branch_and_bound_node.ix = 66
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339239
┌ Info: Price and cut time (b-and-b)
└   t = 0.4754847
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 66
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  7  14  2  0  0
│     0   0   0   0  6  3  7  8  7  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  5  8  8  8  8  8   1  0  0  0
└     4   1   2   0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8722491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0563354
│   obj = 2.7270600879787223
└   obj_bound = 2.7268098731125794
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1  1  1  1  8  15  3  1  1
│      1   1   1   1  7  4  8  9  8  1   1  1  1  1
│     10   3   1   1  1  1  1  1  1  1   1  1  1  1
│      8  18  19   1  1  1  1  1  1  1   1  1  1  1
│      1   1   1  16  6  9  9  9  9  9   2  1  1  1
└      5   2   3   1  2  2  1  1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4890643
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2545278
│   obj = 2.7270600879787223
└   obj_bound = 2.7270519161135054
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  16  4  2  2
│      2   2   2   2  8   5   9  10   9   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  10  10  10  10  10   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7199474
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3612811
│   obj = 2.7270600879787223
└   obj_bound = 2.726862498138529
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7270600879787223
┌ Info: current bounds
│   node_ix = 66
│   lb = 2.707929985040724
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 46
└   length(nodes) = 91
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13467
└   sum(fire_plans.plans_per_fire) = 4355
┌ Info: Time check
└   time() - start_time = 132.7279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 67
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261534
┌ Info: Price and cut time (b-and-b)
└   t = 1.9439426
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 67
│   lb = 2.707949938732372
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 47
└   length(nodes) = 93
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13672
└   sum(fire_plans.plans_per_fire) = 4420
┌ Info: Time check
└   time() - start_time = 134.7189998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 82
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0353599
┌ Info: Price and cut time (b-and-b)
└   t = 0.5275564
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 82
│   lb = 2.707949938732372
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 48
└   length(nodes) = 95
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13737
└   sum(fire_plans.plans_per_fire) = 4435
┌ Info: Time check
└   time() - start_time = 135.29900002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 83
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274122
┌ Info: Price and cut time (b-and-b)
└   t = 1.6886328
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 83
│   lb = 2.7080275778007956
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 49
└   length(nodes) = 97
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 13908
└   sum(fire_plans.plans_per_fire) = 4500
┌ Info: Time check
└   time() - start_time = 137.0220000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 46
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0352667
┌ Info: Price and cut time (b-and-b)
└   t = 0.921322
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 46
│   lb = 2.7080275778007956
└   ub = 2.7270600879787223
┌ Info: number of nodes
│   node_explored_count = 50
└   length(nodes) = 99
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14054
└   sum(fire_plans.plans_per_fire) = 4531
┌ Info: Time check
└   time() - start_time = 137.9960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 47
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315785
┌ Info: Price and cut time (b-and-b)
└   t = 1.1001496
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 47
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  8  14  1  0  0
│     0   0   2  7  7  5   5   4   3  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  9  5  5  10  12  13  6   1  0  0  0
└     4   1   0  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.768634
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0865629
│   obj = 2.7270600879787223
└   obj_bound = 2.7268860478647308
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  9  15  2  1  1
│      1   1   3   8  8  6   6   5   4  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  10  6  6  11  13  14  7   2  1  1  1
└      5   2   1   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2001357
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6035541
│   obj = 2.726608039786662
└   obj_bound = 2.726608039786662
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  10  16  3  2  2
│      2   2   4   9  9  7   7   6   5   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  11  7  7  12  14  15   8   3  2  2  2
└      6   3   2   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2545729
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3587096
│   obj = 2.7266080397866626
└   obj_bound = 2.7266080397866626
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3  3   3   3   3  11  17  4  3  3
│      3   3   5  10  10  8   8   7   6   3   3  3  3  3
│     12   5   3   3   3  3   3   3   3   3   3  3  3  3
│     10  20  21   3   3  3   3   3   3   3   3  3  3  3
│      3   3   3  12   8  8  13  15  16   9   4  3  3  3
└      7   4   3   3   4  4   3   3   3   3   5  3  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1816368
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.7709002
│   obj = 2.7266080397866626
└   obj_bound = 2.726608039786662
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.726608039786662
┌ Info: current bounds
│   node_ix = 47
│   lb = 2.708044017900473
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 51
└   length(nodes) = 101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14683
└   sum(fire_plans.plans_per_fire) = 4807
┌ Info: Time check
└   time() - start_time = 146.02300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 74
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263306
┌ Info: Price and cut time (b-and-b)
└   t = 0.2369468
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 74
│   lb = 2.708044017900473
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 52
└   length(nodes) = 103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14715
└   sum(fire_plans.plans_per_fire) = 4817
┌ Info: Time check
└   time() - start_time = 146.29999995231628
┌ Info: Exploring node
└   branch_and_bound_node.ix = 75
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260295
┌ Info: Price and cut time (b-and-b)
└   t = 2.7647063
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 75
│   lb = 2.708097082277
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 53
└   length(nodes) = 105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 14977
└   sum(fire_plans.plans_per_fire) = 4905
┌ Info: Time check
└   time() - start_time = 149.10599994659424
┌ Info: Exploring node
└   branch_and_bound_node.ix = 86
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304621
┌ Info: Price and cut time (b-and-b)
└   t = 0.2399563
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 86
│   lb = 2.708097082277
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 54
└   length(nodes) = 107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15025
└   sum(fire_plans.plans_per_fire) = 4916
┌ Info: Time check
└   time() - start_time = 149.39400005340576
┌ Info: Exploring node
└   branch_and_bound_node.ix = 87
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0322094
┌ Info: Price and cut time (b-and-b)
└   t = 2.3904792
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 87
│   lb = 2.7081012608208863
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 55
└   length(nodes) = 109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15254
└   sum(fire_plans.plans_per_fire) = 4988
┌ Info: Time check
└   time() - start_time = 151.8309998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 48
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285907
┌ Info: Price and cut time (b-and-b)
└   t = 0.8825693
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 48
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0  8  14  1  0  0
│     0   0   0  6  3  2  7  8  8  0   0  0  0  0
│     9   2   0  0  0  0  0  0  0  0   0  0  0  0
│     7  17  18  0  0  0  0  0  0  0   0  0  0  0
│     0   0   2  9  9  9  9  8  8  7   1  0  0  0
└     4   1   0  0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7228523
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1591801
│   obj = 2.726608039786662
└   obj_bound = 2.72649618798966
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1  1  9  15  2  1  1
│      1   1   1   7   4   3   8  9  9  1   1  1  1  1
│     10   3   1   1   1   1   1  1  1  1   1  1  1  1
│      8  18  19   1   1   1   1  1  1  1   1  1  1  1
│      1   1   3  10  10  10  10  9  9  8   2  1  1  1
└      5   2   1   1   2   2   1  1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0974314
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6024036
│   obj = 2.7266080397866626
└   obj_bound = 2.726608039786662
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  16  3  2  2
│      2   2   2   8   5   4   9  10  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   4  11  11  11  11  10  10   9   3  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0789441
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5659201
│   obj = 2.7266080397866626
└   obj_bound = 2.7266080397866626
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.726608039786662
┌ Info: current bounds
│   node_ix = 48
│   lb = 2.7081012608208863
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 56
└   length(nodes) = 111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15663
└   sum(fire_plans.plans_per_fire) = 5159
┌ Info: Time check
└   time() - start_time = 157.44599986076355
┌ Info: Exploring node
└   branch_and_bound_node.ix = 49
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285537
┌ Info: Price and cut time (b-and-b)
└   t = 1.197775
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 49
│   lb = 2.70814331773783
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 57
└   length(nodes) = 113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 15917
└   sum(fire_plans.plans_per_fire) = 5218
┌ Info: Time check
└   time() - start_time = 158.6840000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 32
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301583
┌ Info: Price and cut time (b-and-b)
└   t = 1.480139
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 32
│   lb = 2.70814331773783
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 58
└   length(nodes) = 115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16046
└   sum(fire_plans.plans_per_fire) = 5251
┌ Info: Time check
└   time() - start_time = 160.20199990272522
┌ Info: Exploring node
└   branch_and_bound_node.ix = 33
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286737
┌ Info: Price and cut time (b-and-b)
└   t = 0.821362
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 33
│   lb = 2.708200658995907
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 59
└   length(nodes) = 117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16168
└   sum(fire_plans.plans_per_fire) = 5288
┌ Info: Time check
└   time() - start_time = 161.07800006866455
┌ Info: Exploring node
└   branch_and_bound_node.ix = 116
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320049
┌ Info: Price and cut time (b-and-b)
└   t = 1.8003732
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 116
│   lb = 2.708200658995907
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 60
└   length(nodes) = 119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16214
└   sum(fire_plans.plans_per_fire) = 5318
┌ Info: Time check
└   time() - start_time = 162.91299986839294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 117
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294883
┌ Info: Price and cut time (b-and-b)
└   t = 0.6318441
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 117
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  11  8  0  0
│      0   0   0   0  6  6  8  9   4   0   0  0  0  0
│     10   0   0   0  0  0  0  0   0   0   0  0  0  0
│      4  19  19  15  0  1  2  1   1   2   0  1  0  0
│      0   0   0   0  7  6  6  6  12  13   7  6  0  0
└      7   0   0   0  0  0  0  0   0   0   0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7353107
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0860513
│   obj = 2.7266080397866626
└   obj_bound = 2.7263461889191793
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1  1   1   1   1  12  9  1  1
│      1   1   1   1  7  7  9  10   5   1   1  1  1  1
│     11   1   1   1  1  1  1   1   1   1   1  1  1  1
│      5  20  20  16  1  2  3   2   2   3   1  2  1  1
│      1   1   1   1  8  7  7   7  13  14   8  7  1  1
└      8   1   1   1  1  1  1   1   1   1   1  3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4136293
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0212514
│   obj = 2.7266080397866626
└   obj_bound = 2.7266080397866626
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  13  10  2  2
│      2   2   2   2  8  8  10  11   6   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      6  21  21  17  2  3   4   3   3   4   2   3  2  2
│      2   2   2   2  9  8   8   8  14  15   9   8  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8517729
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0230968
│   obj = 2.7266080397866626
└   obj_bound = 2.7266080397866626
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7266080397866626
┌ Info: current bounds
│   node_ix = 117
│   lb = 2.7082127055940126
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 61
└   length(nodes) = 119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16727
└   sum(fire_plans.plans_per_fire) = 5480
┌ Info: Time check
└   time() - start_time = 166.27900004386902
┌ Info: Exploring node
└   branch_and_bound_node.ix = 98
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0382154
┌ Info: Price and cut time (b-and-b)
└   t = 0.6056827
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 98
│   lb = 2.7082127055940126
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 62
└   length(nodes) = 121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16751
└   sum(fire_plans.plans_per_fire) = 5496
┌ Info: Time check
└   time() - start_time = 166.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 99
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0322895
┌ Info: Price and cut time (b-and-b)
└   t = 0.8708569
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 99
│   lb = 2.708287927157389
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 63
└   length(nodes) = 123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16868
└   sum(fire_plans.plans_per_fire) = 5533
┌ Info: Time check
└   time() - start_time = 167.85800004005432
┌ Info: Exploring node
└   branch_and_bound_node.ix = 78
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262937
┌ Info: Price and cut time (b-and-b)
└   t = 0.4241466
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 78
│   lb = 2.708287927157389
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 64
└   length(nodes) = 125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 16942
└   sum(fire_plans.plans_per_fire) = 5545
┌ Info: Time check
└   time() - start_time = 168.31699991226196
┌ Info: Exploring node
└   branch_and_bound_node.ix = 79
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311043
┌ Info: Price and cut time (b-and-b)
└   t = 1.9083651
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 79
│   lb = 2.708368041140522
└   ub = 2.726608039786662
┌ Info: number of nodes
│   node_explored_count = 65
└   length(nodes) = 127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 17117
└   sum(fire_plans.plans_per_fire) = 5602
┌ Info: Time check
└   time() - start_time = 170.27900004386902
┌ Info: Exploring node
└   branch_and_bound_node.ix = 114
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267688
┌ Info: Price and cut time (b-and-b)
└   t = 2.0533801
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 114
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  8  9  0  0
│      0   0   0   0  3  4  7  8  8   0  0  0  0  0
│     10   0   0   0  0  0  0  0  0   0  0  0  0  0
│      4  21  21  16  0  0  0  0  0   0  3  3  0  0
│      0   0   0   0  9  7  8  7  7  14  7  1  0  0
└      7   0   0   0  0  0  0  0  0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1128035
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0758288
│   obj = 2.7266080397866626
└   obj_bound = 2.7263419555365997
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1  1  1   1  9  10  1  1
│      1   1   1   1   4  5  8  9  9   1  1   1  1  1
│     11   1   1   1   1  1  1  1  1   1  1   1  1  1
│      5  22  22  17   1  1  1  1  1   1  4   4  1  1
│      1   1   1   1  10  8  9  8  8  15  8   2  1  1
└      8   1   1   1   1  1  1  1  1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1467602
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2729785
│   obj = 2.7160007909779993
└   obj_bound = 2.715885382953116
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  6   9  10  10   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      6  23  23  18   2  2   2   2   2   2   5   5  2  2
│      2   2   2   2  11  9  10   9   9  16   9   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9310682
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0799131
│   obj = 2.7160007909779997
└   obj_bound = 2.7157381747188944
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   3  11  12  3  3
│      3   3   3   3   6   7  10  11  11   3   3   3  3  3
│     13   3   3   3   3   3   3   3   3   3   3   3  3  3
│      7  24  24  19   3   3   3   3   3   3   6   6  3  3
│      3   3   3   3  12  10  11  10  10  17  10   4  3  3
└     10   3   3   3   3   3   3   3   3   3   3   5  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9405604
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0828233
│   obj = 2.7160007909779997
└   obj_bound = 2.715963774086602
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 114
│   lb = 2.708368041140522
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 66
└   length(nodes) = 129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18000
└   sum(fire_plans.plans_per_fire) = 6029
┌ Info: Time check
└   time() - start_time = 180.70099997520447
┌ Info: Exploring node
└   branch_and_bound_node.ix = 115
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288757
┌ Info: Price and cut time (b-and-b)
└   t = 2.2769088
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 115
│   lb = 2.7084396575318053
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 67
└   length(nodes) = 131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18203
└   sum(fire_plans.plans_per_fire) = 6084
┌ Info: Time check
└   time() - start_time = 183.0199999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 100
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334432
┌ Info: Price and cut time (b-and-b)
└   t = 0.4305881
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 100
│   lb = 2.7084396575318053
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 68
└   length(nodes) = 133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18264
└   sum(fire_plans.plans_per_fire) = 6092
┌ Info: Time check
└   time() - start_time = 183.4909999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 101
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339136
┌ Info: Price and cut time (b-and-b)
└   t = 1.6884736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 101
│   lb = 2.7085040067402875
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 69
└   length(nodes) = 135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18495
└   sum(fire_plans.plans_per_fire) = 6158
┌ Info: Time check
└   time() - start_time = 185.2279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 56
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0331161
┌ Info: Price and cut time (b-and-b)
└   t = 1.9670923
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 56
│   lb = 2.7085040067402875
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 70
└   length(nodes) = 137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 18636
└   sum(fire_plans.plans_per_fire) = 6217
┌ Info: Time check
└   time() - start_time = 187.24699997901917
┌ Info: Exploring node
└   branch_and_bound_node.ix = 57
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266206
┌ Info: Price and cut time (b-and-b)
└   t = 1.3514988
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 57
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0  6  14  2  0  0
│      0   0   0   1   0  5  8  9  8  0   0  0  0  0
│     10   0   0   0   0  0  0  0  0  0   0  0  0  0
│      5  20  20   1   0  0  0  0  0  0   0  0  0  0
│      0   0   0  14  11  7  8  7  7  8   1  0  0  0
└      5   0   0   0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1496618
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0624895
│   obj = 2.7160007909779993
└   obj_bound = 2.715738998098459
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1   1  1  7  15  3  1  1
│      1   1   1   2   1  6  9  10  9  1   1  1  1  1
│     11   1   1   1   1  1  1   1  1  1   1  1  1  1
│      6  21  21   2   1  1  1   1  1  1   1  1  1  1
│      1   1   1  15  12  8  9   8  8  9   2  1  1  1
└      6   1   1   1   2  1  1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5555899
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1482683
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   8  16  4  2  2
│      2   2   2   3   2  7  10  11  10   2   2  2  2  2
│     12   2   2   2   2  2   2   2   2   2   2  2  2  2
│      7  22  22   3   2  2   2   2   2   2   2  2  2  2
│      2   2   2  16  13  9  10   9   9  10   3  2  2  2
└      7   2   2   2   3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9350514
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.17671
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 57
│   lb = 2.7085040704720167
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 71
└   length(nodes) = 139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19413
└   sum(fire_plans.plans_per_fire) = 6539
┌ Info: Time check
└   time() - start_time = 194.1470000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 120
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319968
┌ Info: Price and cut time (b-and-b)
└   t = 0.5968152
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 120
│   lb = 2.7085040704720167
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 72
└   length(nodes) = 141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19489
└   sum(fire_plans.plans_per_fire) = 6552
┌ Info: Time check
└   time() - start_time = 194.79699993133545
┌ Info: Exploring node
└   branch_and_bound_node.ix = 121
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0337423
┌ Info: Price and cut time (b-and-b)
└   t = 1.9613544
┌ Info: current bounds
│   node_ix = 121
│   lb = 2.708578564067023
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 73
└   length(nodes) = 141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19702
└   sum(fire_plans.plans_per_fire) = 6616
┌ Info: Time check
└   time() - start_time = 196.79999995231628
┌ Info: Exploring node
└   branch_and_bound_node.ix = 38
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307656
┌ Info: Price and cut time (b-and-b)
└   t = 0.5048603
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 38
│   lb = 2.708578564067023
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 74
└   length(nodes) = 143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19726
└   sum(fire_plans.plans_per_fire) = 6637
┌ Info: Time check
└   time() - start_time = 197.34500002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 39
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276853
┌ Info: Price and cut time (b-and-b)
└   t = 1.2296139
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 39
│   lb = 2.7086014326390457
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 75
└   length(nodes) = 145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 19916
└   sum(fire_plans.plans_per_fire) = 6698
┌ Info: Time check
└   time() - start_time = 199.0019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 110
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0327146
┌ Info: Price and cut time (b-and-b)
└   t = 0.5772046
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 110
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0  7  14  1  0  0
│     0   0   0  6  2  2  6  7  7  0   0  0  0  0
│     9   2   0  0  0  0  0  0  0  0   0  0  0  0
│     7  17  18  0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  9  9  9  9  8  8  7   1  0  0  0
└     4   1   2  0  1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8069174
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0727828
│   obj = 2.7160007909779997
└   obj_bound = 2.7157384830072795
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1  1  8  15  2  1  1
│      1   1   1   7   3   3   7  8  8  1   1  1  1  1
│     10   3   1   1   1   1   1  1  1  1   1  1  1  1
│      8  18  19   1   1   1   1  1  1  1   1  1  1  1
│      1   1   1  10  10  10  10  9  9  8   2  1  1  1
└      5   2   3   1   2   1   1  1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.9429536
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1676394
│   obj = 2.7160007909779997
└   obj_bound = 2.715850596712552
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   8   4   4   8   9   9  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  11  11  11  11  10  10  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4136073
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.6455433
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779997
┌ Info: current bounds
│   node_ix = 110
│   lb = 2.7086014326390457
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 76
└   length(nodes) = 147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20614
└   sum(fire_plans.plans_per_fire) = 6914
┌ Info: Time check
└   time() - start_time = 206.22499990463257
┌ Info: Exploring node
└   branch_and_bound_node.ix = 111
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279167
┌ Info: Price and cut time (b-and-b)
└   t = 2.0098394
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 111
│   lb = 2.708692352986313
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 77
└   length(nodes) = 149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20795
└   sum(fire_plans.plans_per_fire) = 6991
┌ Info: Time check
└   time() - start_time = 208.2779998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 132
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286487
┌ Info: Price and cut time (b-and-b)
└   t = 0.8425704
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 132
│   lb = 2.708692352986313
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 78
└   length(nodes) = 151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 20825
└   sum(fire_plans.plans_per_fire) = 7009
┌ Info: Time check
└   time() - start_time = 209.15599989891052
┌ Info: Exploring node
└   branch_and_bound_node.ix = 133
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306838
┌ Info: Price and cut time (b-and-b)
└   t = 1.3097622
┌ Info: current bounds
│   node_ix = 133
│   lb = 2.7086962007849635
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 79
└   length(nodes) = 151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21029
└   sum(fire_plans.plans_per_fire) = 7074
┌ Info: Time check
└   time() - start_time = 210.5090000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 54
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295673
┌ Info: Price and cut time (b-and-b)
└   t = 1.5499183
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 54
│   lb = 2.7086962007849635
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 80
└   length(nodes) = 153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21141
└   sum(fire_plans.plans_per_fire) = 7120
┌ Info: Time check
└   time() - start_time = 212.11100006103516
┌ Info: Exploring node
└   branch_and_bound_node.ix = 55
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255281
┌ Info: Price and cut time (b-and-b)
└   t = 1.206645
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 55
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0  6  14  2  0  0
│      0   0   0  8  2  3   6   6   6  0   0  0  0  0
│     10   0   0  0  0  0   0   0   0  0   0  0  0  0
│      5  20  20  1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  6  9  8  10  10  10  9   1  0  0  0
└      5   0   0  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5675057
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.092606
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1   1  1   1   1   1   7  15  3  1  1
│      1   1   1  9   3  4   7   7   7   1   1  1  1  1
│     11   1   1  1   1  1   1   1   1   1   1  1  1  1
│      6  21  21  2   1  1   1   1   1   1   1  1  1  1
│      1   1   1  7  10  9  11  11  11  10   2  1  1  1
└      6   1   1  1   2  1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.4260622
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1483353
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2  10   4   5   8   8   8   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8  11  10  12  12  12  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3376425
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.204729
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 55
│   lb = 2.7088462418409733
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 81
└   length(nodes) = 155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21860
└   sum(fire_plans.plans_per_fire) = 7428
┌ Info: Time check
└   time() - start_time = 218.65199995040894
┌ Info: Exploring node
└   branch_and_bound_node.ix = 118
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02689
┌ Info: Price and cut time (b-and-b)
└   t = 0.7266976
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 118
│   lb = 2.7088462418409733
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 82
└   length(nodes) = 157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 21936
└   sum(fire_plans.plans_per_fire) = 7453
┌ Info: Time check
└   time() - start_time = 219.42000007629395
┌ Info: Exploring node
└   branch_and_bound_node.ix = 119
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0342385
┌ Info: Price and cut time (b-and-b)
└   t = 2.0011278
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 119
│   lb = 2.7088462418409733
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 83
└   length(nodes) = 159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22174
└   sum(fire_plans.plans_per_fire) = 7520
┌ Info: Time check
└   time() - start_time = 221.46799993515015
┌ Info: Exploring node
└   branch_and_bound_node.ix = 156
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292165
┌ Info: Price and cut time (b-and-b)
└   t = 1.4083343
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 156
│   lb = 2.7088462418409733
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 84
└   length(nodes) = 161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22220
└   sum(fire_plans.plans_per_fire) = 7555
┌ Info: Time check
└   time() - start_time = 222.92700004577637
┌ Info: Exploring node
└   branch_and_bound_node.ix = 157
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312026
┌ Info: Price and cut time (b-and-b)
└   t = 1.930299
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 157
│   lb = 2.708947920830354
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 85
└   length(nodes) = 163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22432
└   sum(fire_plans.plans_per_fire) = 7606
┌ Info: Time check
└   time() - start_time = 224.89800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 142
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1179718
┌ Info: Price and cut time (b-and-b)
└   t = 0.5063395
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 142
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  7  15  1  0  0
│     0   0   0   0  3  4  8  9  8  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  16  9  7  8  7  8  8   1  0  0  0
└     4   1   2   0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5975851
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0575735
│   obj = 2.7160007909779997
└   obj_bound = 2.715734992473238
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1   1  1  8  16  2  1  1
│      1   1   1   1   4  5  9  10  9  1   1  1  1  1
│     10   3   1   1   1  1  1   1  1  1   1  1  1  1
│      8  18  19   1   1  1  1   1  1  1   1  1  1  1
│      1   1   1  17  10  8  9   8  9  9   2  1  1  1
└      5   2   3   1   2  2  1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.2618584
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1310248
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  3  2  2
│      2   2   2   2   5  6  10  11  10   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  18  11  9  10   9  10  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5495055
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.148793
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779997
┌ Info: current bounds
│   node_ix = 142
│   lb = 2.708947920830354
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 86
└   length(nodes) = 165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 22920
└   sum(fire_plans.plans_per_fire) = 7832
┌ Info: Time check
└   time() - start_time = 230.84599995613098
┌ Info: Exploring node
└   branch_and_bound_node.ix = 143
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277034
┌ Info: Price and cut time (b-and-b)
└   t = 1.3318977
┌ Info: current bounds
│   node_ix = 143
│   lb = 2.7091938538623523
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 87
└   length(nodes) = 165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23170
└   sum(fire_plans.plans_per_fire) = 7901
┌ Info: Time check
└   time() - start_time = 232.2170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 136
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294579
┌ Info: Price and cut time (b-and-b)
└   t = 1.5336336
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 136
│   lb = 2.7091938538623523
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 88
└   length(nodes) = 167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23453
└   sum(fire_plans.plans_per_fire) = 7963
┌ Info: Time check
└   time() - start_time = 233.79399991035461
┌ Info: Exploring node
└   branch_and_bound_node.ix = 137
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224263
┌ Info: Price and cut time (b-and-b)
└   t = 0.9989448
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 137
│   lb = 2.7092931989422016
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 89
└   length(nodes) = 169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23648
└   sum(fire_plans.plans_per_fire) = 7991
┌ Info: Time check
└   time() - start_time = 234.82800006866455
┌ Info: Exploring node
└   branch_and_bound_node.ix = 94
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027055
┌ Info: Price and cut time (b-and-b)
└   t = 1.6451313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 94
│   lb = 2.7092931989422016
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 90
└   length(nodes) = 171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 23714
└   sum(fire_plans.plans_per_fire) = 8036
┌ Info: Time check
└   time() - start_time = 236.50699996948242
┌ Info: Exploring node
└   branch_and_bound_node.ix = 95
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347193
┌ Info: Price and cut time (b-and-b)
└   t = 1.6568738
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 95
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0  0  8  14  1  0  0
│     0   0   0   0  6  6  7   6  7  0   0  0  0  0
│     9   2   0   0  0  0  0   0  0  0   0  0  0  0
│     7  17  18   0  0  0  0   0  0  0   0  0  0  0
│     0   0   0  16  5  6  9  10  9  6   1  0  0  0
└     4   1   1   0  1  0  0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8490144
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1104174
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  9  15  2  1  1
│      1   1   1   1  7  7   8   7   8  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  17  6  7  10  11  10  7   2  1  1  1
└      5   2   2   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0854239
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1234943
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  10  16  3  2  2
│      2   2   2   2  8  8   9   8   9   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  18  7  8  11  12  11   8   3  2  2  2
└      6   3   3   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6902292
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1681536
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779997
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 95
│   lb = 2.7093989622115227
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 91
└   length(nodes) = 173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24231
└   sum(fire_plans.plans_per_fire) = 8270
┌ Info: Time check
└   time() - start_time = 242.79299998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 138
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262237
┌ Info: Price and cut time (b-and-b)
└   t = 0.7266887
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 138
│   lb = 2.7093989622115227
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 92
└   length(nodes) = 175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24303
└   sum(fire_plans.plans_per_fire) = 8304
┌ Info: Time check
└   time() - start_time = 243.55200004577637
┌ Info: Exploring node
└   branch_and_bound_node.ix = 139
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304609
┌ Info: Price and cut time (b-and-b)
└   t = 1.1496162
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 139
│   lb = 2.7094149423130514
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 93
└   length(nodes) = 177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24469
└   sum(fire_plans.plans_per_fire) = 8351
┌ Info: Time check
└   time() - start_time = 244.75499987602234
┌ Info: Exploring node
└   branch_and_bound_node.ix = 128
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298091
┌ Info: Price and cut time (b-and-b)
└   t = 1.3736111
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 128
│   lb = 2.7094149423130514
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 94
└   length(nodes) = 179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24558
└   sum(fire_plans.plans_per_fire) = 8379
┌ Info: Time check
└   time() - start_time = 246.17400002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 129
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284393
┌ Info: Price and cut time (b-and-b)
└   t = 2.6903443
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 129
│   lb = 2.7094402691585957
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 95
└   length(nodes) = 181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 24831
└   sum(fire_plans.plans_per_fire) = 8451
┌ Info: Time check
└   time() - start_time = 248.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 174
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265335
┌ Info: Price and cut time (b-and-b)
└   t = 2.085358
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 174
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0  6  15  2  0  0
│      0   0   0   1   0  3  8  9  9  0   0  0  0  0
│     10   0   0   0   0  0  0  0  0  0   0  0  0  0
│      5  20  20   1   0  0  0  0  0  0   0  0  0  0
│      0   0   0  13  11  8  7  6  6  9   1  0  0  0
└      5   0   0   0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8825437
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0534975
│   obj = 2.7160007909779993
└   obj_bound = 2.7157989399371827
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1   1   1   7  16  3  1  1
│      1   1   1   2   1  4  9  10  10   1   1  1  1  1
│     11   1   1   1   1  1  1   1   1   1   1  1  1  1
│      6  21  21   2   1  1  1   1   1   1   1  1  1  1
│      1   1   1  14  12  9  8   7   7  10   2  1  1  1
└      6   1   1   1   2  1  1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2857068
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1298607
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779997
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   3   2   5  10  11  11   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  15  13  10   9   8   8  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7869623
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.320745
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 174
│   lb = 2.7094402691585957
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 96
└   length(nodes) = 183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25565
└   sum(fire_plans.plans_per_fire) = 8769
┌ Info: Time check
└   time() - start_time = 256.0149998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 175
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267854
┌ Info: Price and cut time (b-and-b)
└   t = 1.2045141
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 175
│   lb = 2.709466721472925
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 97
└   length(nodes) = 185
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25778
└   sum(fire_plans.plans_per_fire) = 8821
┌ Info: Time check
└   time() - start_time = 257.26900005340576
┌ Info: Exploring node
└   branch_and_bound_node.ix = 168
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287913
┌ Info: Price and cut time (b-and-b)
└   t = 1.1224742
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 168
│   lb = 2.709466721472925
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 98
└   length(nodes) = 187
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 25901
└   sum(fire_plans.plans_per_fire) = 8850
┌ Info: Time check
└   time() - start_time = 258.4370000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 169
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312818
┌ Info: Price and cut time (b-and-b)
└   t = 1.396399
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 169
│   lb = 2.7094667214729253
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 99
└   length(nodes) = 189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26184
└   sum(fire_plans.plans_per_fire) = 8916
┌ Info: Time check
└   time() - start_time = 259.87599992752075
┌ Info: Exploring node
└   branch_and_bound_node.ix = 186
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309836
┌ Info: Price and cut time (b-and-b)
└   t = 1.2064234
┌ Info: current bounds
│   node_ix = 186
│   lb = 2.7094667214729253
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 100
└   length(nodes) = 189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26350
└   sum(fire_plans.plans_per_fire) = 8956
┌ Info: Time check
└   time() - start_time = 261.1289999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 187
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285869
┌ Info: Price and cut time (b-and-b)
└   t = 2.2523863
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 187
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0  6  14  2  0  0
│      0   0   0   0  6  5  8  6   6  0   0  0  0  0
│     10   0   0   0  0  0  0  0   0  0   0  0  0  0
│      5  20  20   1  0  0  0  0   0  0   0  0  0  0
│      0   0   0  15  5  7  8  9  10  9   1  0  0  0
└      5   0   0   0  1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.026627
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0977999
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1  1   1   1   7  15  3  1  1
│      1   1   1   1  7  6  9   7   7   1   1  1  1  1
│     11   1   1   1  1  1  1   1   1   1   1  1  1  1
│      6  21  21   2  1  1  1   1   1   1   1  1  1  1
│      1   1   1  16  6  8  9  10  11  10   2  1  1  1
└      6   1   1   1  2  1  1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8484621
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1905894
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  16  4  2  2
│      2   2   2   2  8  7  10   8   8   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  9  10  11  12  11   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5487264
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1452481
│   obj = 2.7160007909779997
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779997
┌ Info: current bounds
│   node_ix = 187
│   lb = 2.709532602273177
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 101
└   length(nodes) = 191
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26874
└   sum(fire_plans.plans_per_fire) = 9247
┌ Info: Time check
└   time() - start_time = 268.7669999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 102
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266236
┌ Info: Price and cut time (b-and-b)
└   t = 1.6553314
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 102
│   lb = 2.709532602273177
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 102
└   length(nodes) = 193
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 26977
└   sum(fire_plans.plans_per_fire) = 9286
┌ Info: Time check
└   time() - start_time = 270.4630000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 103
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259586
┌ Info: Price and cut time (b-and-b)
└   t = 1.7424804
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 103
│   lb = 2.7095391068913215
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 103
└   length(nodes) = 195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27181
└   sum(fire_plans.plans_per_fire) = 9338
┌ Info: Time check
└   time() - start_time = 272.6199998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 176
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252637
┌ Info: Price and cut time (b-and-b)
└   t = 0.5001456
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 176
│   lb = 2.7095391068913215
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 104
└   length(nodes) = 197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27299
└   sum(fire_plans.plans_per_fire) = 9366
┌ Info: Time check
└   time() - start_time = 273.16100001335144
┌ Info: Exploring node
└   branch_and_bound_node.ix = 177
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270696
┌ Info: Price and cut time (b-and-b)
└   t = 1.3968891
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 177
│   lb = 2.7095391068913215
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 105
└   length(nodes) = 199
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 27569
└   sum(fire_plans.plans_per_fire) = 9430
┌ Info: Time check
└   time() - start_time = 274.61100006103516
┌ Info: Exploring node
└   branch_and_bound_node.ix = 196
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257778
┌ Info: Price and cut time (b-and-b)
└   t = 1.2969511
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 196
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0  6  14  2  0  0
│      0   0   0   0   0  9  9  7  7  0   0  0  0  0
│     10   0   0   0   0  0  0  0  0  0   0  0  0  0
│      5  20  20   1   0  0  0  0  0  0   0  0  0  0
│      0   0   0  15  12  3  6  8  9  9   1  0  0  0
└      5   0   0   0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7746224
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1292924
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1   1   7  15  3  1  1
│      1   1   1   1   1  10  10  8   8   1   1  1  1  1
│     11   1   1   1   1   1   1  1   1   1   1  1  1  1
│      6  21  21   2   1   1   1  1   1   1   1  1  1  1
│      1   1   1  16  13   4   7  9  10  10   2  1  1  1
└      6   1   1   1   2   1   1  1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7018616
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1790745
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2   2   2  11  11   9   9   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  14   5   8  10  11  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0850502
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1626217
│   obj = 2.7160007909779993
└   obj_bound = 2.7160007909779993
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7160007909779993
┌ Info: current bounds
│   node_ix = 196
│   lb = 2.7095391068913215
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 106
└   length(nodes) = 201
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28153
└   sum(fire_plans.plans_per_fire) = 9685
┌ Info: Time check
└   time() - start_time = 280.47199988365173
┌ Info: Exploring node
└   branch_and_bound_node.ix = 197
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310879
┌ Info: Price and cut time (b-and-b)
└   t = 2.3062673
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 197
│   lb = 2.7095433387906356
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 107
└   length(nodes) = 203
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28379
└   sum(fire_plans.plans_per_fire) = 9760
┌ Info: Time check
└   time() - start_time = 282.8250000476837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 70
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266117
┌ Info: Price and cut time (b-and-b)
└   t = 1.1712378
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 70
│   lb = 2.7095433387906356
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 108
└   length(nodes) = 205
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28511
└   sum(fire_plans.plans_per_fire) = 9803
┌ Info: Time check
└   time() - start_time = 284.0390000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 71
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.036412
┌ Info: Price and cut time (b-and-b)
└   t = 1.2056374
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 71
│   lb = 2.709555018944334
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 109
└   length(nodes) = 207
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28685
└   sum(fire_plans.plans_per_fire) = 9841
┌ Info: Time check
└   time() - start_time = 285.29500007629395
┌ Info: Exploring node
└   branch_and_bound_node.ix = 158
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306574
┌ Info: Price and cut time (b-and-b)
└   t = 1.5755252
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 158
│   lb = 2.709555018944334
└   ub = 2.7160007909779993
┌ Info: number of nodes
│   node_explored_count = 110
└   length(nodes) = 209
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 28757
└   sum(fire_plans.plans_per_fire) = 9875
┌ Info: Time check
└   time() - start_time = 286.9140000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 159
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326404
┌ Info: Price and cut time (b-and-b)
└   t = 2.3853435
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 159
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0   0   0   0  8  9  0  0
│      0   0   0   0  10  10   4   4   4   0  0  0  0  0
│     10   0   0   0   0   0   0   0   0   0  0  0  0  0
│      3  20  20  15   0   0   0   0   0   0  2  2  0  0
│      0   0   0   0   2   2  12  11  11  14  8  1  0  0
└      7   0   0   0   0   0   0   0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5822768
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0628422
│   obj = 2.7160007909779997
└   obj_bound = 2.7157535743226617
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   1  9  10  1  1
│      1   1   1   1  11  11   5   5   5   1  1   1  1  1
│     11   1   1   1   1   1   1   1   1   1  1   1  1  1
│      4  21  21  16   1   1   1   1   1   1  3   3  1  1
│      1   1   1   1   3   3  13  12  12  15  9   2  1  1
└      8   1   1   1   1   1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.2770251
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0269627
│   obj = 2.7160007909779997
└   obj_bound = 2.715788178849561
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  11  2  2
│      2   2   2   2  12  12   6   6   6   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2   4   4  14  13  13  16  10   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8502363
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1107276
│   obj = 2.7159779280349547
└   obj_bound = 2.7159454329379997
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3   3   3   3   3   3  11  12  3  3
│      3   3   3   3  13  13   7   7   7   3   3   3  3  3
│     13   3   3   3   3   3   3   3   3   3   3   3  3  3
│      6  23  23  18   3   3   3   3   3   3   5   5  3  3
│      3   3   3   3   5   5  15  14  14  17  11   4  3  3
└     10   3   3   3   3   3   3   3   3   3   3   5  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8106093
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1086387
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   4  12  13  4  4
│      4   4   4   4  14  14   8   8   8   4   4   4  4  4
│     14   4   4   4   4   4   4   4   4   4   4   4  4  4
│      7  24  24  19   4   4   4   4   4   4   6   6  4  4
│      4   4   4   4   6   6  16  15  15  18  12   5  4  4
└     11   4   4   4   4   4   4   4   4   4   4   6  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9213154
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1088617
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349547
┌ Info: current bounds
│   node_ix = 159
│   lb = 2.709587499560815
└   ub = 2.7159779280349547
┌ Info: number of nodes
│   node_explored_count = 111
└   length(nodes) = 211
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29514
└   sum(fire_plans.plans_per_fire) = 10316
┌ Info: Time check
└   time() - start_time = 298.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 206
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304008
┌ Info: Price and cut time (b-and-b)
└   t = 0.6847963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 206
│   lb = 2.709587499560815
└   ub = 2.7159779280349547
┌ Info: number of nodes
│   node_explored_count = 112
└   length(nodes) = 213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29599
└   sum(fire_plans.plans_per_fire) = 10338
┌ Info: Time check
└   time() - start_time = 298.8420000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 207
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295947
┌ Info: Price and cut time (b-and-b)
└   t = 1.134386
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 207
│   lb = 2.709587499560816
└   ub = 2.7159779280349547
┌ Info: number of nodes
│   node_explored_count = 113
└   length(nodes) = 215
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29788
└   sum(fire_plans.plans_per_fire) = 10383
┌ Info: Time check
└   time() - start_time = 300.0329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 212
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323782
┌ Info: Price and cut time (b-and-b)
└   t = 1.8876746
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 212
│   lb = 2.709587499560816
└   ub = 2.7159779280349547
┌ Info: number of nodes
│   node_explored_count = 114
└   length(nodes) = 217
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 29939
└   sum(fire_plans.plans_per_fire) = 10422
┌ Info: Time check
└   time() - start_time = 301.95499992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 213
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0327825
┌ Info: Price and cut time (b-and-b)
└   t = 1.8676225
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 213
│   lb = 2.7096084348040157
└   ub = 2.7159779280349547
┌ Info: number of nodes
│   node_explored_count = 115
└   length(nodes) = 219
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30059
└   sum(fire_plans.plans_per_fire) = 10463
┌ Info: Time check
└   time() - start_time = 303.87999987602234
┌ Info: Exploring node
└   branch_and_bound_node.ix = 106
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0342023
┌ Info: Price and cut time (b-and-b)
└   t = 1.0568079
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 106
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  7  14  2  0  0
│     0   0   0  9  6  6   5   3   2  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  6  5  5  11  13  14  8   1  0  0  0
└     4   1   2  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4832828
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0647517
│   obj = 2.7159779280349543
└   obj_bound = 2.7157223512741435
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  15  3  1  1
│      1   1   1  10  7  7   6   4   3  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1   7  6  6  12  14  15  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4712587
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.178346
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   9  16  4  2  2
│      2   2   2  11  8  8   7   5   4   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2   8  7  7  13  15  16  10   3  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4566859
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3045157
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 106
│   lb = 2.7096084348040157
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 116
└   length(nodes) = 221
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30637
└   sum(fire_plans.plans_per_fire) = 10686
┌ Info: Time check
└   time() - start_time = 310.47199988365173
┌ Info: Exploring node
└   branch_and_bound_node.ix = 107
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309613
┌ Info: Price and cut time (b-and-b)
└   t = 1.4159755
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 107
│   lb = 2.70966632063745
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 117
└   length(nodes) = 223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30744
└   sum(fire_plans.plans_per_fire) = 10726
┌ Info: Time check
└   time() - start_time = 311.9210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 162
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0338894
┌ Info: Price and cut time (b-and-b)
└   t = 1.5450307
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 162
│   lb = 2.70966632063745
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 118
└   length(nodes) = 225
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 30800
└   sum(fire_plans.plans_per_fire) = 10764
┌ Info: Time check
└   time() - start_time = 313.5279998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 163
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290407
┌ Info: Price and cut time (b-and-b)
└   t = 1.659141
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 163
│   lb = 2.709700071387119
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 119
└   length(nodes) = 227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31029
└   sum(fire_plans.plans_per_fire) = 10821
┌ Info: Time check
└   time() - start_time = 315.2170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 152
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259414
┌ Info: Price and cut time (b-and-b)
└   t = 1.5213675
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 152
│   lb = 2.709700071387119
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 120
└   length(nodes) = 229
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31213
└   sum(fire_plans.plans_per_fire) = 10873
┌ Info: Time check
└   time() - start_time = 316.79299998283386
┌ Info: Exploring node
└   branch_and_bound_node.ix = 153
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023123
┌ Info: Price and cut time (b-and-b)
└   t = 0.8644199
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 153
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0  7  14  2  0  0
│      0   0   0  9  6  5   5   4   4  0   0  0  0  0
│     10   0   0  0  0  0   0   0   0  0   0  0  0  0
│      5  20  20  1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  5  6  7  11  12  12  8   1  0  0  0
└      5   0   0  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5452107
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1690603
│   obj = 2.7159779280349543
└   obj_bound = 2.715977928034154
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  15  3  1  1
│      1   1   1  10  7  6   6   5   5  1   1  1  1  1
│     11   1   1   1  1  1   1   1   1  1   1  1  1  1
│      6  21  21   2  1  1   1   1   1  1   1  1  1  1
│      1   1   1   6  7  8  12  13  13  9   2  1  1  1
└      6   1   1   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9743636
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.20052
│   obj = 2.7159779280349547
└   obj_bound = 2.7159779280349547
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   9  16  4  2  2
│      2   2   2  11  8  7   7   6   6   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2   7  8  9  13  14  14  10   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4796196
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2268118
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 153
│   lb = 2.7097358980308615
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 121
└   length(nodes) = 231
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 31984
└   sum(fire_plans.plans_per_fire) = 11105
┌ Info: Time check
└   time() - start_time = 322.78799986839294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 230
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025707
┌ Info: Price and cut time (b-and-b)
└   t = 1.2312312
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 230
│   lb = 2.7097358980308615
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 122
└   length(nodes) = 233
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32099
└   sum(fire_plans.plans_per_fire) = 11148
┌ Info: Time check
└   time() - start_time = 324.0629999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 231
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0435305
┌ Info: Price and cut time (b-and-b)
└   t = 1.6775746
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 231
│   lb = 2.7097663634551616
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 123
└   length(nodes) = 235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32260
└   sum(fire_plans.plans_per_fire) = 11203
┌ Info: Time check
└   time() - start_time = 325.7999999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 224
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298561
┌ Info: Price and cut time (b-and-b)
└   t = 2.0784531
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 224
│   lb = 2.7097663634551616
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 124
└   length(nodes) = 237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32414
└   sum(fire_plans.plans_per_fire) = 11254
┌ Info: Time check
└   time() - start_time = 327.9229998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 225
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334687
┌ Info: Price and cut time (b-and-b)
└   t = 1.4191532
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 225
│   lb = 2.7098648724929024
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 125
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32496
└   sum(fire_plans.plans_per_fire) = 11276
┌ Info: Time check
└   time() - start_time = 329.38899993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 90
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0351272
┌ Info: Price and cut time (b-and-b)
└   t = 1.4563011
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 90
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0  0  8  14  1  0  0
│     0   0   2   0  6  5  7   6  7  1   0  0  0  0
│     9   2   0   0  0  0  0   0  0  0   0  0  0  0
│     7  17  18   0  0  0  0   0  0  0   0  0  0  0
│     0   0   1  15  5  6  9  10  9  7   1  0  0  0
└     5   2   1   0  2  1  0   0  0  0   3  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9531454
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1268381
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  9  15  2  1  1
│      1   1   3   1  7  6   8   7   8  2   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   2  16  6  7  10  11  10  8   2  1  1  1
└      6   3   2   1  3  2   1   1   1  1   4  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2798527
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1510056
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  10  16  3  2  2
│      2   2   4   2  8  7   9   8   9   3   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   3  17  7  8  11  12  11   9   3  2  2  2
└      7   4   3   2  4  3   2   2   2   2   5  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4074006
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2229779
│   obj = 2.7159779280349543
└   obj_bound = 2.7159004679736345
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 90
│   lb = 2.7098648724929024
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 126
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 32977
└   sum(fire_plans.plans_per_fire) = 11509
┌ Info: Time check
└   time() - start_time = 335.54500007629395
┌ Info: Exploring node
└   branch_and_bound_node.ix = 91
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279406
┌ Info: Price and cut time (b-and-b)
└   t = 1.3729602
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 91
│   lb = 2.7099643839829257
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 127
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33160
└   sum(fire_plans.plans_per_fire) = 11554
┌ Info: Time check
└   time() - start_time = 336.9539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 216
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033502
┌ Info: Price and cut time (b-and-b)
└   t = 1.31748
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 216
│   lb = 2.7099643839829257
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 128
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33205
└   sum(fire_plans.plans_per_fire) = 11576
┌ Info: Time check
└   time() - start_time = 338.32099986076355
┌ Info: Exploring node
└   branch_and_bound_node.ix = 217
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320119
┌ Info: Price and cut time (b-and-b)
└   t = 1.1894189
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 217
│   lb = 2.710020828175088
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 129
└   length(nodes) = 247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33305
└   sum(fire_plans.plans_per_fire) = 11607
┌ Info: Time check
└   time() - start_time = 339.5620000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 124
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348142
┌ Info: Price and cut time (b-and-b)
└   t = 1.3094674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 124
│   lb = 2.710020828175088
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 130
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 33385
└   sum(fire_plans.plans_per_fire) = 11644
┌ Info: Time check
└   time() - start_time = 340.9159998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 125
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299372
┌ Info: Price and cut time (b-and-b)
└   t = 0.7665831
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 125
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  14  1  0  0
│     0   0   0   0   0   0  12  10  9  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   6  7  7   1  0  0  0
└     4   1   2   0   1   0   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6232677
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0709692
│   obj = 2.7159779280349547
└   obj_bound = 2.7159409280349545
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  2  1  1
│      1   1   1   1   1   1  13  11  10  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   7   8  8   2  1  1  1
└      5   2   3   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9414981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1348935
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   2   2  14  12  11  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  13  13   5   8   9  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1311571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4472629
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349547
┌ Info: current bounds
│   node_ix = 125
│   lb = 2.7100225098646193
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 131
└   length(nodes) = 251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34052
└   sum(fire_plans.plans_per_fire) = 11869
┌ Info: Time check
└   time() - start_time = 346.6029999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 248
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305455
┌ Info: Price and cut time (b-and-b)
└   t = 1.4774334
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 248
│   lb = 2.7100225098646193
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 132
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34169
└   sum(fire_plans.plans_per_fire) = 11899
┌ Info: Time check
└   time() - start_time = 348.1269998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 249
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315359
┌ Info: Price and cut time (b-and-b)
└   t = 0.8281759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 249
│   lb = 2.7100633137686407
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 133
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34273
└   sum(fire_plans.plans_per_fire) = 11922
┌ Info: Time check
└   time() - start_time = 349.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 190
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0367431
┌ Info: Price and cut time (b-and-b)
└   t = 0.8577202
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 190
│   lb = 2.7100633137686407
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 134
└   length(nodes) = 257
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34341
└   sum(fire_plans.plans_per_fire) = 11946
┌ Info: Time check
└   time() - start_time = 349.914999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 191
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330053
┌ Info: Price and cut time (b-and-b)
└   t = 1.2368497
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 191
│   lb = 2.710069595143726
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 135
└   length(nodes) = 259
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 34486
└   sum(fire_plans.plans_per_fire) = 11989
┌ Info: Time check
└   time() - start_time = 351.20300006866455
┌ Info: Exploring node
└   branch_and_bound_node.ix = 226
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348237
┌ Info: Price and cut time (b-and-b)
└   t = 1.1351821
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 226
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0   0  8  9  0  0
│      0   0   0   0  7  5  12   5   4   0  0  0  0  0
│     10   0   0   0  0  0   0   0   0   0  0  0  0  0
│      3  20  20  15  0  0   0   0   0   0  2  2  0  0
│      0   0   0   0  6  6   3  11  12  14  8  1  0  0
└      7   0   0   0  0  0   0   0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6787813
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0705486
│   obj = 2.7159779280349547
└   obj_bound = 2.7159246810279
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  9  10  1  1
│      1   1   1   1  8  6  13   6   5   1  1   1  1  1
│     11   1   1   1  1  1   1   1   1   1  1   1  1  1
│      4  21  21  16  1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  7  7   4  12  13  15  9   2  1  1
└      8   1   1   1  1  1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.6460432
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0897728
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  9  7  14   7   6   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  8  8   5  13  14  16  10   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7110139
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1170047
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349547
┌ Info: current bounds
│   node_ix = 226
│   lb = 2.710069595143726
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 136
└   length(nodes) = 261
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35186
└   sum(fire_plans.plans_per_fire) = 12274
┌ Info: Time check
└   time() - start_time = 358.2019999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 227
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0329282
┌ Info: Price and cut time (b-and-b)
└   t = 3.0084711
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 227
│   lb = 2.710100913093513
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 137
└   length(nodes) = 263
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35432
└   sum(fire_plans.plans_per_fire) = 12340
┌ Info: Time check
└   time() - start_time = 361.2649998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 140
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0349918
┌ Info: Price and cut time (b-and-b)
└   t = 0.6846656
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 140
│   lb = 2.710100913093513
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 138
└   length(nodes) = 265
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35530
└   sum(fire_plans.plans_per_fire) = 12355
┌ Info: Time check
└   time() - start_time = 362.00999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 141
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0408162
┌ Info: Price and cut time (b-and-b)
└   t = 1.0371171
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 141
│   lb = 2.7101031594024008
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 139
└   length(nodes) = 267
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35677
└   sum(fire_plans.plans_per_fire) = 12390
┌ Info: Time check
└   time() - start_time = 363.11500000953674
┌ Info: Exploring node
└   branch_and_bound_node.ix = 220
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0378579
┌ Info: Price and cut time (b-and-b)
└   t = 1.3070061
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 220
│   lb = 2.7101031594024008
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 140
└   length(nodes) = 269
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 35750
└   sum(fire_plans.plans_per_fire) = 12420
┌ Info: Time check
└   time() - start_time = 364.47699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 221
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0391739
┌ Info: Price and cut time (b-and-b)
└   t = 0.8718364
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 221
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  7  14  1  0  0
│     0   0   0  9  6  6   5   3   2  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  7  5  5  11  13  14  7   1  0  0  0
└     4   1   2  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8094406
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.095854
│   obj = 2.7159779280349543
└   obj_bound = 2.7158087470664665
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  15  2  1  1
│      1   1   1  10  7  7   6   4   3  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1   8  6  6  12  14  15  8   2  1  1  1
└      5   2   3   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.168939
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.450136
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  9  16  3  2  2
│      2   2   2  11  8  8   7   5   4  2   2  2  2  2
│     11   4   2   2  2  2   2   2   2  2   2  2  2  2
│      9  19  20   2  2  2   2   2   2  2   2  2  2  2
│      2   2   2   9  7  7  13  15  16  9   3  2  2  2
└      6   3   4   2  3  2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1769101
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2627093
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 221
│   lb = 2.710103853041312
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 141
└   length(nodes) = 271
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36288
└   sum(fire_plans.plans_per_fire) = 12655
┌ Info: Time check
└   time() - start_time = 371.9760000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 266
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0415152
┌ Info: Price and cut time (b-and-b)
└   t = 1.215589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 266
│   lb = 2.710103853041312
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 142
└   length(nodes) = 273
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36411
└   sum(fire_plans.plans_per_fire) = 12702
┌ Info: Time check
└   time() - start_time = 373.2409999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 267
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.041149
┌ Info: Price and cut time (b-and-b)
└   t = 1.3109192
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 267
│   lb = 2.710130364752621
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 143
└   length(nodes) = 275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36585
└   sum(fire_plans.plans_per_fire) = 12739
┌ Info: Time check
└   time() - start_time = 374.6210000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 208
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0404401
┌ Info: Price and cut time (b-and-b)
└   t = 1.1680287
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 208
│   lb = 2.710130364752621
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 144
└   length(nodes) = 277
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36625
└   sum(fire_plans.plans_per_fire) = 12764
┌ Info: Time check
└   time() - start_time = 375.84500002861023
┌ Info: Exploring node
└   branch_and_bound_node.ix = 209
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0441166
┌ Info: Price and cut time (b-and-b)
└   t = 1.1188366
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 209
│   lb = 2.7101303647526214
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 145
└   length(nodes) = 279
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 36750
└   sum(fire_plans.plans_per_fire) = 12806
┌ Info: Time check
└   time() - start_time = 377.01399993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 276
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0380694
┌ Info: Price and cut time (b-and-b)
└   t = 0.5775633
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 276
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0   0  0   0   0   0  9  9  0  0
│      0   0   0   0  9  11  8   2   1   0  0  0  0  0
│     10   0   0   0  0   0  0   0   0   0  0  0  0  0
│      3  20  20  15  0   0  0   0   0   0  2  2  0  0
│      0   0   0   0  3   0  8  13  14  14  7  1  0  0
└      7   0   0   0  0   0  0   0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1915619
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0576935
│   obj = 2.7159779280349543
└   obj_bound = 2.7158940452973184
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1  1   1   1   1  10  10  1  1
│      1   1   1   1  10  12  9   3   2   1   1   1  1  1
│     11   1   1   1   1   1  1   1   1   1   1   1  1  1
│      4  21  21  16   1   1  1   1   1   1   3   3  1  1
│      1   1   1   1   4   1  9  14  15  15   8   2  1  1
└      8   1   1   1   1   1  1   1   1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.5890151
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0528053
│   obj = 2.7159779280349543
└   obj_bound = 2.715822964313329
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  11  11  2  2
│      2   2   2   2  11  13  10   4   3   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2   5   2  10  15  16  16   9   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1876836
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0702855
│   obj = 2.7159779280349547
└   obj_bound = 2.715758854177243
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 276
│   lb = 2.7101303647526214
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 146
└   length(nodes) = 281
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37387
└   sum(fire_plans.plans_per_fire) = 13072
┌ Info: Time check
└   time() - start_time = 383.38899993896484
┌ Info: Exploring node
└   branch_and_bound_node.ix = 277
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347227
┌ Info: Price and cut time (b-and-b)
└   t = 2.4199434
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 277
│   lb = 2.7101418355526445
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 147
└   length(nodes) = 283
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37602
└   sum(fire_plans.plans_per_fire) = 13150
┌ Info: Time check
└   time() - start_time = 385.8439998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 256
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263601
┌ Info: Price and cut time (b-and-b)
└   t = 1.9524705
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 256
│   lb = 2.7101418355526445
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 148
└   length(nodes) = 285
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37753
└   sum(fire_plans.plans_per_fire) = 13206
┌ Info: Time check
└   time() - start_time = 387.8420000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 257
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274435
┌ Info: Price and cut time (b-and-b)
└   t = 1.3705919
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 257
│   lb = 2.710143541390777
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 149
└   length(nodes) = 287
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37830
└   sum(fire_plans.plans_per_fire) = 13229
┌ Info: Time check
└   time() - start_time = 389.2649998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 146
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0351336
┌ Info: Price and cut time (b-and-b)
└   t = 1.1672022
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 146
│   lb = 2.710143541390777
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 150
└   length(nodes) = 289
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 37941
└   sum(fire_plans.plans_per_fire) = 13268
┌ Info: Time check
└   time() - start_time = 390.48600006103516
┌ Info: Exploring node
└   branch_and_bound_node.ix = 147
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0342936
┌ Info: Price and cut time (b-and-b)
└   t = 1.0613092
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 147
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0  0  7  14  1  0  0
│     0   0   0  7  4  2   6  7  7  0   0  0  0  0
│     9   2   0  0  0  0   0  0  0  0   0  0  0  0
│     7  17  18  0  0  0   0  0  0  0   0  0  0  0
│     0   0   0  9  8  9  10  9  9  7   1  0  0  0
└     4   1   2  0  1  0   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6411886
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0674063
│   obj = 2.7159779280349543
└   obj_bound = 2.7157097741140093
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  15  2  1  1
│      1   1   1   8  5   3   7   8   8  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1  10  9  10  11  10  10  8   2  1  1  1
└      5   2   3   1  2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.5814452
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3035606
│   obj = 2.7159779280349543
└   obj_bound = 2.715772830282887
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   9   6   4   8   9   9  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  11  10  11  12  11  11  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7112618
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2376713
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 147
│   lb = 2.710178784226838
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 151
└   length(nodes) = 291
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38381
└   sum(fire_plans.plans_per_fire) = 13512
┌ Info: Time check
└   time() - start_time = 397.64299988746643
┌ Info: Exploring node
└   branch_and_bound_node.ix = 270
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330355
┌ Info: Price and cut time (b-and-b)
└   t = 1.9867088
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 270
│   lb = 2.710178784226838
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 152
└   length(nodes) = 293
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38550
└   sum(fire_plans.plans_per_fire) = 13562
┌ Info: Time check
└   time() - start_time = 399.67000007629395
┌ Info: Exploring node
└   branch_and_bound_node.ix = 271
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318806
┌ Info: Price and cut time (b-and-b)
└   t = 0.9768
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 271
│   lb = 2.71022751257
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 153
└   length(nodes) = 295
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38642
└   sum(fire_plans.plans_per_fire) = 13589
┌ Info: Time check
└   time() - start_time = 400.6949999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 178
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275817
┌ Info: Price and cut time (b-and-b)
└   t = 1.7137845
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 178
│   lb = 2.71022751257
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 154
└   length(nodes) = 297
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38780
└   sum(fire_plans.plans_per_fire) = 13633
┌ Info: Time check
└   time() - start_time = 402.4619998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 179
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332791
┌ Info: Price and cut time (b-and-b)
└   t = 0.7818291
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 179
│   lb = 2.71023405928101
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 155
└   length(nodes) = 299
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 38923
└   sum(fire_plans.plans_per_fire) = 13666
┌ Info: Time check
└   time() - start_time = 403.2939999103546
┌ Info: Exploring node
└   branch_and_bound_node.ix = 150
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0333374
┌ Info: Price and cut time (b-and-b)
└   t = 1.5280846
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 150
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  6  15  2  0  0
│     0   0   0  6  6  3   6   5   5  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  9  5  8  10  11  11  9   1  0  0  0
└     4   1   2  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0503344
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0742779
│   obj = 2.7159779280349543
└   obj_bound = 2.7157172891592998
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  3  1  1
│      1   1   1   7  7  4   7   6   6   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  10  6  9  11  12  12  10   2  1  1  1
└      5   2   3   1  2  2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0632231
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.184455
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  17  4  2  2
│      2   2   2   8  8   5   8   7   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  11  7  10  12  13  13  11   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9007383
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2333465
│   obj = 2.7159779280349547
└   obj_bound = 2.7158689247193957
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 150
│   lb = 2.71023405928101
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 156
└   length(nodes) = 301
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39417
└   sum(fire_plans.plans_per_fire) = 13901
┌ Info: Time check
└   time() - start_time = 409.92400002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 151
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0329562
┌ Info: Price and cut time (b-and-b)
└   t = 1.2638317
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 151
│   lb = 2.710239753127151
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 157
└   length(nodes) = 303
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39541
└   sum(fire_plans.plans_per_fire) = 13931
┌ Info: Time check
└   time() - start_time = 411.2279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 232
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028343
┌ Info: Price and cut time (b-and-b)
└   t = 1.060591
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 232
│   lb = 2.710239753127151
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 158
└   length(nodes) = 305
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39716
└   sum(fire_plans.plans_per_fire) = 13978
┌ Info: Time check
└   time() - start_time = 412.3420000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 233
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249521
┌ Info: Price and cut time (b-and-b)
└   t = 1.1436845
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 233
│   lb = 2.7102445338227885
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 159
└   length(nodes) = 307
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 39901
└   sum(fire_plans.plans_per_fire) = 14032
┌ Info: Time check
└   time() - start_time = 413.5160000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 298
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0379449
┌ Info: Price and cut time (b-and-b)
└   t = 0.9957498
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 298
│   lb = 2.7102445338227885
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 160
└   length(nodes) = 309
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40020
└   sum(fire_plans.plans_per_fire) = 14052
┌ Info: Time check
└   time() - start_time = 414.5739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 299
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294882
┌ Info: Price and cut time (b-and-b)
└   t = 1.2964112
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 299
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  8  9  0  0
│      0   0   0   0  3  6  9  7   6   0  0  0  0  0
│     10   0   0   0  0  0  0  0   0   0  0  0  0  0
│      3  20  20  15  0  0  0  0   0   0  2  2  0  0
│      0   0   0   0  9  5  6  9  10  15  7  1  0  0
└      7   0   0   0  0  0  0  0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0097796
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0720635
│   obj = 2.7159779280349543
└   obj_bound = 2.715823928034297
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  7  10   8   7   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6   7  10  11  16  8   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.3632634
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0558163
│   obj = 2.7159779280349543
└   obj_bound = 2.715809446422441
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  8  11   9   8   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7   8  11  12  17   9   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5746546
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0690628
│   obj = 2.7159779280349547
└   obj_bound = 2.7157114364511097
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 299
│   lb = 2.7102572200808157
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 161
└   length(nodes) = 311
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40674
└   sum(fire_plans.plans_per_fire) = 14355
┌ Info: Time check
└   time() - start_time = 421.5529999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 30
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293902
┌ Info: Price and cut time (b-and-b)
└   t = 0.7799717
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 30
│   lb = 2.7102572200808157
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 162
└   length(nodes) = 313
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40786
└   sum(fire_plans.plans_per_fire) = 14390
┌ Info: Time check
└   time() - start_time = 422.36500000953674
┌ Info: Exploring node
└   branch_and_bound_node.ix = 312
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294279
┌ Info: Price and cut time (b-and-b)
└   t = 0.3817036
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 312
│   lb = 2.7102572200808157
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 163
└   length(nodes) = 315
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 40875
└   sum(fire_plans.plans_per_fire) = 14402
┌ Info: Time check
└   time() - start_time = 422.7909998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 313
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033872
┌ Info: Price and cut time (b-and-b)
└   t = 1.2238468
┌ Info: current bounds
│   node_ix = 313
│   lb = 2.7102572200808157
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 164
└   length(nodes) = 315
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41139
└   sum(fire_plans.plans_per_fire) = 14453
┌ Info: Time check
└   time() - start_time = 424.0720000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 31
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230189
┌ Info: Price and cut time (b-and-b)
└   t = 1.0174469
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 31
│   lb = 2.7102652851712175
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 165
└   length(nodes) = 317
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41295
└   sum(fire_plans.plans_per_fire) = 14499
┌ Info: Time check
└   time() - start_time = 425.12999987602234
┌ Info: Exploring node
└   branch_and_bound_node.ix = 290
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0368534
┌ Info: Price and cut time (b-and-b)
└   t = 1.8077161
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 290
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0  7  14  1  0  0
│     0   0   0  6  3  3  7  7  7  0   0  0  0  0
│     9   2   0  0  0  0  0  0  0  0   0  0  0  0
│     7  17  18  0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  9  8  9  9  9  9  7   2  0  0  0
└     5   2   2  0  2  0  0  0  0  0   3  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8444385
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1246566
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  15  2  1  1
│      1   1   1   7  4   4   8   8   8  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1  10  9  10  10  10  10  8   3  1  1  1
└      6   3   3   1  3   1   1   1   1  1   4  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1174216
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2245955
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   8   5   5   9   9   9  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  11  10  11  11  11  11  9   4  2  2  2
└      7   4   4   2   4   2   2   2   2  2   5  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7850395
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2837223
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 290
│   lb = 2.7102652851712175
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 166
└   length(nodes) = 319
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41844
└   sum(fire_plans.plans_per_fire) = 14770
┌ Info: Time check
└   time() - start_time = 432.8910000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 291
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319496
┌ Info: Price and cut time (b-and-b)
└   t = 2.2520798
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 291
│   lb = 2.710300551631386
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 167
└   length(nodes) = 321
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 41920
└   sum(fire_plans.plans_per_fire) = 14819
┌ Info: Time check
└   time() - start_time = 435.18099999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 302
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324577
┌ Info: Price and cut time (b-and-b)
└   t = 1.9401831
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 302
│   lb = 2.710300551631386
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 168
└   length(nodes) = 323
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42096
└   sum(fire_plans.plans_per_fire) = 14871
┌ Info: Time check
└   time() - start_time = 437.18099999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 303
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.034191
┌ Info: Price and cut time (b-and-b)
└   t = 1.298117
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 303
│   lb = 2.7103020707442598
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 169
└   length(nodes) = 325
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42187
└   sum(fire_plans.plans_per_fire) = 14899
┌ Info: Time check
└   time() - start_time = 438.52999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 184
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0361162
┌ Info: Price and cut time (b-and-b)
└   t = 1.3515167
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 184
│   lb = 2.7103020707442598
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 170
└   length(nodes) = 327
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 42280
└   sum(fire_plans.plans_per_fire) = 14935
┌ Info: Time check
└   time() - start_time = 439.93499994277954
┌ Info: Exploring node
└   branch_and_bound_node.ix = 185
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320707
┌ Info: Price and cut time (b-and-b)
└   t = 1.5479945
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 185
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0  0  0   0  6  15  2  0  0
│      0   0   0   3   2   2  7  9  11  0   0  0  0  0
│     10   0   0   0   0   0  0  0   0  0   0  0  0  0
│      5  20  20   1   0   0  0  0   0  0   0  0  0  0
│      0   0   0  12  10  10  9  6   5  9   1  0  0  0
└      5   0   0   0   1   0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8201524
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1252927
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1   4   3   3   8  10  12   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  13  11  11  10   7   6  10   2  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6306784
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2456649
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   5   4   4   9  11  13   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  14  12  12  11   8   7  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.931755
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3936049
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 185
│   lb = 2.7103210237604185
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 171
└   length(nodes) = 329
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43001
└   sum(fire_plans.plans_per_fire) = 15216
┌ Info: Time check
└   time() - start_time = 447.20300006866455
┌ Info: Exploring node
└   branch_and_bound_node.ix = 154
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266322
┌ Info: Price and cut time (b-and-b)
└   t = 1.3257718
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 154
│   lb = 2.7103210237604185
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 172
└   length(nodes) = 331
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43175
└   sum(fire_plans.plans_per_fire) = 15275
┌ Info: Time check
└   time() - start_time = 448.5739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 155
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255094
┌ Info: Price and cut time (b-and-b)
└   t = 1.3068248
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 155
│   lb = 2.710357459963344
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 173
└   length(nodes) = 333
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43270
└   sum(fire_plans.plans_per_fire) = 15321
┌ Info: Time check
└   time() - start_time = 449.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 236
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321913
┌ Info: Price and cut time (b-and-b)
└   t = 1.5180695
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 236
│   lb = 2.710357459963344
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 174
└   length(nodes) = 335
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43357
└   sum(fire_plans.plans_per_fire) = 15351
┌ Info: Time check
└   time() - start_time = 451.47499990463257
┌ Info: Exploring node
└   branch_and_bound_node.ix = 237
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0362656
┌ Info: Price and cut time (b-and-b)
└   t = 1.8900269
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 237
│   lb = 2.7103697785160357
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 175
└   length(nodes) = 337
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 43499
└   sum(fire_plans.plans_per_fire) = 15390
┌ Info: Time check
└   time() - start_time = 453.42700004577637
┌ Info: Exploring node
└   branch_and_bound_node.ix = 306
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321544
┌ Info: Price and cut time (b-and-b)
└   t = 0.9592838
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 306
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0  5  14  2  0  0
│      0   0   0  9  6  5   4   4   2  2   0  0  0  0
│     10   0   0  0  0  0   0   0   0  0   0  0  0  0
│      5  20  20  1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  6  5  6  11  12  14  8   1  0  0  0
└      5   0   0  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9556792
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1056957
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  6  15  3  1  1
│      1   1   1  10  7  6   5   5   3  3   1  1  1  1
│     11   1   1   1  1  1   1   1   1  1   1  1  1  1
│      6  21  21   2  1  1   1   1   1  1   1  1  1  1
│      1   1   1   7  6  7  12  13  15  9   2  1  1  1
└      6   1   1   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5641895
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3229526
│   obj = 2.7159779280349547
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   7  16  4  2  2
│      2   2   2  11  8  7   6   6   4   4   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2   8  7  8  13  14  16  10   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.7307389
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3105171
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 306
│   lb = 2.7103697785160357
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 176
└   length(nodes) = 339
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44183
└   sum(fire_plans.plans_per_fire) = 15679
┌ Info: Time check
└   time() - start_time = 460.94000005722046
┌ Info: Exploring node
└   branch_and_bound_node.ix = 307
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286952
┌ Info: Price and cut time (b-and-b)
└   t = 1.5063055
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 307
│   lb = 2.7103729815008184
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 177
└   length(nodes) = 341
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44416
└   sum(fire_plans.plans_per_fire) = 15721
┌ Info: Time check
└   time() - start_time = 462.48799991607666
┌ Info: Exploring node
└   branch_and_bound_node.ix = 340
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339907
┌ Info: Price and cut time (b-and-b)
└   t = 1.9595621
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 340
│   lb = 2.7103729815008184
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 178
└   length(nodes) = 343
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44609
└   sum(fire_plans.plans_per_fire) = 15784
┌ Info: Time check
└   time() - start_time = 464.4960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 341
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0376325
┌ Info: Price and cut time (b-and-b)
└   t = 1.613589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 341
│   lb = 2.7103758410050744
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 179
└   length(nodes) = 345
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44638
└   sum(fire_plans.plans_per_fire) = 15813
┌ Info: Time check
└   time() - start_time = 466.1640000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 310
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0327581
┌ Info: Price and cut time (b-and-b)
└   t = 1.8952283
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 310
│   lb = 2.7103758410050744
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 180
└   length(nodes) = 347
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 44696
└   sum(fire_plans.plans_per_fire) = 15849
┌ Info: Time check
└   time() - start_time = 468.1089999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 311
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.039157
┌ Info: Price and cut time (b-and-b)
└   t = 1.0089213
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 311
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  7  10  0  0
│      0   0   0   0  3  6  9  8   5   0  0   0  0  0
│     10   1   0   0  0  0  0  0   0   0  0   0  0  0
│      4  19  21  14  0  0  0  0   0   2  3   2  0  0
│      0   0   0   0  9  5  7  8  11  13  9   0  0  0
└      7   0   0   0  0  0  0  0   0   0  0   2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9701875
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0657268
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1  1   1   1   8  11  1  1
│      1   1   1   1   4  7  10  9   6   1   1   1  1  1
│     11   2   1   1   1  1   1  1   1   1   1   1  1  1
│      5  20  22  15   1  1   1  1   1   3   4   3  1  1
│      1   1   1   1  10  6   8  9  12  14  10   1  1  1
└      8   1   1   1   1  1   1  1   1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6502817
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0334571
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2   9  12  2  2
│      2   2   2   2   5  8  11  10   7   2   2   2  2  2
│     12   3   2   2   2  2   2   2   2   2   2   2  2  2
│      6  21  23  16   2  2   2   2   2   4   5   4  2  2
│      2   2   2   2  11  7   9  10  13  15  11   2  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7921826
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.030947
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 311
│   lb = 2.710379510198177
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 181
└   length(nodes) = 347
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45176
└   sum(fire_plans.plans_per_fire) = 16092
┌ Info: Time check
└   time() - start_time = 473.24699997901917
┌ Info: Exploring node
└   branch_and_bound_node.ix = 252
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0331966
┌ Info: Price and cut time (b-and-b)
└   t = 1.1010841
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 252
│   lb = 2.710379510198177
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 182
└   length(nodes) = 349
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45348
└   sum(fire_plans.plans_per_fire) = 16142
┌ Info: Time check
└   time() - start_time = 474.3949999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 253
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288293
┌ Info: Price and cut time (b-and-b)
└   t = 1.3496659
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 253
│   lb = 2.710383480819241
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 183
└   length(nodes) = 351
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45497
└   sum(fire_plans.plans_per_fire) = 16179
┌ Info: Time check
└   time() - start_time = 475.7920000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 170
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272232
┌ Info: Price and cut time (b-and-b)
└   t = 0.9783203
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 170
│   lb = 2.710383480819241
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 184
└   length(nodes) = 353
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45591
└   sum(fire_plans.plans_per_fire) = 16204
┌ Info: Time check
└   time() - start_time = 476.8120000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 171
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334309
┌ Info: Price and cut time (b-and-b)
└   t = 1.2192325
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 171
│   lb = 2.7103871240216466
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 185
└   length(nodes) = 355
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 45695
└   sum(fire_plans.plans_per_fire) = 16232
┌ Info: Time check
└   time() - start_time = 478.0739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 200
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306728
┌ Info: Price and cut time (b-and-b)
└   t = 1.5610191
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 200
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  1  0  1   4  15  2  0  0
│      0   0   0   0   0  8  9  7  6   0   0  0  0  0
│     10   0   0   0   0  0  0  0  0   0   0  0  0  0
│      5  20  20   1   0  0  0  0  0   0   0  0  0  0
│      0   0   0  14  11  3  5  8  9  11   1  0  0  0
└      5   0   0   0   1  0  0  0  0   0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1285811
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0646693
│   obj = 2.7159779280349543
└   obj_bound = 2.7157679693505643
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   2  1   2   5  16  3  1  1
│      1   1   1   1   1  9  10  8   7   1   1  1  1  1
│     11   1   1   1   1  1   1  1   1   1   1  1  1  1
│      6  21  21   2   1  1   1  1   1   1   1  1  1  1
│      1   1   1  15  12  4   6  9  10  12   2  1  1  1
└      6   1   1   1   2  1   1  1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7264545
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1278336
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   3   2   3   6  17  4  2  2
│      2   2   2   2   2  10  11   9   8   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13   5   7  10  11  13   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9796281
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2361387
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 200
│   lb = 2.7103871240216466
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 186
└   length(nodes) = 357
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46435
└   sum(fire_plans.plans_per_fire) = 16549
┌ Info: Time check
└   time() - start_time = 485.4800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 201
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278964
┌ Info: Price and cut time (b-and-b)
└   t = 1.0849451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 201
│   lb = 2.7104464795658365
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 187
└   length(nodes) = 359
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46531
└   sum(fire_plans.plans_per_fire) = 16575
┌ Info: Time check
└   time() - start_time = 486.6010000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 262
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0394037
┌ Info: Price and cut time (b-and-b)
└   t = 1.4721383
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 262
│   lb = 2.7104464795658365
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 188
└   length(nodes) = 361
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46588
└   sum(fire_plans.plans_per_fire) = 16601
┌ Info: Time check
└   time() - start_time = 488.135999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 263
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.040067
┌ Info: Price and cut time (b-and-b)
└   t = 1.6953713
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 263
│   lb = 2.710481786277358
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 189
└   length(nodes) = 363
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46701
└   sum(fire_plans.plans_per_fire) = 16639
┌ Info: Time check
└   time() - start_time = 489.8919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 332
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0322728
┌ Info: Price and cut time (b-and-b)
└   t = 1.4937436
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 332
│   lb = 2.710481786277358
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 190
└   length(nodes) = 365
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 46805
└   sum(fire_plans.plans_per_fire) = 16676
┌ Info: Time check
└   time() - start_time = 491.42400002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 333
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0338216
┌ Info: Price and cut time (b-and-b)
└   t = 1.4744247
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 333
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0   0   0   0   0   0  6  14  2  0  0
│      0   0   0  9   2   2   6   6   6  0   0  0  0  0
│     10   0   0  0   0   0   0   0   0  0   0  0  0  0
│      5  20  20  1   0   0   0   0   0  0   0  0  0  0
│      0   0   0  6  10  10  10  10  10  9   2  0  0  0
└      5   0   0  0   1   0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8336602
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1154454
│   obj = 2.7159779280349543
└   obj_bound = 2.7157194266801525
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  15  3  1  1
│      1   1   1  10   3   3   7   7   7   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1   7  11  11  11  11  11  10   3  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.692307
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1659548
│   obj = 2.7159779280349547
└   obj_bound = 2.71570743971716
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2  11   4   4   8   8   8   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8  12  12  12  12  12  11   4  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.402912
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.182687
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 333
│   lb = 2.710524459829061
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 191
└   length(nodes) = 367
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47391
└   sum(fire_plans.plans_per_fire) = 16969
┌ Info: Time check
└   time() - start_time = 498.86100006103516
┌ Info: Exploring node
└   branch_and_bound_node.ix = 130
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302485
┌ Info: Price and cut time (b-and-b)
└   t = 1.3260983
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 130
│   lb = 2.710524459829061
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 192
└   length(nodes) = 369
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47444
└   sum(fire_plans.plans_per_fire) = 16999
┌ Info: Time check
└   time() - start_time = 500.2300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 131
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310579
┌ Info: Price and cut time (b-and-b)
└   t = 0.805242
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 131
│   lb = 2.7105259522655984
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 193
└   length(nodes) = 371
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47604
└   sum(fire_plans.plans_per_fire) = 17037
┌ Info: Time check
└   time() - start_time = 501.0809998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 348
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340719
┌ Info: Price and cut time (b-and-b)
└   t = 1.2039726
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 348
│   lb = 2.7105259522655984
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 194
└   length(nodes) = 373
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47704
└   sum(fire_plans.plans_per_fire) = 17073
┌ Info: Time check
└   time() - start_time = 502.3359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 349
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335365
┌ Info: Price and cut time (b-and-b)
└   t = 1.3023616
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 349
│   lb = 2.710551156931076
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 195
└   length(nodes) = 375
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 47825
└   sum(fire_plans.plans_per_fire) = 17095
┌ Info: Time check
└   time() - start_time = 503.69000005722046
┌ Info: Exploring node
└   branch_and_bound_node.ix = 274
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0383151
┌ Info: Price and cut time (b-and-b)
└   t = 1.435658
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 274
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0  7  15  1  0  0
│     0   0   0  6  3  6  7   5   4  0   0  0  0  0
│     9   2   0  0  0  0  0   0   0  0   0  0  0  0
│     7  17  18  0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  9  9  5  9  11  12  8   1  0  0  0
└     4   1   2  0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0823421
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0805611
│   obj = 2.7159779280349543
└   obj_bound = 2.7157279326382224
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  16  2  1  1
│      1   1   1   7   4  7   8   6   5  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  10  10  6  10  12  13  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5261005
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2171146
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  3  2  2
│      2   2   2   8   5  8   9   7   6   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  11  11  7  11  13  14  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5579738
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3520556
│   obj = 2.7159779280349543
└   obj_bound = 2.715870660561705
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 274
│   lb = 2.710551156931076
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 196
└   length(nodes) = 377
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48192
└   sum(fire_plans.plans_per_fire) = 17301
┌ Info: Time check
└   time() - start_time = 510.54900002479553
┌ Info: Exploring node
└   branch_and_bound_node.ix = 275
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335874
┌ Info: Price and cut time (b-and-b)
└   t = 0.6999817
┌ Info: current bounds
│   node_ix = 275
│   lb = 2.710576159047162
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 197
└   length(nodes) = 377
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48343
└   sum(fire_plans.plans_per_fire) = 17330
┌ Info: Time check
└   time() - start_time = 511.2909998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 244
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0436468
┌ Info: Price and cut time (b-and-b)
└   t = 1.1399029
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 244
│   lb = 2.710576159047162
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 198
└   length(nodes) = 379
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48505
└   sum(fire_plans.plans_per_fire) = 17377
┌ Info: Time check
└   time() - start_time = 512.4960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 245
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0356739
┌ Info: Price and cut time (b-and-b)
└   t = 1.2356827
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 245
│   lb = 2.710576159047162
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 199
└   length(nodes) = 381
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48688
└   sum(fire_plans.plans_per_fire) = 17412
┌ Info: Time check
└   time() - start_time = 513.7890000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 380
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.035247
┌ Info: Price and cut time (b-and-b)
└   t = 0.4842611
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 380
│   lb = 2.710576159047162
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 200
└   length(nodes) = 383
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 48725
└   sum(fire_plans.plans_per_fire) = 17426
┌ Info: Time check
└   time() - start_time = 514.3220000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 381
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340544
┌ Info: Price and cut time (b-and-b)
└   t = 1.4396222
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 381
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0  7  15  1  0  0
│     0   0   0   0   0  6  9  9  6  0   0  0  0  0
│     9   2   0   0   0  0  0  0  0  0   0  0  0  0
│     7  17  18   0   0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  12  5  6  6  9  8   1  0  0  0
└     4   1   2   0   0  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9690331
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.08149
│   obj = 2.7159779280349547
└   obj_bound = 2.7157595414726434
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  16  2  1  1
│      1   1   1   1   1  7  10  10   7  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  13  6   7   7  10  9   2  1  1  1
└      5   2   3   1   1  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4848474
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1827769
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  3  2  2
│      2   2   2   2   2  8  11  11   8   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  14  7   8   8  11  10   3  2  2  2
└      6   3   4   2   2  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8291118
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3094857
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349547
┌ Info: current bounds
│   node_ix = 381
│   lb = 2.7106074477153705
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 201
└   length(nodes) = 385
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49204
└   sum(fire_plans.plans_per_fire) = 17655
┌ Info: Time check
└   time() - start_time = 520.231999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 368
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272694
┌ Info: Price and cut time (b-and-b)
└   t = 2.3895244
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 368
│   lb = 2.7106074477153705
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 202
└   length(nodes) = 387
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49302
└   sum(fire_plans.plans_per_fire) = 17708
┌ Info: Time check
└   time() - start_time = 522.6589999198914
┌ Info: Exploring node
└   branch_and_bound_node.ix = 369
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0361094
┌ Info: Price and cut time (b-and-b)
└   t = 2.8678288
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 369
│   lb = 2.7106523726930445
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 203
└   length(nodes) = 389
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49570
└   sum(fire_plans.plans_per_fire) = 17783
┌ Info: Time check
└   time() - start_time = 525.5839998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 370
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286916
┌ Info: Price and cut time (b-and-b)
└   t = 1.6511372
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 370
│   lb = 2.7106523726930445
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 204
└   length(nodes) = 391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49667
└   sum(fire_plans.plans_per_fire) = 17815
┌ Info: Time check
└   time() - start_time = 527.2630000114441
┌ Info: Exploring node
└   branch_and_bound_node.ix = 371
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288513
┌ Info: Price and cut time (b-and-b)
└   t = 1.2161392
┌ Info: current bounds
│   node_ix = 371
│   lb = 2.7106600989260365
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 205
└   length(nodes) = 391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 49964
└   sum(fire_plans.plans_per_fire) = 17880
┌ Info: Time check
└   time() - start_time = 528.5309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 258
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339397
┌ Info: Price and cut time (b-and-b)
└   t = 1.7969968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 258
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0   0   0  6  14  2  0  0
│      0   0   0   0  6  5  9   6   5  0   0  0  0  0
│     10   0   0   0  0  0  0   0   0  0   0  0  0  0
│      6  21  21   2  0  0  0   0   0  0   0  0  0  0
│      0   0   0  14  5  6  6  10  11  8   1  0  0  0
└      5   0   0   0  1  0  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7701993
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1046977
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280336807
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  7  15  3  1  1
│      1   1   1   1  7  6  10   7   6  1   1  1  1  1
│     11   1   1   1  1  1   1   1   1  1   1  1  1  1
│      7  22  22   3  1  1   1   1   1  1   1  1  1  1
│      1   1   1  15  6  7   7  11  12  9   2  1  1  1
└      6   1   1   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6293019
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1773201
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  16  4  2  2
│      2   2   2   2  8  7  11   8   7   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      8  23  23   4  2  2   2   2   2   2   2  2  2  2
│      2   2   2  16  7  8   8  12  13  10   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9209322
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2448472
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 258
│   lb = 2.7106600989260365
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 206
└   length(nodes) = 393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50616
└   sum(fire_plans.plans_per_fire) = 18129
┌ Info: Time check
└   time() - start_time = 535.7539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 259
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0341955
┌ Info: Price and cut time (b-and-b)
└   t = 2.0429136
┌ Info: current bounds
│   node_ix = 259
│   lb = 2.710660663589584
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 207
└   length(nodes) = 393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50826
└   sum(fire_plans.plans_per_fire) = 18195
┌ Info: Time check
└   time() - start_time = 537.8439998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 194
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310535
┌ Info: Price and cut time (b-and-b)
└   t = 0.8862253
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 194
│   lb = 2.710660663589584
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 208
└   length(nodes) = 395
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 50934
└   sum(fire_plans.plans_per_fire) = 18218
┌ Info: Time check
└   time() - start_time = 538.7630000114441
┌ Info: Exploring node
└   branch_and_bound_node.ix = 195
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304906
┌ Info: Price and cut time (b-and-b)
└   t = 1.3223091
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 195
│   lb = 2.710693981163098
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 209
└   length(nodes) = 397
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51171
└   sum(fire_plans.plans_per_fire) = 18264
┌ Info: Time check
└   time() - start_time = 540.1319999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 250
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0367388
┌ Info: Price and cut time (b-and-b)
└   t = 0.8623365
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 250
│   lb = 2.710693981163098
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 210
└   length(nodes) = 399
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51285
└   sum(fire_plans.plans_per_fire) = 18286
┌ Info: Time check
└   time() - start_time = 541.0590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 251
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0344436
┌ Info: Price and cut time (b-and-b)
└   t = 1.6555643
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 251
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  14  2  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   3  9  8   1  0  0  0
└     4   1   2   0   1   1   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5437491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0741775
│   obj = 2.7159779280349543
└   obj_bound = 2.715718144688919
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   4  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7463351
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.21641
│   obj = 2.7159779280349547
└   obj_bound = 2.7159075325946063
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  13   5   5  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1685426
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4104171
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 251
│   lb = 2.7107000967401915
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 211
└   length(nodes) = 401
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51860
└   sum(fire_plans.plans_per_fire) = 18506
┌ Info: Time check
└   time() - start_time = 547.4589998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 180
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306134
┌ Info: Price and cut time (b-and-b)
└   t = 1.5709574
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 180
│   lb = 2.7107000967401915
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 212
└   length(nodes) = 403
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 51954
└   sum(fire_plans.plans_per_fire) = 18539
┌ Info: Time check
└   time() - start_time = 549.066999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 181
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313652
┌ Info: Price and cut time (b-and-b)
└   t = 1.4852704
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 181
│   lb = 2.710705168088338
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 213
└   length(nodes) = 405
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52111
└   sum(fire_plans.plans_per_fire) = 18574
┌ Info: Time check
└   time() - start_time = 550.6110000610352
┌ Info: Exploring node
└   branch_and_bound_node.ix = 284
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0371642
┌ Info: Price and cut time (b-and-b)
└   t = 1.3286426
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 284
│   lb = 2.710705168088338
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 214
└   length(nodes) = 407
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52264
└   sum(fire_plans.plans_per_fire) = 18610
┌ Info: Time check
└   time() - start_time = 551.9830000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 285
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0353916
┌ Info: Price and cut time (b-and-b)
└   t = 1.8176733
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 285
│   lb = 2.7107077412422234
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 215
└   length(nodes) = 409
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 52411
└   sum(fire_plans.plans_per_fire) = 18648
┌ Info: Time check
└   time() - start_time = 553.8589999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 308
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347719
┌ Info: Price and cut time (b-and-b)
└   t = 2.0832647
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 308
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  9  9  0  0
│      0   0   0   0  3  6  6  7  8   0  0  0  0  0
│     10   0   0   0  0  0  0  0  0   0  0  0  0  0
│      3  20  20  15  0  0  0  0  0   0  2  2  0  0
│      0   0   0   0  9  5  9  8  7  15  7  1  0  0
└      7   0   0   0  0  0  0  0  0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8387025
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0600265
│   obj = 2.7159779280349543
└   obj_bound = 2.715745928035176
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1  1  1   1  10  10  1  1
│      1   1   1   1   4  7   7  8  9   1   1   1  1  1
│     11   1   1   1   1  1   1  1  1   1   1   1  1  1
│      4  21  21  16   1  1   1  1  1   1   3   3  1  1
│      1   1   1   1  10  6  10  9  8  16   8   2  1  1
└      8   1   1   1   1  1   1  1  1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.5722407
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0554252
│   obj = 2.7159779280349547
└   obj_bound = 2.7159712258530084
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  11  11  2  2
│      2   2   2   2   5  8   8   9  10   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7  11  10   9  17   9   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6282479
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0720138
│   obj = 2.7159779280349543
└   obj_bound = 2.7157688366422343
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 308
│   lb = 2.7107077412422234
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 216
└   length(nodes) = 411
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53069
└   sum(fire_plans.plans_per_fire) = 18938
┌ Info: Time check
└   time() - start_time = 560.739000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 309
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0358135
┌ Info: Price and cut time (b-and-b)
└   t = 2.115267
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 309
│   lb = 2.7107100217807645
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 217
└   length(nodes) = 413
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53156
└   sum(fire_plans.plans_per_fire) = 18991
┌ Info: Time check
└   time() - start_time = 562.8929998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 358
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299824
┌ Info: Price and cut time (b-and-b)
└   t = 1.4482096
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 358
│   lb = 2.7107100217807645
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 218
└   length(nodes) = 415
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53346
└   sum(fire_plans.plans_per_fire) = 19029
┌ Info: Time check
└   time() - start_time = 564.3959999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 359
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330309
┌ Info: Price and cut time (b-and-b)
└   t = 1.2160791
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 359
│   lb = 2.7107133267968964
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 219
└   length(nodes) = 417
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53480
└   sum(fire_plans.plans_per_fire) = 19056
┌ Info: Time check
└   time() - start_time = 565.6619999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 326
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261466
┌ Info: Price and cut time (b-and-b)
└   t = 0.8963194
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 326
│   lb = 2.7107133267968964
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 220
└   length(nodes) = 419
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 53624
└   sum(fire_plans.plans_per_fire) = 19089
┌ Info: Time check
└   time() - start_time = 566.6019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 327
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.032984
┌ Info: Price and cut time (b-and-b)
└   t = 0.706206
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 327
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0   0  0  6  14  2  0  0
│      0   0   0   0   0   0  12  10  9  0   0  0  0  0
│     10   0   0   0   0   0   0   0  0  0   0  0  0  0
│      5  20  20   1   0   0   0   0  0  0   0  0  0  0
│      0   0   0  14  11  11   3   6  7  9   1  0  0  0
└      5   0   0   0   1   0   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7974154
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1796245
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  15  3  1  1
│      1   1   1   1   1   1  13  11  10   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  15  12  12   4   7   8  10   2  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.1394471
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1726789
│   obj = 2.7159779280349543
└   obj_bound = 2.7158375228623224
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2   2   2   2  14  12  11   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13  13   5   8   9  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9449957
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3068821
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 327
│   lb = 2.7107133267968964
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 221
└   length(nodes) = 421
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54306
└   sum(fire_plans.plans_per_fire) = 19379
┌ Info: Time check
└   time() - start_time = 573.3889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 418
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311413
┌ Info: Price and cut time (b-and-b)
└   t = 0.8539433
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 418
│   lb = 2.7107133267968964
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 222
└   length(nodes) = 423
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54444
└   sum(fire_plans.plans_per_fire) = 19408
┌ Info: Time check
└   time() - start_time = 574.2869999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 419
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315937
┌ Info: Price and cut time (b-and-b)
└   t = 1.4549318
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 419
│   lb = 2.710744533477559
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 223
└   length(nodes) = 425
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54680
└   sum(fire_plans.plans_per_fire) = 19456
┌ Info: Time check
└   time() - start_time = 575.7929999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 192
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.031696
┌ Info: Price and cut time (b-and-b)
└   t = 1.0758067
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 192
│   lb = 2.710744533477559
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 224
└   length(nodes) = 427
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54771
└   sum(fire_plans.plans_per_fire) = 19496
┌ Info: Time check
└   time() - start_time = 576.914999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 193
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315553
┌ Info: Price and cut time (b-and-b)
└   t = 1.5621448
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 193
│   lb = 2.7107771595718453
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 225
└   length(nodes) = 429
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 54970
└   sum(fire_plans.plans_per_fire) = 19555
┌ Info: Time check
└   time() - start_time = 578.5329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 198
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0371236
┌ Info: Price and cut time (b-and-b)
└   t = 1.0481483
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 198
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0   0   0   0  7  14  2  0  0
│      0   0   0   0   0  8  12   6   5  0   0  0  0  0
│     10   0   0   0   0  0   0   0   0  0   0  0  0  0
│      5  20  20   1   0  0   0   0   0  0   0  0  0  0
│      0   0   0  14  11  3   3  10  11  8   1  0  0  0
└      5   0   0   0   1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6179938
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0724737
│   obj = 2.7159779280349543
└   obj_bound = 2.715783661133173
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  15  3  1  1
│      1   1   1   1   1  9  13   7   6  1   1  1  1  1
│     11   1   1   1   1  1   1   1   1  1   1  1  1  1
│      6  21  21   2   1  1   1   1   1  1   1  1  1  1
│      1   1   1  15  12  4   4  11  12  9   2  1  1  1
└      6   1   1   1   2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8406993
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2383339
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2   2  10  14   8   7   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13   5   5  12  13  10   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.180236
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2031713
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 198
│   lb = 2.7107771595718453
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 226
└   length(nodes) = 431
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55621
└   sum(fire_plans.plans_per_fire) = 19820
┌ Info: Time check
└   time() - start_time = 584.3359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 199
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306324
┌ Info: Price and cut time (b-and-b)
└   t = 3.6871085
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 199
│   lb = 2.710787324996127
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 227
└   length(nodes) = 433
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55882
└   sum(fire_plans.plans_per_fire) = 19915
┌ Info: Time check
└   time() - start_time = 588.0699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 314
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293874
┌ Info: Price and cut time (b-and-b)
└   t = 0.4874368
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 314
│   lb = 2.710787324996127
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 228
└   length(nodes) = 435
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 55950
└   sum(fire_plans.plans_per_fire) = 19937
┌ Info: Time check
└   time() - start_time = 588.5950000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 315
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027052
┌ Info: Price and cut time (b-and-b)
└   t = 0.9492427
┌ Info: current bounds
│   node_ix = 315
│   lb = 2.7107930605669504
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 229
└   length(nodes) = 435
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56149
└   sum(fire_plans.plans_per_fire) = 19987
┌ Info: Time check
└   time() - start_time = 589.5809998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 164
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0360097
┌ Info: Price and cut time (b-and-b)
└   t = 1.4880279
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 164
│   lb = 2.7107930605669504
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 230
└   length(nodes) = 437
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56236
└   sum(fire_plans.plans_per_fire) = 20021
┌ Info: Time check
└   time() - start_time = 591.1150000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 165
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318791
┌ Info: Price and cut time (b-and-b)
└   t = 1.7677723
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 165
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  7  14  1  0  0
│     0   0   0   0  3  2  8  9  9  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  8  9  8  7  7  8   1  0  0  0
└     4   1   2   0  1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0086543
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0691683
│   obj = 2.7159779280349543
└   obj_bound = 2.715757601510812
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1  1   1   1  8  15  2  1  1
│      1   1   1   1  4   3  9  10  10  1   1  1  1  1
│     10   3   1   1  1   1  1   1   1  1   1  1  1  1
│      8  18  19   1  1   1  1   1   1  1   1  1  1  1
│      1   1   1  16  9  10  9   8   8  9   2  1  1  1
└      5   2   3   1  2   1  1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8964926
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1943399
│   obj = 2.7159779280349543
└   obj_bound = 2.71591361981679
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  3  2  2
│      2   2   2   2   5   4  10  11  11   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  10  11  10   9   9  10   3  2  2  2
└      6   3   4   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.781206
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.188508
│   obj = 2.7159779280349547
└   obj_bound = 2.7159779280349547
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 165
│   lb = 2.7107939648189836
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 231
└   length(nodes) = 439
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 56908
└   sum(fire_plans.plans_per_fire) = 20210
┌ Info: Time check
└   time() - start_time = 596.6129999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 222
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290092
┌ Info: Price and cut time (b-and-b)
└   t = 1.6535459
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 222
│   lb = 2.7107939648189836
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 232
└   length(nodes) = 441
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57030
└   sum(fire_plans.plans_per_fire) = 20246
┌ Info: Time check
└   time() - start_time = 598.3039999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 223
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330936
┌ Info: Price and cut time (b-and-b)
└   t = 0.8857122
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 223
│   lb = 2.7108056091227093
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 233
└   length(nodes) = 443
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57085
└   sum(fire_plans.plans_per_fire) = 20270
┌ Info: Time check
└   time() - start_time = 599.2419998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 278
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0373779
┌ Info: Price and cut time (b-and-b)
└   t = 0.7064121
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 278
│   lb = 2.7108056091227093
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 234
└   length(nodes) = 445
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57156
└   sum(fire_plans.plans_per_fire) = 20293
┌ Info: Time check
└   time() - start_time = 599.9960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 279
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0358112
┌ Info: Price and cut time (b-and-b)
└   t = 2.277697
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 279
│   lb = 2.710807121228015
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 235
└   length(nodes) = 447
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57328
└   sum(fire_plans.plans_per_fire) = 20372
┌ Info: Time check
└   time() - start_time = 602.3289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 398
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0361558
┌ Info: Price and cut time (b-and-b)
└   t = 1.4385186
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 398
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0  0  0  7  14  1  0  0
│     0   0   0   0   0   2  12  9  8  0   0  0  0  0
│     9   2   0   0   0   0   0  0  0  0   0  0  0  0
│     7  17  18   0   0   0   0  0  0  0   0  0  0  0
│     0   0   0  16  11  10   3  6  7  8   1  0  0  0
└     4   1   2   0   1   0   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5219931
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.067016
│   obj = 2.7159779280349543
└   obj_bound = 2.715758821616578
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1  8  15  2  1  1
│      1   1   1   1   1   3  13  10  9  1   1  1  1  1
│     10   3   1   1   1   1   1   1  1  1   1  1  1  1
│      8  18  19   1   1   1   1   1  1  1   1  1  1  1
│      1   1   1  17  12  11   4   7  8  9   2  1  1  1
└      5   2   3   1   2   1   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.215509
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.159744
│   obj = 2.7159779280349547
└   obj_bound = 2.7159779280349543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  3  2  2
│      2   2   2   2   2   4  14  11  10   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  18  13  12   5   8   9  10   3  2  2  2
└      6   3   4   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.760878
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2207907
│   obj = 2.7159779280349543
└   obj_bound = 2.7159779280349543
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7159779280349543
┌ Info: current bounds
│   node_ix = 398
│   lb = 2.710807121228015
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 236
└   length(nodes) = 449
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 57794
└   sum(fire_plans.plans_per_fire) = 20576
┌ Info: Time check
└   time() - start_time = 608.3079998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 399
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318935
┌ Info: Price and cut time (b-and-b)
└   t = 1.6970019
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 399
│   lb = 2.710807156682992
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 237
└   length(nodes) = 451
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58006
└   sum(fire_plans.plans_per_fire) = 20638
┌ Info: Time check
└   time() - start_time = 610.055999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 396
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0368303
┌ Info: Price and cut time (b-and-b)
└   t = 1.5624556
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 396
│   lb = 2.710807156682992
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 238
└   length(nodes) = 453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58092
└   sum(fire_plans.plans_per_fire) = 20673
┌ Info: Time check
└   time() - start_time = 611.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 397
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339729
┌ Info: Price and cut time (b-and-b)
└   t = 1.0066167
┌ Info: current bounds
│   node_ix = 397
│   lb = 2.7108085601563863
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 239
└   length(nodes) = 453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58252
└   sum(fire_plans.plans_per_fire) = 20714
┌ Info: Time check
└   time() - start_time = 612.7249999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 346
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310119
┌ Info: Price and cut time (b-and-b)
└   t = 0.4104346
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 346
│   lb = 2.7108085601563863
└   ub = 2.7159779280349543
┌ Info: number of nodes
│   node_explored_count = 240
└   length(nodes) = 455
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58272
└   sum(fire_plans.plans_per_fire) = 20726
┌ Info: Time check
└   time() - start_time = 613.1840000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 347
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328869
┌ Info: Price and cut time (b-and-b)
└   t = 0.9110953
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 347
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  8  9  0  0
│      0   0   0   0  3  6  9  7   6   0  0  0  0  0
│     10   0   0   0  0  0  0  0   0   0  0  0  0  0
│      3  20  20  15  0  0  0  0   0   0  2  2  0  0
│      0   0   0   0  9  5  6  9  10  14  8  1  0  0
└      7   0   0   0  0  0  0  0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7628305
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.098541
│   obj = 2.7158711103454967
└   obj_bound = 2.7158711103454967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  7  10   8   7   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6   7  10  11  15  9   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.3664803
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.066604
│   obj = 2.715871110345497
└   obj_bound = 2.7158632909772074
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  8  11   9   8   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7   8  11  12  16  10   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3735635
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0684159
│   obj = 2.7158711103454967
└   obj_bound = 2.715799716913518
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 347
│   lb = 2.7108085601563863
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 241
└   length(nodes) = 457
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58726
└   sum(fire_plans.plans_per_fire) = 21014
┌ Info: Time check
└   time() - start_time = 619.3840000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 454
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0339656
┌ Info: Price and cut time (b-and-b)
└   t = 1.9305302
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 454
│   lb = 2.7108085601563863
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 242
└   length(nodes) = 459
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58853
└   sum(fire_plans.plans_per_fire) = 21051
┌ Info: Time check
└   time() - start_time = 621.3550000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 455
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0401532
┌ Info: Price and cut time (b-and-b)
└   t = 1.6014592
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: current bounds
│   node_ix = 455
│   lb = 2.7108085601563867
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 243
└   length(nodes) = 461
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 58936
└   sum(fire_plans.plans_per_fire) = 21091
┌ Info: Time check
└   time() - start_time = 623.0079998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 456
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0404776
┌ Info: Price and cut time (b-and-b)
└   t = 2.4233353
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 456
│   lb = 2.7108085601563867
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 244
└   length(nodes) = 463
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59009
└   sum(fire_plans.plans_per_fire) = 21139
┌ Info: Time check
└   time() - start_time = 625.4909999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 457
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0353033
┌ Info: Price and cut time (b-and-b)
└   t = 1.9784998
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 457
│   lb = 2.710819847829197
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 245
└   length(nodes) = 465
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59067
└   sum(fire_plans.plans_per_fire) = 21181
┌ Info: Time check
└   time() - start_time = 627.5329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 316
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319174
┌ Info: Price and cut time (b-and-b)
└   t = 1.1452462
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 316
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0   0  0  8  15  1  0  0
│     0   0   3  10   0  2   5   6  7  0   0  0  0  0
│     9   2   0   0   0  0   0   0  0  0   0  0  0  0
│     7  17  18   0   0  0   0   0  0  0   0  0  0  0
│     0   0   0   7  11  8  10  10  9  7   1  0  0  0
└     4   1   0   0   1  1   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8908436
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0878191
│   obj = 2.7158711103454967
└   obj_bound = 2.7156033672385522
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  9  16  2  1  1
│      1   1   4  11   1  3   6   7   8  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1   8  12  9  11  11  10  8   2  1  1  1
└      5   2   1   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5635609
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1698014
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  17  3  2  2
│      2   2   5  12   2   4   7   8   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   9  13  10  12  12  11   9   3  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6639312
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2196078
│   obj = 2.715871110345497
└   obj_bound = 2.715703905042023
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 316
│   lb = 2.710819847829197
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 246
└   length(nodes) = 467
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59512
└   sum(fire_plans.plans_per_fire) = 21449
┌ Info: Time check
└   time() - start_time = 633.8499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 317
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033033
┌ Info: Price and cut time (b-and-b)
└   t = 1.7686497
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 317
│   lb = 2.7108597688643177
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 247
└   length(nodes) = 469
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59675
└   sum(fire_plans.plans_per_fire) = 21500
┌ Info: Time check
└   time() - start_time = 635.6679999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 422
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.036914
┌ Info: Price and cut time (b-and-b)
└   t = 1.5069984
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 422
│   lb = 2.7108597688643177
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 248
└   length(nodes) = 471
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59782
└   sum(fire_plans.plans_per_fire) = 21532
┌ Info: Time check
└   time() - start_time = 637.2260000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 423
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0650069
┌ Info: Price and cut time (b-and-b)
└   t = 1.1061532
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 423
│   lb = 2.7108823025229087
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 249
└   length(nodes) = 473
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59855
└   sum(fire_plans.plans_per_fire) = 21561
┌ Info: Time check
└   time() - start_time = 638.4159998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 234
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.037555
┌ Info: Price and cut time (b-and-b)
└   t = 0.3913021
┌ Info: current bounds
│   node_ix = 234
│   lb = 2.7108823025229087
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 250
└   length(nodes) = 473
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 59926
└   sum(fire_plans.plans_per_fire) = 21586
┌ Info: Time check
└   time() - start_time = 638.8550000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 235
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0333551
┌ Info: Price and cut time (b-and-b)
└   t = 1.7158249
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 235
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0  6  14  2  0  0
│      0   0   0  9  6  3   4   4   5  0   0  0  0  0
│     10   0   0  0  0  0   0   0   0  0   0  0  0  0
│      5  20  20  1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  5  5  9  11  11  11  9   1  0  0  0
└      5   0   0  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7880753
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1051308
│   obj = 2.7158711103454967
└   obj_bound = 2.7158711103454967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   7  15  3  1  1
│      1   1   1  10  7   4   5   5   6   1   1  1  1  1
│     11   1   1   1  1   1   1   1   1   1   1  1  1  1
│      6  21  21   2  1   1   1   1   1   1   1  1  1  1
│      1   1   1   6  6  10  12  12  12  10   2  1  1  1
└      6   1   1   1  2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.9550385
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1351684
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  16  4  2  2
│      2   2   2  11  8   5   6   6   7   2   2  2  2  2
│     12   2   2   2  2   2   2   2   2   2   2  2  2  2
│      7  22  22   3  2   2   2   2   2   2   2  2  2  2
│      2   2   2   7  7  11  13  13  13  11   3  2  2  2
└      7   2   2   2  3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4340945
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2210952
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 235
│   lb = 2.7109266536891607
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 251
└   length(nodes) = 475
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60607
└   sum(fire_plans.plans_per_fire) = 21889
┌ Info: Time check
└   time() - start_time = 645.7699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 360
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0382335
┌ Info: Price and cut time (b-and-b)
└   t = 1.5014299
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 360
│   lb = 2.7109266536891607
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 252
└   length(nodes) = 477
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60731
└   sum(fire_plans.plans_per_fire) = 21924
┌ Info: Time check
└   time() - start_time = 647.3209998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 361
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0356994
┌ Info: Price and cut time (b-and-b)
└   t = 1.1306124
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 361
│   lb = 2.7109379824938777
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 253
└   length(nodes) = 479
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60821
└   sum(fire_plans.plans_per_fire) = 21951
┌ Info: Time check
└   time() - start_time = 648.5049998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 292
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0464492
┌ Info: Price and cut time (b-and-b)
└   t = 1.6867437
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 292
│   lb = 2.7109379824938777
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 254
└   length(nodes) = 481
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 60897
└   sum(fire_plans.plans_per_fire) = 21982
┌ Info: Time check
└   time() - start_time = 650.260999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 293
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335584
┌ Info: Price and cut time (b-and-b)
└   t = 1.6647087
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 293
│   lb = 2.710939360370704
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 255
└   length(nodes) = 483
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61131
└   sum(fire_plans.plans_per_fire) = 22046
┌ Info: Time check
└   time() - start_time = 651.9749999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 214
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0344549
┌ Info: Price and cut time (b-and-b)
└   t = 1.5495484
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 214
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  0   0  7  14  2  0  0
│     0   0   0   0   0  6  12  7   6  0   0  0  0  0
│     9   2   0   0   0  0   0  0   0  0   0  0  0  0
│     7  17  18   0   0  0   0  0   0  0   0  0  0  0
│     0   0   0  15  11  5   3  9  10  8   1  0  0  0
└     4   1   2   0   1  1   0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8725599
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0695179
│   obj = 2.7158711103454967
└   obj_bound = 2.715621952261193
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  15  3  1  1
│      1   1   1   1   1  7  13   8   7  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  6   4  10  11  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6788337
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5135392
│   obj = 2.715871110345497
└   obj_bound = 2.7158274923563503
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  16  4  2  2
│      2   2   2   2   2  8  14   9   8   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  7   5  11  12  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1118155
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3889018
│   obj = 2.715871110345497
└   obj_bound = 2.7158711103454967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 214
│   lb = 2.710939360370704
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 256
└   length(nodes) = 485
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61540
└   sum(fire_plans.plans_per_fire) = 22244
┌ Info: Time check
└   time() - start_time = 658.7509999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 215
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307651
┌ Info: Price and cut time (b-and-b)
└   t = 1.8321232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 215
│   lb = 2.7109585851759066
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 257
└   length(nodes) = 487
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61712
└   sum(fire_plans.plans_per_fire) = 22297
┌ Info: Time check
└   time() - start_time = 660.6299998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 322
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0474609
┌ Info: Price and cut time (b-and-b)
└   t = 0.6362968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 322
│   lb = 2.7109585851759066
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 258
└   length(nodes) = 489
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61818
└   sum(fire_plans.plans_per_fire) = 22318
┌ Info: Time check
└   time() - start_time = 661.3239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 488
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0388385
┌ Info: Price and cut time (b-and-b)
└   t = 1.730554
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 488
│   lb = 2.7109585851759066
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 259
└   length(nodes) = 491
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 61957
└   sum(fire_plans.plans_per_fire) = 22366
┌ Info: Time check
└   time() - start_time = 663.4939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 489
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0361195
┌ Info: Price and cut time (b-and-b)
└   t = 1.7166936
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 489
│   lb = 2.7109585851759066
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 260
└   length(nodes) = 493
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62036
└   sum(fire_plans.plans_per_fire) = 22400
┌ Info: Time check
└   time() - start_time = 665.2760000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 323
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0345015
┌ Info: Price and cut time (b-and-b)
└   t = 1.2702389
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 323
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0  7  14  2  0  0
│     0   0   0  6  6  6  9   2   1  0   0  0  0  0
│     9   2   0  0  0  0  0   0   0  0   0  0  0  0
│     7  17  18  0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  9  5  5  7  13  14  8   1  0  0  0
└     4   1   2  0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6932851
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0795733
│   obj = 2.7158711103454967
└   obj_bound = 2.7156828731118194
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  15  3  1  1
│      1   1   1   7  7  7  10   3   2  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  10  6  6   8  14  15  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7267556
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2232962
│   obj = 2.715871110345497
└   obj_bound = 2.7157735838248263
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   9  16  4  2  2
│      2   2   2   8  8  8  11   4   3   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  11  7  7   9  15  16  10   3  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1349064
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2929109
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 323
│   lb = 2.71096780820575
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 261
└   length(nodes) = 495
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62660
└   sum(fire_plans.plans_per_fire) = 22593
┌ Info: Time check
└   time() - start_time = 671.7079999446869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 354
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304691
┌ Info: Price and cut time (b-and-b)
└   t = 0.8357997
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 354
│   lb = 2.71096780820575
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 262
└   length(nodes) = 497
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62758
└   sum(fire_plans.plans_per_fire) = 22618
┌ Info: Time check
└   time() - start_time = 672.5920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 355
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289661
┌ Info: Price and cut time (b-and-b)
└   t = 1.6366776
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 355
│   lb = 2.710968933642086
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 263
└   length(nodes) = 499
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62908
└   sum(fire_plans.plans_per_fire) = 22673
┌ Info: Time check
└   time() - start_time = 674.2630000114441
┌ Info: Exploring node
└   branch_and_bound_node.ix = 188
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293692
┌ Info: Price and cut time (b-and-b)
└   t = 1.3201332
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 188
│   lb = 2.710968933642086
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 264
└   length(nodes) = 501
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 62995
└   sum(fire_plans.plans_per_fire) = 22719
┌ Info: Time check
└   time() - start_time = 675.6289999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 189
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029444
┌ Info: Price and cut time (b-and-b)
└   t = 1.5260555
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 189
│   lb = 2.710980220665154
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 265
└   length(nodes) = 503
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63148
└   sum(fire_plans.plans_per_fire) = 22760
┌ Info: Time check
└   time() - start_time = 677.210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 498
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0391553
┌ Info: Price and cut time (b-and-b)
└   t = 0.7465972
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 498
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  7  15  2  0  0
│     0   0   0   0  6  8  6  6   5  0   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   0  15  5  3  9  9  11  8   1  0  0  0
└     4   1   2   0  1  1  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6719336
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0765737
│   obj = 2.7158711103454967
└   obj_bound = 2.715602653385064
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  3  1  1
│      1   1   1   1  7  9   7   7   6  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  6  4  10  10  12  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7199367
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3311075
│   obj = 2.715871110345497
└   obj_bound = 2.7158711103454967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  4  2  2
│      2   2   2   2  8  10   8   8   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  7   5  11  11  13  10   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7643904
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1861724
│   obj = 2.715871110345497
└   obj_bound = 2.7158711103454967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 498
│   lb = 2.710980220665154
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 266
└   length(nodes) = 505
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63611
└   sum(fire_plans.plans_per_fire) = 22936
┌ Info: Time check
└   time() - start_time = 682.3050000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 499
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0348914
┌ Info: Price and cut time (b-and-b)
└   t = 1.1745087
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 499
│   lb = 2.7109955634390706
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 267
└   length(nodes) = 507
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63667
└   sum(fire_plans.plans_per_fire) = 22960
┌ Info: Time check
└   time() - start_time = 683.5299999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 448
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.035611
┌ Info: Price and cut time (b-and-b)
└   t = 1.4463698
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 448
│   lb = 2.7109955634390706
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 268
└   length(nodes) = 509
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63743
└   sum(fire_plans.plans_per_fire) = 22985
┌ Info: Time check
└   time() - start_time = 685.0179998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 449
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0351512
┌ Info: Price and cut time (b-and-b)
└   t = 1.707275
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 449
│   lb = 2.7110234679905245
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 269
└   length(nodes) = 511
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63883
└   sum(fire_plans.plans_per_fire) = 23020
┌ Info: Time check
└   time() - start_time = 686.7860000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 294
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0359203
┌ Info: Price and cut time (b-and-b)
└   t = 1.1787624
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 294
│   lb = 2.7110234679905245
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 270
└   length(nodes) = 513
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 63942
└   sum(fire_plans.plans_per_fire) = 23037
┌ Info: Time check
└   time() - start_time = 688.010999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 295
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0369056
┌ Info: Price and cut time (b-and-b)
└   t = 0.9280222
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 295
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  6  15  2  0  0
│     0   0   1  8  7  7   2   3   4  1   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  7  5  5  14  12  11  9   0  0  0  0
└     4   1   2  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7953546
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0812102
│   obj = 2.7158711103454967
└   obj_bound = 2.7156051789225075
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1  1   1   1   1   7  16  3  1  1
│      1   1   2  9  8  8   3   4   5   2   1  1  1  1
│     10   3   1  1  1  1   1   1   1   1   1  1  1  1
│      8  18  19  1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  8  6  6  15  13  12  10   1  1  1  1
└      5   2   3  1  2  2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3343742
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1632128
│   obj = 2.7158711103454967
└   obj_bound = 2.7158711103454967
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  4  2  2
│      2   2   3  10  9  9   4   5   6   3   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2   9  7  7  16  14  13  11   2  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8002499
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.211634
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7158711103454967
┌ Info: current bounds
│   node_ix = 295
│   lb = 2.711023467990525
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 271
└   length(nodes) = 513
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64420
└   sum(fire_plans.plans_per_fire) = 23228
┌ Info: Time check
└   time() - start_time = 693.0039999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 512
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.038698
┌ Info: Price and cut time (b-and-b)
└   t = 1.4113006
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 512
│   lb = 2.711023467990525
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 272
└   length(nodes) = 515
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64553
└   sum(fire_plans.plans_per_fire) = 23260
┌ Info: Time check
└   time() - start_time = 694.4700000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 513
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.034787
┌ Info: Price and cut time (b-and-b)
└   t = 1.4369813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 513
│   lb = 2.711024917258589
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 273
└   length(nodes) = 517
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64597
└   sum(fire_plans.plans_per_fire) = 23287
┌ Info: Time check
└   time() - start_time = 695.960000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 474
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0371585
┌ Info: Price and cut time (b-and-b)
└   t = 1.2374981
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 474
│   lb = 2.711024917258589
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 274
└   length(nodes) = 519
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64760
└   sum(fire_plans.plans_per_fire) = 23329
┌ Info: Time check
└   time() - start_time = 697.2419998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 475
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328223
┌ Info: Price and cut time (b-and-b)
└   t = 1.4242813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 475
│   lb = 2.711029328941596
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 275
└   length(nodes) = 521
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 64814
└   sum(fire_plans.plans_per_fire) = 23362
┌ Info: Time check
└   time() - start_time = 698.7160000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 394
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335219
┌ Info: Price and cut time (b-and-b)
└   t = 1.8647068
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 394
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  6  15  2  0  0
│     0   0   0  9  3  2   4   6   6  1   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  6  8  9  11  10  10  8   0  0  0  0
└     4   1   2  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0941086
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0736363
│   obj = 2.715871110345497
└   obj_bound = 2.7156198046919258
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  7  16  3  1  1
│      1   1   1  10  4   3   5   7   7  2   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1   7  9  10  12  11  11  9   1  1  1  1
└      5   2   3   1  2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8279332
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.410267
│   obj = 2.715871110345497
└   obj_bound = 2.7156359738877707
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2  11   5   4   6   8   8   3   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8  10  11  13  12  12  10   2  2  2  2
└      6   3   4   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6082115
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1907346
│   obj = 2.715871110345497
└   obj_bound = 2.715871110345497
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.715871110345497
┌ Info: current bounds
│   node_ix = 394
│   lb = 2.711029328941596
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 276
└   length(nodes) = 523
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65422
└   sum(fire_plans.plans_per_fire) = 23557
┌ Info: Time check
└   time() - start_time = 704.3940000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 395
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319149
┌ Info: Price and cut time (b-and-b)
└   t = 1.4992317
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 395
│   lb = 2.711030520486105
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 277
└   length(nodes) = 525
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65515
└   sum(fire_plans.plans_per_fire) = 23585
┌ Info: Time check
└   time() - start_time = 705.9340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 444
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0368279
┌ Info: Price and cut time (b-and-b)
└   t = 0.5617457
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 444
│   lb = 2.711030520486105
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 278
└   length(nodes) = 527
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65571
└   sum(fire_plans.plans_per_fire) = 23607
┌ Info: Time check
└   time() - start_time = 706.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 445
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316683
┌ Info: Price and cut time (b-and-b)
└   t = 0.698244
┌ Info: current bounds
│   node_ix = 445
│   lb = 2.711032081687515
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 279
└   length(nodes) = 527
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65710
└   sum(fire_plans.plans_per_fire) = 23643
┌ Info: Time check
└   time() - start_time = 707.2960000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 350
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0361898
┌ Info: Price and cut time (b-and-b)
└   t = 0.6830509
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 350
│   lb = 2.711032081687515
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 280
└   length(nodes) = 529
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 65752
└   sum(fire_plans.plans_per_fire) = 23660
┌ Info: Time check
└   time() - start_time = 708.3989999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 351
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0354952
┌ Info: Price and cut time (b-and-b)
└   t = 1.3628922
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 351
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0  0  7  14  1  0  0
│     0   0   0   0   0   0  9  12  9  0   0  0  0  0
│     9   2   0   0   0   0  0   0  0  0   0  0  0  0
│     7  17  18   0   0   0  0   0  0  0   0  0  0  0
│     0   0   0  16  11  11  6   3  6  7   1  0  0  0
└     4   1   2   0   1   0  0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4756123
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0703321
│   obj = 2.715871110345497
└   obj_bound = 2.7156447378938093
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  2  1  1
│      1   1   1   1   1   1  10  13  10  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  17  12  12   7   4   7  8   2  1  1  1
└      5   2   3   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.2884536
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1055767
│   obj = 2.715871110345497
└   obj_bound = 2.7156050854325424
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   2   2  11  14  11  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  18  13  13   8   5   8  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9613404
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3750918
│   obj = 2.715871110345497
└   obj_bound = 2.7158711103454967
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.715871110345497
┌ Info: current bounds
│   node_ix = 351
│   lb = 2.711034989250676
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 281
└   length(nodes) = 531
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66220
└   sum(fire_plans.plans_per_fire) = 23896
┌ Info: Time check
└   time() - start_time = 714.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 392
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307695
┌ Info: Price and cut time (b-and-b)
└   t = 1.4403523
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 392
│   lb = 2.711034989250676
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 282
└   length(nodes) = 533
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66397
└   sum(fire_plans.plans_per_fire) = 23933
┌ Info: Time check
└   time() - start_time = 716.1389999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 393
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274731
┌ Info: Price and cut time (b-and-b)
└   t = 1.3081341
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 393
│   lb = 2.71103901772953
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 283
└   length(nodes) = 535
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66449
└   sum(fire_plans.plans_per_fire) = 23961
┌ Info: Time check
└   time() - start_time = 717.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 218
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273212
┌ Info: Price and cut time (b-and-b)
└   t = 1.3325836
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 218
│   lb = 2.71103901772953
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 284
└   length(nodes) = 537
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66618
└   sum(fire_plans.plans_per_fire) = 23996
┌ Info: Time check
└   time() - start_time = 718.8689999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 219
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0337387
┌ Info: Price and cut time (b-and-b)
└   t = 0.9478689
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 219
│   lb = 2.711039902451719
└   ub = 2.7158711103454967
┌ Info: number of nodes
│   node_explored_count = 285
└   length(nodes) = 539
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 66756
└   sum(fire_plans.plans_per_fire) = 24030
┌ Info: Time check
└   time() - start_time = 719.8680000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 160
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340717
┌ Info: Price and cut time (b-and-b)
└   t = 0.8840085
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 160
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   0  8  9  0  0
│      0   0   0   0  7  6   6  7   5   0  0  0  0  0
│     10   0   0   0  0  0   0  0   0   0  0  0  0  0
│      3  20  20  15  0  0   0  0   0   0  2  2  0  0
│      0   0   0   0  5  5  10  9  10  14  8  1  0  0
└      7   0   0   0  0  0   0  0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1259393
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0501201
│   obj = 2.715871110345497
└   obj_bound = 2.715640410344349
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  9  10  1  1
│      1   1   1   1  8  7   7   8   6   1  1   1  1  1
│     11   1   1   1  1  1   1   1   1   1  1   1  1  1
│      4  21  21  16  1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  6  6  11  10  11  15  9   2  1  1
└      8   1   1   1  1  1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8512951
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0471482
│   obj = 2.7158711103454967
└   obj_bound = 2.715669633839501
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  9  8   8   9   7   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  7  7  12  11  12  16  10   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6307156
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1138405
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      3   3   3   3   3  3   3   3   3   3  11  12  3  3
│      3   3   3   3  10  9   9  10   8   3   3   3  3  3
│     13   3   3   3   3  3   3   3   3   3   3   3  3  3
│      6  23  23  18   3  3   3   3   3   3   5   5  3  3
│      3   3   3   3   8  8  13  12  13  17  11   4  3  3
└     10   3   3   3   3  3   3   3   3   3   3   5  3  3
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1515305
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0465207
│   obj = 2.714834282500158
└   obj_bound = 2.714610766424601
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      4   4   4   4   4   4   4   4   4   4  12  13  4  4
│      4   4   4   4  11  10  10  11   9   4   4   4  4  4
│     14   4   4   4   4   4   4   4   4   4   4   4  4  4
│      7  24  24  19   4   4   4   4   4   4   6   6  4  4
│      4   4   4   4   9   9  14  13  14  18  12   5  4  4
└     11   4   4   4   4   4   4   4   4   4   4   6  4  4
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2865026
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0625389
│   obj = 2.714834282500158
└   obj_bound = 2.714594759960506
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 160
│   lb = 2.711039902451719
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 286
└   length(nodes) = 541
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67495
└   sum(fire_plans.plans_per_fire) = 24438
┌ Info: Time check
└   time() - start_time = 729.0629999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 161
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309308
┌ Info: Price and cut time (b-and-b)
└   t = 1.4955451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 161
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 287
└   length(nodes) = 543
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67778
└   sum(fire_plans.plans_per_fire) = 24499
┌ Info: Time check
└   time() - start_time = 730.6029999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 246
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0359168
┌ Info: Price and cut time (b-and-b)
└   t = 0.7302465
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 246
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 288
└   length(nodes) = 545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 67853
└   sum(fire_plans.plans_per_fire) = 24522
┌ Info: Time check
└   time() - start_time = 731.7820000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 247
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0398863
┌ Info: Price and cut time (b-and-b)
└   t = 1.4721728
┌ Info: current bounds
│   node_ix = 247
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 289
└   length(nodes) = 545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68083
└   sum(fire_plans.plans_per_fire) = 24589
┌ Info: Time check
└   time() - start_time = 733.2990000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 544
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334843
┌ Info: Price and cut time (b-and-b)
└   t = 0.2983209
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 544
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 290
└   length(nodes) = 547
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68111
└   sum(fire_plans.plans_per_fire) = 24596
┌ Info: Time check
└   time() - start_time = 733.6549999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 545
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0400387
┌ Info: Price and cut time (b-and-b)
└   t = 0.2343797
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 545
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  0  0  7  14  1  0  0
│     0   0   0   0   1  8  10  7  7  0   0  0  0  0
│     9   2   0   0   0  0   0  0  0  0   0  0  0  0
│     7  17  18   0   0  0   0  0  0  0   0  0  0  0
│     0   0   0  15  10  4   6  9  8  7   1  0  0  0
└     4   1   2   0   1  0   0  0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4513841
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.06568
│   obj = 2.714834282500158
└   obj_bound = 2.7146080023377963
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1  1  8  15  2  1  1
│      1   1   1   1   2  9  11   8  8  1   1  1  1  1
│     10   3   1   1   1  1   1   1  1  1   1  1  1  1
│      8  18  19   1   1  1   1   1  1  1   1  1  1  1
│      1   1   1  16  11  5   7  10  9  8   2  1  1  1
└      5   2   3   1   2  1   1   1  1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8345022
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0784757
│   obj = 2.714834282500158
└   obj_bound = 2.7145899952645776
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   3  10  12   9   9  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  12   6   8  11  10  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.115094
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1772413
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 545
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 291
└   length(nodes) = 549
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68520
└   sum(fire_plans.plans_per_fire) = 24776
┌ Info: Time check
└   time() - start_time = 738.239000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 548
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.037121
┌ Info: Price and cut time (b-and-b)
└   t = 6.6061988
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 548
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 292
└   length(nodes) = 551
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68571
└   sum(fire_plans.plans_per_fire) = 24801
┌ Info: Time check
└   time() - start_time = 744.885999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 549
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299504
┌ Info: Price and cut time (b-and-b)
└   t = 1.0671929
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 549
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 293
└   length(nodes) = 553
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68694
└   sum(fire_plans.plans_per_fire) = 24830
┌ Info: Time check
└   time() - start_time = 746.0019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 546
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0345077
┌ Info: Price and cut time (b-and-b)
└   t = 0.6530919
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 546
│   lb = 2.7110667869073017
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 294
└   length(nodes) = 555
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68784
└   sum(fire_plans.plans_per_fire) = 24848
┌ Info: Time check
└   time() - start_time = 746.7189998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 547
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328515
┌ Info: Price and cut time (b-and-b)
└   t = 1.323667
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 547
│   lb = 2.7110958782581016
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 295
└   length(nodes) = 557
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 68894
└   sum(fire_plans.plans_per_fire) = 24882
┌ Info: Time check
└   time() - start_time = 748.0880000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 264
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259154
┌ Info: Price and cut time (b-and-b)
└   t = 2.1122237
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 264
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0  0  0  7  15  1  0  0
│     0   0   0  6  3  5   3  7  8  0   0  0  0  0
│     9   2   0  0  0  0   0  0  0  0   0  0  0  0
│     7  17  18  0  0  0   0  0  0  0   0  0  0  0
│     0   0   0  9  8  6  12  9  8  8   1  0  0  0
└     4   1   2  0  1  1   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5212308
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.087584
│   obj = 2.714834282500158
└   obj_bound = 2.7145661379227053
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1  1  8  16  2  1  1
│      1   1   1   7  4  6   4   8  9  1   1  1  1  1
│     10   3   1   1  1  1   1   1  1  1   1  1  1  1
│      8  18  19   1  1  1   1   1  1  1   1  1  1  1
│      1   1   1  10  9  7  13  10  9  9   2  1  1  1
└      5   2   3   1  2  2   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0252039
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2180784
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  3  2  2
│      2   2   2   8   5  7   5   9  10   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  11  10  8  14  11  10  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.608107
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2700135
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 264
│   lb = 2.7110958782581016
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 296
└   length(nodes) = 559
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69484
└   sum(fire_plans.plans_per_fire) = 25122
┌ Info: Time check
└   time() - start_time = 753.5220000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 265
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269057
┌ Info: Price and cut time (b-and-b)
└   t = 0.8467868
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 265
│   lb = 2.711105155397419
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 297
└   length(nodes) = 561
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69605
└   sum(fire_plans.plans_per_fire) = 25154
┌ Info: Time check
└   time() - start_time = 754.4119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 538
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274247
┌ Info: Price and cut time (b-and-b)
└   t = 0.6699304
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 538
│   lb = 2.711105155397419
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 298
└   length(nodes) = 563
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69649
└   sum(fire_plans.plans_per_fire) = 25177
┌ Info: Time check
└   time() - start_time = 755.1119999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 539
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300184
┌ Info: Price and cut time (b-and-b)
└   t = 0.5965875
┌ Info: current bounds
│   node_ix = 539
│   lb = 2.71112780258176
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 299
└   length(nodes) = 563
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69808
└   sum(fire_plans.plans_per_fire) = 25210
┌ Info: Time check
└   time() - start_time = 755.7569999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 484
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318562
┌ Info: Price and cut time (b-and-b)
└   t = 0.8586902
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 484
│   lb = 2.71112780258176
└   ub = 2.714834282500158
┌ Info: number of nodes
│   node_explored_count = 300
└   length(nodes) = 565
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 69908
└   sum(fire_plans.plans_per_fire) = 25237
┌ Info: Time check
└   time() - start_time = 756.6670000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 485
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276997
┌ Info: Price and cut time (b-and-b)
└   t = 0.6687559
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 485
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0   0  0   0  7  14  2  0  0
│     0   0   0   0   0  7  12  6   5  0   0  0  0  0
│     9   2   0   0   0  0   0  0   0  0   0  0  0  0
│     7  17  18   0   0  0   0  0   0  0   0  0  0  0
│     0   0   0  15  11  4   3  9  10  8   1  0  0  0
└     4   1   2   0   1  1   0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.510429
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0732508
│   obj = 2.7148342825001577
└   obj_bound = 2.714584921076191
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  15  3  1  1
│      1   1   1   1   1  8  13   7   6  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  5   4  10  11  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1644107
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3101051
│   obj = 2.714834282500158
└   obj_bound = 2.714705850335573
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  16  4  2  2
│      2   2   2   2   2  9  14   8   7   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  6   5  11  12  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7911829
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1758397
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 485
│   lb = 2.7111321797678576
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 301
└   length(nodes) = 567
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70430
└   sum(fire_plans.plans_per_fire) = 25441
┌ Info: Time check
└   time() - start_time = 760.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 342
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264641
┌ Info: Price and cut time (b-and-b)
└   t = 1.4615957
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 342
│   lb = 2.7111321797678576
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 302
└   length(nodes) = 569
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70627
└   sum(fire_plans.plans_per_fire) = 25496
┌ Info: Time check
└   time() - start_time = 762.441999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 343
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028532
┌ Info: Price and cut time (b-and-b)
└   t = 1.161395
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 343
│   lb = 2.71114775633531
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 303
└   length(nodes) = 571
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70714
└   sum(fire_plans.plans_per_fire) = 25528
┌ Info: Time check
└   time() - start_time = 763.6510000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 352
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030608
┌ Info: Price and cut time (b-and-b)
└   t = 0.8187514
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 352
│   lb = 2.71114775633531
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 304
└   length(nodes) = 573
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 70866
└   sum(fire_plans.plans_per_fire) = 25565
┌ Info: Time check
└   time() - start_time = 764.5479998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 572
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257561
┌ Info: Price and cut time (b-and-b)
└   t = 0.8715415
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 572
│   lb = 2.71114775633531
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 305
└   length(nodes) = 575
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71002
└   sum(fire_plans.plans_per_fire) = 25602
┌ Info: Time check
└   time() - start_time = 765.4509999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 573
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298197
┌ Info: Price and cut time (b-and-b)
└   t = 1.0679483
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 573
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0  7  15  2  0  0
│     0   0   0   0  8  8  9   3   4  0   0  0  0  0
│     9   2   0   0  0  0  0   0   0  0   0  0  0  0
│     7  17  18   0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  15  4  3  6  13  12  8   1  0  0  0
└     4   1   2   0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5171899
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0885433
│   obj = 2.714834282500158
└   obj_bound = 2.7145662462791287
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  3  1  1
│      1   1   1   1  9  9  10   4   5  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  5  4   7  14  13  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.987981
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1773692
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2   2  10  10  11   5   6   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17   6   5   8  15  14  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7931548
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2548683
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 573
│   lb = 2.71114775633531
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 306
└   length(nodes) = 577
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71344
└   sum(fire_plans.plans_per_fire) = 25811
┌ Info: Time check
└   time() - start_time = 769.9049999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 353
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240796
┌ Info: Price and cut time (b-and-b)
└   t = 0.550489
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 353
│   lb = 2.7111568445134866
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 307
└   length(nodes) = 579
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71434
└   sum(fire_plans.plans_per_fire) = 25834
┌ Info: Time check
└   time() - start_time = 770.489000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 372
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311185
┌ Info: Price and cut time (b-and-b)
└   t = 0.5551812
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 372
│   lb = 2.7111568445134866
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 308
└   length(nodes) = 581
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71478
└   sum(fire_plans.plans_per_fire) = 25853
┌ Info: Time check
└   time() - start_time = 771.0939998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 373
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296581
┌ Info: Price and cut time (b-and-b)
└   t = 1.2345563
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 373
│   lb = 2.7111577098282185
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 309
└   length(nodes) = 583
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71598
└   sum(fire_plans.plans_per_fire) = 25909
┌ Info: Time check
└   time() - start_time = 772.3689999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 530
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332403
┌ Info: Price and cut time (b-and-b)
└   t = 0.5447573
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 530
│   lb = 2.7111577098282185
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 310
└   length(nodes) = 585
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 71632
└   sum(fire_plans.plans_per_fire) = 25928
┌ Info: Time check
└   time() - start_time = 772.9700000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 531
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280626
┌ Info: Price and cut time (b-and-b)
└   t = 0.9478544
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 531
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0  0  8  15  0  0  0
│     0   0   0   0   0   0  9  12  9  0   0  0  0  0
│     9   2   0   0   0   0  0   0  0  0   0  0  0  0
│     7  17  18   0   0   0  0   0  0  0   0  0  0  0
│     0   0   2  15  12  11  6   3  7  7   0  0  0  0
└     4   1   1   0   0   1  0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4430583
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.06909
│   obj = 2.7148342825001577
└   obj_bound = 2.7145786809010963
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  9  16  1  1  1
│      1   1   1   1   1   1  10  13  10  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   3  16  13  12   7   4   8  8   1  1  1  1
└      5   2   2   1   1   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8562154
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0441046
│   obj = 2.714834282500158
└   obj_bound = 2.7146124111240764
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  17  2  2  2
│      2   2   2   2   2   2  11  14  11   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   4  17  14  13   8   5   9   9   2  2  2  2
└      6   3   3   2   2   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8083131
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1966563
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 531
│   lb = 2.7111651595420057
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 311
└   length(nodes) = 585
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72098
└   sum(fire_plans.plans_per_fire) = 26155
┌ Info: Time check
└   time() - start_time = 776.8889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 540
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0467644
┌ Info: Price and cut time (b-and-b)
└   t = 1.9227957
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 540
│   lb = 2.7111651595420057
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 312
└   length(nodes) = 587
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72248
└   sum(fire_plans.plans_per_fire) = 26220
┌ Info: Time check
└   time() - start_time = 778.8680000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 541
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242334
┌ Info: Price and cut time (b-and-b)
└   t = 0.9318503
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: current bounds
│   node_ix = 541
│   lb = 2.711169067487696
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 313
└   length(nodes) = 589
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72330
└   sum(fire_plans.plans_per_fire) = 26247
┌ Info: Time check
└   time() - start_time = 779.8359999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 254
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234306
┌ Info: Price and cut time (b-and-b)
└   t = 0.4046221
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 254
│   lb = 2.711169067487696
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 314
└   length(nodes) = 591
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72354
└   sum(fire_plans.plans_per_fire) = 26264
┌ Info: Time check
└   time() - start_time = 780.2869999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 255
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258862
┌ Info: Price and cut time (b-and-b)
└   t = 1.1977175
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 255
│   lb = 2.7111836076579916
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 315
└   length(nodes) = 593
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72536
└   sum(fire_plans.plans_per_fire) = 26331
┌ Info: Time check
└   time() - start_time = 781.5269999504089
┌ Info: Exploring node
└   branch_and_bound_node.ix = 400
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305047
┌ Info: Price and cut time (b-and-b)
└   t = 0.8313919
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 400
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  14  2  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   3  9  8   1  0  0  0
└     4   1   2   0   1   1   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5345412
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0715929
│   obj = 2.7148342825001577
└   obj_bound = 2.7145984734021917
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   4  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9916673
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4608935
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  13   5   5  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6266997
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4341983
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 400
│   lb = 2.7111836076579916
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 316
└   length(nodes) = 595
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 72971
└   sum(fire_plans.plans_per_fire) = 26504
┌ Info: Time check
└   time() - start_time = 786.0420000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 401
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232894
┌ Info: Price and cut time (b-and-b)
└   t = 0.9916723
┌ Info: current bounds
│   node_ix = 401
│   lb = 2.7111976230427492
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 317
└   length(nodes) = 595
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73082
└   sum(fire_plans.plans_per_fire) = 26558
┌ Info: Time check
└   time() - start_time = 787.0699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 366
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0214594
┌ Info: Price and cut time (b-and-b)
└   t = 0.5238997
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 366
│   lb = 2.7111976230427492
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 318
└   length(nodes) = 597
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73171
└   sum(fire_plans.plans_per_fire) = 26583
┌ Info: Time check
└   time() - start_time = 787.6269998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 367
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252333
┌ Info: Price and cut time (b-and-b)
└   t = 1.0131254
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 367
│   lb = 2.7112022063329535
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 319
└   length(nodes) = 599
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73409
└   sum(fire_plans.plans_per_fire) = 26640
┌ Info: Time check
└   time() - start_time = 788.664999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 590
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1239155
┌ Info: Price and cut time (b-and-b)
└   t = 1.1601912
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 590
│   lb = 2.7112022063329535
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 320
└   length(nodes) = 601
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 73527
└   sum(fire_plans.plans_per_fire) = 26678
┌ Info: Time check
└   time() - start_time = 789.9760000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 591
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258654
┌ Info: Price and cut time (b-and-b)
└   t = 0.9012237
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 591
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0   0  7  14  1  0  0
│     0   0   0   0   0   1   6  12  12  0   0  0  0  0
│     9   2   0   0   0   0   0   0   0  0   0  0  0  0
│     7  17  18   0   0   0   0   0   0  0   0  0  0  0
│     0   0   0  16  11  11  10   3   4  7   2  0  0  0
└     4   1   2   0   1   0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.547195
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0689428
│   obj = 2.714834282500158
└   obj_bound = 2.7145811414413283
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  2  1  1
│      1   1   1   1   1   2   7  13  13  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  17  12  12  11   4   5  8   3  1  1  1
└      5   2   3   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1860655
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1132564
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   2   3   8  14  14  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  18  13  13  12   5   6  9   4  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6684025
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2998545
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 591
│   lb = 2.7112101190149716
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 321
└   length(nodes) = 603
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74151
└   sum(fire_plans.plans_per_fire) = 26888
┌ Info: Time check
└   time() - start_time = 794.305999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 242
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0222914
┌ Info: Price and cut time (b-and-b)
└   t = 1.0777048
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 242
│   lb = 2.7112101190149716
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 322
└   length(nodes) = 605
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74250
└   sum(fire_plans.plans_per_fire) = 26923
┌ Info: Time check
└   time() - start_time = 795.4059998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 243
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240109
┌ Info: Price and cut time (b-and-b)
└   t = 1.188297
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 243
│   lb = 2.7112116765151213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 323
└   length(nodes) = 607
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74380
└   sum(fire_plans.plans_per_fire) = 26964
┌ Info: Time check
└   time() - start_time = 796.6399998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 272
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290736
┌ Info: Price and cut time (b-and-b)
└   t = 1.2422111
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 272
│   lb = 2.7112116765151213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 324
└   length(nodes) = 609
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74424
└   sum(fire_plans.plans_per_fire) = 26999
┌ Info: Time check
└   time() - start_time = 797.920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 273
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279047
┌ Info: Price and cut time (b-and-b)
└   t = 1.8569959
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 273
│   lb = 2.7112176652645052
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 325
└   length(nodes) = 611
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 74581
└   sum(fire_plans.plans_per_fire) = 27055
┌ Info: Time check
└   time() - start_time = 799.8239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 344
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277504
┌ Info: Price and cut time (b-and-b)
└   t = 1.5439493
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 344
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0   0   0  6  15  2  0  0
│      0   0   0  9  6  6   2   3   4  0   0  0  0  0
│     10   0   0  0  0  0   0   0   0  0   0  0  0  0
│      5  20  20  1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  5  5  5  13  12  12  9   1  0  0  0
└      5   0   0  0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7001338
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0679996
│   obj = 2.714834282500158
└   obj_bound = 2.7146077792913275
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  3  1  1
│      1   1   1  10  7  7   3   4   5   1   1  1  1  1
│     11   1   1   1  1  1   1   1   1   1   1  1  1  1
│      6  21  21   2  1  1   1   1   1   1   1  1  1  1
│      1   1   1   6  6  6  14  13  13  10   2  1  1  1
└      6   1   1   1  2  1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3625278
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1759008
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  4  2  2
│      2   2   2  11  8  8   4   5   6   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2   7  7  7  15  14  14  11   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1098507
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2143077
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 344
│   lb = 2.7112176652645052
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 326
└   length(nodes) = 613
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75211
└   sum(fire_plans.plans_per_fire) = 27341
┌ Info: Time check
└   time() - start_time = 805.5590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 345
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241639
┌ Info: Price and cut time (b-and-b)
└   t = 0.5875873
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 345
│   lb = 2.711218386222468
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 327
└   length(nodes) = 615
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75253
└   sum(fire_plans.plans_per_fire) = 27363
┌ Info: Time check
└   time() - start_time = 806.1749999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 280
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281406
┌ Info: Price and cut time (b-and-b)
└   t = 0.8082108
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 280
│   lb = 2.711218386222468
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 328
└   length(nodes) = 617
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75404
└   sum(fire_plans.plans_per_fire) = 27403
┌ Info: Time check
└   time() - start_time = 807.0390000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 281
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282011
┌ Info: Price and cut time (b-and-b)
└   t = 1.4597015
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 281
│   lb = 2.711224275436844
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 329
└   length(nodes) = 619
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75456
└   sum(fire_plans.plans_per_fire) = 27451
┌ Info: Time check
└   time() - start_time = 808.5369999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 598
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286265
┌ Info: Price and cut time (b-and-b)
└   t = 0.9149679
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 598
│   lb = 2.711224275436844
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 330
└   length(nodes) = 621
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 75548
└   sum(fire_plans.plans_per_fire) = 27478
┌ Info: Time check
└   time() - start_time = 809.4949998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 599
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295664
┌ Info: Price and cut time (b-and-b)
└   t = 0.7155394
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 599
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0  0  0  6  15  2  0  0
│      0   0   0  11   1   1   6  7  7  0   0  0  0  0
│     10   0   0   0   0   0   0  0  0  0   0  0  0  0
│      5  20  20   1   0   0   0  0  0  0   0  0  0  0
│      0   0   0   3  11  11  10  9  9  9   0  0  0  0
└      5   0   0   0   1   0   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4112189
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1083874
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342824984866
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1  12   2   2   7   8   8   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1   4  12  12  11  10  10  10   1  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5435275
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.24877
│   obj = 2.7148342825001577
└   obj_bound = 2.7145714431879604
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2  13   3   3   8   9   9   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2   5  13  13  12  11  11  11   2  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2941908
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1639528
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 599
│   lb = 2.7112507257655767
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 331
└   length(nodes) = 621
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76130
└   sum(fire_plans.plans_per_fire) = 27734
┌ Info: Time check
└   time() - start_time = 813.537999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 318
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252763
┌ Info: Price and cut time (b-and-b)
└   t = 0.4009665
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 318
│   lb = 2.7112507257655767
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 332
└   length(nodes) = 623
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76153
└   sum(fire_plans.plans_per_fire) = 27752
┌ Info: Time check
└   time() - start_time = 813.981999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 319
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285509
┌ Info: Price and cut time (b-and-b)
└   t = 0.9266955
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 319
│   lb = 2.7112508369662676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 333
└   length(nodes) = 625
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76299
└   sum(fire_plans.plans_per_fire) = 27785
┌ Info: Time check
└   time() - start_time = 814.944000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 618
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258627
┌ Info: Price and cut time (b-and-b)
└   t = 1.5661153
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 618
│   lb = 2.7112508369662676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 334
└   length(nodes) = 627
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76440
└   sum(fire_plans.plans_per_fire) = 27834
┌ Info: Time check
└   time() - start_time = 816.5590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 619
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241907
┌ Info: Price and cut time (b-and-b)
└   t = 1.2567154
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 619
│   lb = 2.7112527911736706
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 335
└   length(nodes) = 629
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 76509
└   sum(fire_plans.plans_per_fire) = 27873
┌ Info: Time check
└   time() - start_time = 817.8539998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 420
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268672
┌ Info: Price and cut time (b-and-b)
└   t = 0.7628667
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 420
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0   0  0  0  6  14  2  0  0
│      0   0   0   1   0   0  12  9  8  0   0  0  0  0
│     10   0   0   0   0   0   0  0  0  0   0  0  0  0
│      5  20  20   1   0   0   0  0  0  0   0  0  0  0
│      0   0   0  14  11  12   3  6  7  8   1  0  0  0
└      5   0   0   0   1   0   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4552641
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0655089
│   obj = 2.714834282500158
└   obj_bound = 2.7147142938883917
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1  7  15  3  1  1
│      1   1   1   2   1   1  13  10  9  1   1  1  1  1
│     11   1   1   1   1   1   1   1  1  1   1  1  1  1
│      6  21  21   2   1   1   1   1  1  1   1  1  1  1
│      1   1   1  15  12  13   4   7  8  9   2  1  1  1
└      6   1   1   1   2   1   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3252828
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1427022
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2   3   2   2  14  11  10   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13  14   5   8   9  10   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7297493
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3916408
│   obj = 2.714834282500158
└   obj_bound = 2.7145752029505124
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 420
│   lb = 2.7112527911736706
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 336
└   length(nodes) = 631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77370
└   sum(fire_plans.plans_per_fire) = 28112
┌ Info: Time check
└   time() - start_time = 822.2449998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 421
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233465
┌ Info: Price and cut time (b-and-b)
└   t = 0.9821555
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 421
│   lb = 2.711257816796928
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 337
└   length(nodes) = 633
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77613
└   sum(fire_plans.plans_per_fire) = 28161
┌ Info: Time check
└   time() - start_time = 823.2639999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 210
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0419926
┌ Info: Price and cut time (b-and-b)
└   t = 0.7281883
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 210
│   lb = 2.711257816796928
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 338
└   length(nodes) = 635
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77711
└   sum(fire_plans.plans_per_fire) = 28192
┌ Info: Time check
└   time() - start_time = 824.0539999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 211
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251429
┌ Info: Price and cut time (b-and-b)
└   t = 0.8679585
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 211
│   lb = 2.711265682841018
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 339
└   length(nodes) = 637
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 77880
└   sum(fire_plans.plans_per_fire) = 28238
┌ Info: Time check
└   time() - start_time = 824.9470000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 428
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024452
┌ Info: Price and cut time (b-and-b)
└   t = 1.3172208
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 428
│   lb = 2.711265682841018
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 340
└   length(nodes) = 639
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78020
└   sum(fire_plans.plans_per_fire) = 28281
┌ Info: Time check
└   time() - start_time = 826.3039999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 429
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0700891
┌ Info: Price and cut time (b-and-b)
└   t = 1.0956965
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 429
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  7  15  1  0  0
│     0   0   0  9  3  6   3   4   5  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  6  8  5  12  11  10  8   1  0  0  0
└     4   1   3  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3844437
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0657654
│   obj = 2.7148342825001577
└   obj_bound = 2.714577668203077
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  2  1  1
│      1   1   1  10  4  7   4   5   6  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1   7  9  6  13  12  11  9   2  1  1  1
└      5   2   4   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2339338
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1799002
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  3  2  2
│      2   2   2  11   5  8   5   6   7   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2   8  10  7  14  13  12  10   3  2  2  2
└      6   3   5   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7412914
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3109418
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 429
│   lb = 2.7112663929465812
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 341
└   length(nodes) = 641
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78576
└   sum(fire_plans.plans_per_fire) = 28492
┌ Info: Time check
└   time() - start_time = 830.8989999294281
┌ Info: Exploring node
└   branch_and_bound_node.ix = 376
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273468
┌ Info: Price and cut time (b-and-b)
└   t = 1.0425304
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 376
│   lb = 2.7112663929465812
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 342
└   length(nodes) = 643
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78705
└   sum(fire_plans.plans_per_fire) = 28526
┌ Info: Time check
└   time() - start_time = 831.9860000610352
┌ Info: Exploring node
└   branch_and_bound_node.ix = 377
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277967
┌ Info: Price and cut time (b-and-b)
└   t = 1.2010063
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 377
│   lb = 2.7112791608505695
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 343
└   length(nodes) = 645
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78751
└   sum(fire_plans.plans_per_fire) = 28556
┌ Info: Time check
└   time() - start_time = 833.2189998626709
┌ Info: Exploring node
└   branch_and_bound_node.ix = 616
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309554
┌ Info: Price and cut time (b-and-b)
└   t = 1.4584129
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 616
│   lb = 2.7112791608505695
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 344
└   length(nodes) = 647
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78915
└   sum(fire_plans.plans_per_fire) = 28605
┌ Info: Time check
└   time() - start_time = 834.739000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 617
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033116
┌ Info: Price and cut time (b-and-b)
└   t = 1.1146339
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 617
│   lb = 2.7112871179470726
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 345
└   length(nodes) = 649
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 78987
└   sum(fire_plans.plans_per_fire) = 28640
┌ Info: Time check
└   time() - start_time = 835.9010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 508
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283486
┌ Info: Price and cut time (b-and-b)
└   t = 0.4658604
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 508
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0   0  7  15  2  0  0
│     0   0   0   0  3  2  12  9   6  0   0  0  0  0
│     9   2   0   0  0  0   0  0   0  0   0  0  0  0
│     7  17  18   0  0  0   0  0   0  0   0  0  0  0
│     0   0   0  15  9  9   3  6  10  8   1  0  0  0
└     4   1   2   0  1  1   0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4289077
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0689489
│   obj = 2.7148342825001577
└   obj_bound = 2.7145714890508
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  3  1  1
│      1   1   1   1   4   3  13  10   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  10  10   4   7  11  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0327974
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3952916
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2   2   5   4  14  11   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  11  11   5   8  12  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3976786
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4158978
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 508
│   lb = 2.7112871179470726
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 346
└   length(nodes) = 651
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79395
└   sum(fire_plans.plans_per_fire) = 28787
┌ Info: Time check
└   time() - start_time = 839.6729998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 509
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024045
┌ Info: Price and cut time (b-and-b)
└   t = 0.9691755
┌ Info: current bounds
│   node_ix = 509
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 347
└   length(nodes) = 651
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79559
└   sum(fire_plans.plans_per_fire) = 28844
┌ Info: Time check
└   time() - start_time = 840.6749999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 602
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241819
┌ Info: Price and cut time (b-and-b)
└   t = 0.2984709
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 602
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 348
└   length(nodes) = 653
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79580
└   sum(fire_plans.plans_per_fire) = 28854
┌ Info: Time check
└   time() - start_time = 841.0130000114441
┌ Info: Exploring node
└   branch_and_bound_node.ix = 652
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316678
┌ Info: Price and cut time (b-and-b)
└   t = 0.8036379
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 652
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 349
└   length(nodes) = 655
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79617
└   sum(fire_plans.plans_per_fire) = 28877
┌ Info: Time check
└   time() - start_time = 841.8550000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 653
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030416
┌ Info: Price and cut time (b-and-b)
└   t = 0.9722586
┌ Info: current bounds
│   node_ix = 653
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 350
└   length(nodes) = 655
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 79763
└   sum(fire_plans.plans_per_fire) = 28915
┌ Info: Time check
└   time() - start_time = 842.8819999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 603
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026632
┌ Info: Price and cut time (b-and-b)
└   t = 0.365463
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 603
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0   0  7  14  1  0  0
│     0   0   0   0   0   1  6  12  12  0   0  0  0  0
│     9   2   0   0   0   0  0   0   0  0   0  0  0  0
│     7  17  18   0   0   0  0   0   0  0   0  0  0  0
│     0   0   0  15  11  11  9   3   4  7   1  0  0  0
└     5   2   3   0   2   0  0   0   0  0   3  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4117746
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0948063
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  2  1  1
│      1   1   1   1   1   2   7  13  13  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12  10   4   5  8   2  1  1  1
└      6   3   4   1   3   1   1   1   1  1   4  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5524844
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1551294
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   2   3   8  14  14  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  13  13  11   5   6  9   3  2  2  2
└      7   4   5   2   4   2   2   2   2  2   5  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7732133
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1589417
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 603
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 351
└   length(nodes) = 657
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80128
└   sum(fire_plans.plans_per_fire) = 29122
┌ Info: Time check
└   time() - start_time = 846.9179999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 656
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271547
┌ Info: Price and cut time (b-and-b)
└   t = 0.6115994
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 656
│   lb = 2.7113057421438147
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 352
└   length(nodes) = 659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80177
└   sum(fire_plans.plans_per_fire) = 29139
┌ Info: Time check
└   time() - start_time = 847.5729999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 657
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290234
┌ Info: Price and cut time (b-and-b)
└   t = 0.6914286
┌ Info: current bounds
│   node_ix = 657
│   lb = 2.7113547066346126
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 353
└   length(nodes) = 659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80359
└   sum(fire_plans.plans_per_fire) = 29169
┌ Info: Time check
└   time() - start_time = 848.3259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 630
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264851
┌ Info: Price and cut time (b-and-b)
└   t = 1.1351078
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 630
│   lb = 2.7113547066346126
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 354
└   length(nodes) = 661
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80508
└   sum(fire_plans.plans_per_fire) = 29214
┌ Info: Time check
└   time() - start_time = 849.5099999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 631
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232899
┌ Info: Price and cut time (b-and-b)
└   t = 0.6958384
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 631
│   lb = 2.711357008748857
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 355
└   length(nodes) = 663
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 80587
└   sum(fire_plans.plans_per_fire) = 29242
┌ Info: Time check
└   time() - start_time = 850.2339999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 402
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325845
┌ Info: Price and cut time (b-and-b)
└   t = 0.4652591
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 402
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  9  9  0  0
│      0   0   0   0  3  2  9  9  8   0  0  0  0  0
│     10   0   0   0  0  0  0  0  0   0  0  0  0  0
│      3  20  20  15  0  0  0  0  0   0  2  2  0  0
│      0   0   0   0  9  9  6  7  8  14  8  1  0  0
└      7   0   0   0  0  0  0  0  0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5982691
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0580331
│   obj = 2.7148342825001577
└   obj_bound = 2.714639906796578
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1   1  10  10  1  1
│      1   1   1   1   4   3  10  10  9   1   1   1  1  1
│     11   1   1   1   1   1   1   1  1   1   1   1  1  1
│      4  21  21  16   1   1   1   1  1   1   3   3  1  1
│      1   1   1   1  10  10   7   8  9  15   9   2  1  1
└      8   1   1   1   1   1   1   1  1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.454433
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0507975
│   obj = 2.714834282500158
└   obj_bound = 2.714614360474209
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  11  11  2  2
│      2   2   2   2   5   4  11  11  10   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  11   8   9  10  16  10   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6111498
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0679555
│   obj = 2.714834282500158
└   obj_bound = 2.714576597881425
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 402
│   lb = 2.711357008748857
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 356
└   length(nodes) = 665
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81251
└   sum(fire_plans.plans_per_fire) = 29545
┌ Info: Time check
└   time() - start_time = 855.0820000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 403
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284927
┌ Info: Price and cut time (b-and-b)
└   t = 0.8190767
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 403
│   lb = 2.711357008748857
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 357
└   length(nodes) = 667
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81326
└   sum(fire_plans.plans_per_fire) = 29576
┌ Info: Time check
└   time() - start_time = 855.9430000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 664
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261674
┌ Info: Price and cut time (b-and-b)
└   t = 0.8764463
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 664
│   lb = 2.711357008748857
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 358
└   length(nodes) = 669
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81474
└   sum(fire_plans.plans_per_fire) = 29612
┌ Info: Time check
└   time() - start_time = 856.8529999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 665
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258906
┌ Info: Price and cut time (b-and-b)
└   t = 0.8041699
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 665
│   lb = 2.7113608787062566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 359
└   length(nodes) = 671
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81630
└   sum(fire_plans.plans_per_fire) = 29651
┌ Info: Time check
└   time() - start_time = 857.694000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 336
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025475
┌ Info: Price and cut time (b-and-b)
└   t = 0.6373736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 336
│   lb = 2.7113608787062566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 360
└   length(nodes) = 673
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 81663
└   sum(fire_plans.plans_per_fire) = 29670
┌ Info: Time check
└   time() - start_time = 858.3719999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 337
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252515
┌ Info: Price and cut time (b-and-b)
└   t = 0.7453322
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 337
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0   0   0   0  8  9  0  0
│      0   0   0   0  9  5  6   5   6   0  0  0  0  0
│     10   0   0   0  0  0  0   0   0   0  0  0  0  0
│      4  21  21  16  0  0  0   0   0   0  3  3  0  0
│      0   0   0   0  3  6  9  10  10  14  7  1  0  0
└      7   0   0   0  0  0  0   0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5183441
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0625544
│   obj = 2.714834282500158
└   obj_bound = 2.714592040190544
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1  10  6   7   6   7   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      5  22  22  17   1  1   1   1   1   1  4   4  1  1
│      1   1   1   1   4  7  10  11  11  15  8   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3463264
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.041444
│   obj = 2.7148342825001577
└   obj_bound = 2.7148222604436745
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  11  7   8   7   8   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      6  23  23  18   2  2   2   2   2   2   5   5  2  2
│      2   2   2   2   5  8  11  12  12  16   9   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.846476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0658909
│   obj = 2.714834282500158
└   obj_bound = 2.7146158710901345
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 337
│   lb = 2.711365811513987
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 361
└   length(nodes) = 675
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82347
└   sum(fire_plans.plans_per_fire) = 29907
┌ Info: Time check
└   time() - start_time = 862.5079998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 542
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0628137
┌ Info: Price and cut time (b-and-b)
└   t = 1.2590549
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 542
│   lb = 2.711365811513987
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 362
└   length(nodes) = 677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82391
└   sum(fire_plans.plans_per_fire) = 29942
┌ Info: Time check
└   time() - start_time = 863.8450000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 543
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266659
┌ Info: Price and cut time (b-and-b)
└   t = 0.9743515
┌ Info: current bounds
│   node_ix = 543
│   lb = 2.7113660295849367
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 363
└   length(nodes) = 677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82667
└   sum(fire_plans.plans_per_fire) = 29991
┌ Info: Time check
└   time() - start_time = 864.856999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 328
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253144
┌ Info: Price and cut time (b-and-b)
└   t = 0.3941663
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 328
│   lb = 2.7113660295849367
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 364
└   length(nodes) = 679
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82715
└   sum(fire_plans.plans_per_fire) = 30007
┌ Info: Time check
└   time() - start_time = 865.2829999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 329
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0419872
┌ Info: Price and cut time (b-and-b)
└   t = 0.8432386
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 329
│   lb = 2.711372049869046
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 365
└   length(nodes) = 681
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 82871
└   sum(fire_plans.plans_per_fire) = 30054
┌ Info: Time check
└   time() - start_time = 866.1930000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 594
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246127
┌ Info: Price and cut time (b-and-b)
└   t = 0.2047745
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 594
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  14  2  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   3  9  8   1  0  0  0
└     4   1   2   0   1   1   0   0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4300964
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0614911
│   obj = 2.714834282500158
└   obj_bound = 2.7145847637048632
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   4  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9648421
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4575473
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  13   5   5  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4178567
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3973882
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 594
│   lb = 2.711372049869046
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 366
└   length(nodes) = 683
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83339
└   sum(fire_plans.plans_per_fire) = 30180
┌ Info: Time check
└   time() - start_time = 869.6610000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 595
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255397
┌ Info: Price and cut time (b-and-b)
└   t = 0.27086
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 595
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 367
└   length(nodes) = 685
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83371
└   sum(fire_plans.plans_per_fire) = 30191
┌ Info: Time check
└   time() - start_time = 869.9660000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 682
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335431
┌ Info: Price and cut time (b-and-b)
└   t = 0.6384045
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 682
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 368
└   length(nodes) = 687
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83411
└   sum(fire_plans.plans_per_fire) = 30209
┌ Info: Time check
└   time() - start_time = 870.6519999504089
┌ Info: Exploring node
└   branch_and_bound_node.ix = 683
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311644
┌ Info: Price and cut time (b-and-b)
└   t = 1.0544756
┌ Info: current bounds
│   node_ix = 683
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 369
└   length(nodes) = 687
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83479
└   sum(fire_plans.plans_per_fire) = 30251
┌ Info: Time check
└   time() - start_time = 871.7539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 684
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287514
┌ Info: Price and cut time (b-and-b)
└   t = 0.1854348
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 684
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 370
└   length(nodes) = 689
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83485
└   sum(fire_plans.plans_per_fire) = 30259
┌ Info: Time check
└   time() - start_time = 871.9769999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 685
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265462
┌ Info: Price and cut time (b-and-b)
└   t = 0.1764023
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 685
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  14  2  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   3  9  8   1  0  0  0
└     4   1   2   0   1   1   0   0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4053911
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0742668
│   obj = 2.714834282500158
└   obj_bound = 2.7145675547248675
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   4  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9681435
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3140881
│   obj = 2.7148342825001577
└   obj_bound = 2.714585367496296
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  13   5   5  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5636091
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2210916
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 685
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 371
└   length(nodes) = 691
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83782
└   sum(fire_plans.plans_per_fire) = 30398
┌ Info: Time check
└   time() - start_time = 875.3239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 688
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244156
┌ Info: Price and cut time (b-and-b)
└   t = 0.8951588
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 688
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 372
└   length(nodes) = 693
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83788
└   sum(fire_plans.plans_per_fire) = 30422
┌ Info: Time check
└   time() - start_time = 876.2449998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 689
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248251
┌ Info: Price and cut time (b-and-b)
└   t = 1.2748288
┌ Info: current bounds
│   node_ix = 689
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 373
└   length(nodes) = 693
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83794
└   sum(fire_plans.plans_per_fire) = 30473
┌ Info: Time check
└   time() - start_time = 877.569000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 690
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027474
┌ Info: Price and cut time (b-and-b)
└   t = 0.2077762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 690
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 374
└   length(nodes) = 695
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83800
└   sum(fire_plans.plans_per_fire) = 30481
┌ Info: Time check
└   time() - start_time = 877.8109998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 691
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332087
┌ Info: Price and cut time (b-and-b)
└   t = 0.2320302
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 691
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 375
└   length(nodes) = 697
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83841
└   sum(fire_plans.plans_per_fire) = 30488
┌ Info: Time check
└   time() - start_time = 878.0929999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 694
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258598
┌ Info: Price and cut time (b-and-b)
└   t = 0.7228149
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 694
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  7  15  2  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   0  15  11  11   3   3  9  8   2  0  0  0
└     4   1   2   0   1   1   0   0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3193134
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0629458
│   obj = 2.714834282500158
└   obj_bound = 2.7146070053419136
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  3  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   4   4  10  9   3  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8799787
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.171446
│   obj = 2.714834282500158
└   obj_bound = 2.7146063762224535
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  13   5   5  11  10   4  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0080762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1128321
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 694
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 376
└   length(nodes) = 699
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83874
└   sum(fire_plans.plans_per_fire) = 30665
┌ Info: Time check
└   time() - start_time = 881.9830000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 695
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02514
┌ Info: Price and cut time (b-and-b)
└   t = 0.804449
┌ Info: current bounds
│   node_ix = 695
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 377
└   length(nodes) = 699
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83880
└   sum(fire_plans.plans_per_fire) = 30710
┌ Info: Time check
└   time() - start_time = 882.8199999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 696
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277861
┌ Info: Price and cut time (b-and-b)
└   t = 0.8468859
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 696
│   lb = 2.711372049869047
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 378
└   length(nodes) = 701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 83910
└   sum(fire_plans.plans_per_fire) = 30732
┌ Info: Time check
└   time() - start_time = 883.7070000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 697
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298241
┌ Info: Price and cut time (b-and-b)
└   t = 1.3358662
┌ Info: current bounds
│   node_ix = 697
│   lb = 2.7113813384129366
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 379
└   length(nodes) = 701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84000
└   sum(fire_plans.plans_per_fire) = 30782
┌ Info: Time check
└   time() - start_time = 885.0989999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 470
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262419
┌ Info: Price and cut time (b-and-b)
└   t = 0.7553253
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 470
│   lb = 2.7113813384129366
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 380
└   length(nodes) = 703
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84059
└   sum(fire_plans.plans_per_fire) = 30804
┌ Info: Time check
└   time() - start_time = 885.8870000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 471
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262858
┌ Info: Price and cut time (b-and-b)
└   t = 0.5946279
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 471
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0   0  6  15  2  0  0
│      0   0   0   0   0  2  9  9  10  0   0  0  0  0
│     10   0   0   0   0  0  0  0   0  0   0  0  0  0
│      5  20  20   1   0  0  0  0   0  0   0  0  0  0
│      0   0   0  15  12  9  6  6   5  9   1  2  0  0
└      5   0   0   0   1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5276937
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0683641
│   obj = 2.714834282500158
└   obj_bound = 2.7145785294233065
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1   1   1   3  10  10  11   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  16  13  10   7   7   6  10   2  3  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8406198
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1593725
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   2   2   4  11  11  12   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  14  11   8   8   7  11   3  4  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 13, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1198825
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3044526
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 471
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 381
└   length(nodes) = 703
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84422
└   sum(fire_plans.plans_per_fire) = 31015
┌ Info: Time check
└   time() - start_time = 890.0349998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 410
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252621
┌ Info: Price and cut time (b-and-b)
└   t = 0.3565097
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 410
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 382
└   length(nodes) = 705
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84486
└   sum(fire_plans.plans_per_fire) = 31027
┌ Info: Time check
└   time() - start_time = 890.4300000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 411
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258955
┌ Info: Price and cut time (b-and-b)
└   t = 0.2431768
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 411
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 383
└   length(nodes) = 707
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84532
└   sum(fire_plans.plans_per_fire) = 31037
┌ Info: Time check
└   time() - start_time = 890.7539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 704
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314346
┌ Info: Price and cut time (b-and-b)
└   t = 1.8582504
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 704
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 384
└   length(nodes) = 709
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84610
└   sum(fire_plans.plans_per_fire) = 31083
┌ Info: Time check
└   time() - start_time = 892.6579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 705
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295156
┌ Info: Price and cut time (b-and-b)
└   t = 1.3993797
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: current bounds
│   node_ix = 705
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 385
└   length(nodes) = 711
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 84764
└   sum(fire_plans.plans_per_fire) = 31129
┌ Info: Time check
└   time() - start_time = 894.1059999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 706
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293201
┌ Info: Price and cut time (b-and-b)
└   t = 1.2528826
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 706
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  8  9  0  0
│      0   0   0   0  3  6  6  9  6   0  0  0  0  0
│     10   0   0   0  0  0  0  0  0   0  0  0  0  0
│      3  20  20  15  0  0  0  0  0   0  2  2  0  0
│      0   0   0   0  9  5  9  6  9  14  8  1  0  0
└      7   0   0   0  0  0  0  0  0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7852048
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0672988
│   obj = 2.7148342825001586
└   obj_bound = 2.714600414805318
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  7   7  10   7   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6  10   7  10  15  9   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.623483
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0449315
│   obj = 2.714834282500158
└   obj_bound = 2.7147133527224105
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  8   8  11   8   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7  11   8  11  16  10   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.095776
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0637213
│   obj = 2.714834282500158
└   obj_bound = 2.7145722151748304
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001586
┌ Info: current bounds
│   node_ix = 706
│   lb = 2.7113917166749424
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 386
└   length(nodes) = 713
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85379
└   sum(fire_plans.plans_per_fire) = 31448
┌ Info: Time check
└   time() - start_time = 899.6019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 707
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(8, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262741
┌ Info: Price and cut time (b-and-b)
└   t = 1.2504211
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 707
│   lb = 2.7113919482452897
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 387
└   length(nodes) = 715
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85535
└   sum(fire_plans.plans_per_fire) = 31492
┌ Info: Time check
└   time() - start_time = 900.8889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 430
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239294
┌ Info: Price and cut time (b-and-b)
└   t = 1.0292345
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 430
│   lb = 2.7113919482452897
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 388
└   length(nodes) = 717
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85582
└   sum(fire_plans.plans_per_fire) = 31523
┌ Info: Time check
└   time() - start_time = 901.960000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 431
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234697
┌ Info: Price and cut time (b-and-b)
└   t = 1.2796053
┌ Info: current bounds
│   node_ix = 431
│   lb = 2.71139815476747
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 389
└   length(nodes) = 717
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85787
└   sum(fire_plans.plans_per_fire) = 31589
┌ Info: Time check
└   time() - start_time = 903.2699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 408
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283508
┌ Info: Price and cut time (b-and-b)
└   t = 0.232522
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 408
│   lb = 2.71139815476747
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 390
└   length(nodes) = 719
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 85814
└   sum(fire_plans.plans_per_fire) = 31599
┌ Info: Time check
└   time() - start_time = 903.5539999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 409
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268691
┌ Info: Price and cut time (b-and-b)
└   t = 0.6719197
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 409
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0  6  15  2  0  0
│      0   0   0   3  6  5   6   5   5  0   0  0  0  0
│     10   0   0   0  0  0   0   0   0  0   0  0  0  0
│      5  20  20   1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  11  5  7  10  11  10  9   1  0  0  0
└      5   0   0   0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5264631
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0696048
│   obj = 2.714834282500158
└   obj_bound = 2.7146398714162268
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  3  1  1
│      1   1   1   4  7  6   7   6   6   1   1  1  1  1
│     11   1   1   1  1  1   1   1   1   1   1  1  1  1
│      6  21  21   2  1  1   1   1   1   1   1  1  1  1
│      1   1   1  12  6  8  11  12  11  10   2  1  1  1
└      6   1   1   1  2  1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3080248
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3182596
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  4  2  2
│      2   2   2   5  8  7   8   7   7   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2  13  7  9  12  13  12  11   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3677467
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2307626
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 409
│   lb = 2.7114024494870317
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 391
└   length(nodes) = 721
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86337
└   sum(fire_plans.plans_per_fire) = 31872
┌ Info: Time check
└   time() - start_time = 908.5929999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 424
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264163
┌ Info: Price and cut time (b-and-b)
└   t = 0.5379397
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 424
│   lb = 2.7114024494870317
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 392
└   length(nodes) = 723
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86439
└   sum(fire_plans.plans_per_fire) = 31894
┌ Info: Time check
└   time() - start_time = 909.170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 425
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285791
┌ Info: Price and cut time (b-and-b)
└   t = 0.764379
┌ Info: current bounds
│   node_ix = 425
│   lb = 2.711406215033431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 393
└   length(nodes) = 723
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86526
└   sum(fire_plans.plans_per_fire) = 31944
┌ Info: Time check
└   time() - start_time = 909.9809999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 674
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298794
┌ Info: Price and cut time (b-and-b)
└   t = 0.8326247
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 674
│   lb = 2.711406215033431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 394
└   length(nodes) = 725
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86619
└   sum(fire_plans.plans_per_fire) = 31974
┌ Info: Time check
└   time() - start_time = 910.8499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 675
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326214
┌ Info: Price and cut time (b-and-b)
└   t = 0.894727
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 675
│   lb = 2.71141007987933
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 395
└   length(nodes) = 727
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 86761
└   sum(fire_plans.plans_per_fire) = 32014
┌ Info: Time check
└   time() - start_time = 911.7920000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 680
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0673444
┌ Info: Price and cut time (b-and-b)
└   t = 0.7080275
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 680
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0  0  0   0  6  15  2  0  0
│      0   0   0   4   2   1  7  9  11  0   0  0  0  0
│     10   0   0   0   0   0  0  0   0  0   0  0  0  0
│      5  20  20   1   0   0  0  0   0  0   0  0  0  0
│      0   0   0  11  10  10  9  6   5  9   1  0  0  0
└      5   0   0   0   1   0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.377235
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1158879
│   obj = 2.714834282500158
└   obj_bound = 2.7148342824984866
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1   5   3   2   8  10  12   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  12  11  11  10   7   6  10   2  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9869318
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1648905
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   6   4   3   9  11  13   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  13  12  12  11   8   7  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.637833
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.327743
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 680
│   lb = 2.71141007987933
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 396
└   length(nodes) = 729
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87297
└   sum(fire_plans.plans_per_fire) = 32289
┌ Info: Time check
└   time() - start_time = 916.7089998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 681
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225413
┌ Info: Price and cut time (b-and-b)
└   t = 0.7429223
┌ Info: current bounds
│   node_ix = 681
│   lb = 2.7114100798793306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 397
└   length(nodes) = 729
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87479
└   sum(fire_plans.plans_per_fire) = 32342
┌ Info: Time check
└   time() - start_time = 917.4960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 728
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278132
┌ Info: Price and cut time (b-and-b)
└   t = 0.628322
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 728
│   lb = 2.7114100798793306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 398
└   length(nodes) = 731
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87597
└   sum(fire_plans.plans_per_fire) = 32364
┌ Info: Time check
└   time() - start_time = 918.1670000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 729
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271596
┌ Info: Price and cut time (b-and-b)
└   t = 0.927904
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 729
│   lb = 2.7114100798793306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 399
└   length(nodes) = 733
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87809
└   sum(fire_plans.plans_per_fire) = 32407
┌ Info: Time check
└   time() - start_time = 919.135999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 730
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314386
┌ Info: Price and cut time (b-and-b)
└   t = 0.8705297
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 730
│   lb = 2.7114100798793306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 400
└   length(nodes) = 735
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 87886
└   sum(fire_plans.plans_per_fire) = 32444
┌ Info: Time check
└   time() - start_time = 920.0590000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 731
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271004
┌ Info: Price and cut time (b-and-b)
└   t = 0.9733509
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 731
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0  6  15  2  0  0
│      0   0   0   3  2  2  6  8  9  0   0  0  0  0
│     10   0   0   0  0  0  0  0  0  0   0  0  0  0
│      5  20  20   1  0  0  0  0  0  0   0  0  0  0
│      0   0   0  11  9  9  9  7  6  9   1  0  0  0
└      5   0   0   0  1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4625808
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0661369
│   obj = 2.714834282500158
└   obj_bound = 2.7146239291214442
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1   1   7  16  3  1  1
│      1   1   1   4   3   3   7  9  10   1   1  1  1  1
│     11   1   1   1   1   1   1  1   1   1   1  1  1  1
│      6  21  21   2   1   1   1  1   1   1   1  1  1  1
│      1   1   1  12  10  10  10  8   7  10   2  1  1  1
└      6   1   1   1   2   1   1  1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4292809
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2078553
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   5   4   4   8  10  11   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  13  11  11  11   9   8  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2603089
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2045406
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 731
│   lb = 2.711415007998564
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 401
└   length(nodes) = 737
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88493
└   sum(fire_plans.plans_per_fire) = 32724
┌ Info: Time check
└   time() - start_time = 925.1930000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 670
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271745
┌ Info: Price and cut time (b-and-b)
└   t = 0.9280479
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 670
│   lb = 2.711415007998564
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 402
└   length(nodes) = 739
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88565
└   sum(fire_plans.plans_per_fire) = 32765
┌ Info: Time check
└   time() - start_time = 926.1659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 671
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283091
┌ Info: Price and cut time (b-and-b)
└   t = 0.8393847
┌ Info: current bounds
│   node_ix = 671
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 403
└   length(nodes) = 739
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88778
└   sum(fire_plans.plans_per_fire) = 32812
┌ Info: Time check
└   time() - start_time = 927.050999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 382
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254594
┌ Info: Price and cut time (b-and-b)
└   t = 0.2335013
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 382
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 404
└   length(nodes) = 741
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88809
└   sum(fire_plans.plans_per_fire) = 32823
┌ Info: Time check
└   time() - start_time = 927.3320000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 383
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325237
┌ Info: Price and cut time (b-and-b)
└   t = 0.2127477
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 383
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 405
└   length(nodes) = 743
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 88839
└   sum(fire_plans.plans_per_fire) = 32832
┌ Info: Time check
└   time() - start_time = 927.5839998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 740
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293358
┌ Info: Price and cut time (b-and-b)
└   t = 0.5812303
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 740
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  1  6  15  1  0  0
│     0   0   0   0   1  6  9  9  6  0   0  0  0  0
│     9   2   0   0   0  0  0  0  0  0   0  0  0  0
│     7  17  18   0   0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  11  5  6  6  9  9   1  0  0  0
└     4   1   2   0   1  1  0  0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6724847
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0714352
│   obj = 2.7148342825001577
└   obj_bound = 2.7146140947476045
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   2   7  16  2  1  1
│      1   1   1   1   2  7  10  10   7   1   1  1  1  1
│     10   3   1   1   1  1   1   1   1   1   1  1  1  1
│      8  18  19   1   1  1   1   1   1   1   1  1  1  1
│      1   1   1  16  12  6   7   7  10  10   2  1  1  1
└      5   2   3   1   2  2   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4777531
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2221948
│   obj = 2.714834282500158
└   obj_bound = 2.7146021771753794
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   3   8  17  3  2  2
│      2   2   2   2   3  8  11  11   8   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  13  7   8   8  11  11   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.694978
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1840503
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 740
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 406
└   length(nodes) = 745
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89245
└   sum(fire_plans.plans_per_fire) = 33020
┌ Info: Time check
└   time() - start_time = 932.0880000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 741
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238154
┌ Info: Price and cut time (b-and-b)
└   t = 0.9050753
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 741
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 407
└   length(nodes) = 747
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89334
└   sum(fire_plans.plans_per_fire) = 33053
┌ Info: Time check
└   time() - start_time = 933.039999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 742
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268883
┌ Info: Price and cut time (b-and-b)
└   t = 0.8595033
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 742
│   lb = 2.7114220469042096
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 408
└   length(nodes) = 749
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89429
└   sum(fire_plans.plans_per_fire) = 33083
┌ Info: Time check
└   time() - start_time = 933.9359998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 743
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0680204
┌ Info: Price and cut time (b-and-b)
└   t = 0.5850422
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 743
│   lb = 2.7114225488906216
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 409
└   length(nodes) = 751
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89480
└   sum(fire_plans.plans_per_fire) = 33104
┌ Info: Time check
└   time() - start_time = 934.6010000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 416
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275163
┌ Info: Price and cut time (b-and-b)
└   t = 0.6910113
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 416
│   lb = 2.7114225488906216
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 410
└   length(nodes) = 753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 89526
└   sum(fire_plans.plans_per_fire) = 33129
┌ Info: Time check
└   time() - start_time = 935.3499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 417
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025884
┌ Info: Price and cut time (b-and-b)
└   t = 1.1176751
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 417
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0  5  15  2  0  0
│      0   0   0   1   0  8  9  7  7  1   0  0  0  0
│     10   0   0   0   0  0  0  0  0  0   0  0  0  0
│      6  21  21   2   0  0  0  0  0  0   0  0  0  0
│      0   0   0  14  11  3  7  8  9  9   1  0  0  0
└      5   0   0   0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4453391
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1424501
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1  1   1   6  16  3  1  1
│      1   1   1   2   1  9  10  8   8   2   1  1  1  1
│     11   1   1   1   1  1   1  1   1   1   1  1  1  1
│      7  22  22   3   1  1   1  1   1   1   1  1  1  1
│      1   1   1  15  12  4   8  9  10  10   2  1  1  1
└      6   1   1   1   2  1   1  1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1753842
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1673911
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   7  17  4  2  2
│      2   2   2   3   2  10  11   9   9   3   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      8  23  23   4   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13   5   9  10  11  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7332994
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2692649
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 417
│   lb = 2.711422548890622
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 411
└   length(nodes) = 753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90272
└   sum(fire_plans.plans_per_fire) = 33402
┌ Info: Time check
└   time() - start_time = 939.9919998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 752
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233004
┌ Info: Price and cut time (b-and-b)
└   t = 0.6643489
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 752
│   lb = 2.711422548890622
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 412
└   length(nodes) = 755
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90299
└   sum(fire_plans.plans_per_fire) = 33422
┌ Info: Time check
└   time() - start_time = 940.6789999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 753
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276117
┌ Info: Price and cut time (b-and-b)
└   t = 0.7238946
┌ Info: current bounds
│   node_ix = 753
│   lb = 2.711430086689814
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 413
└   length(nodes) = 755
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90418
└   sum(fire_plans.plans_per_fire) = 33455
┌ Info: Time check
└   time() - start_time = 941.454999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 634
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0362964
┌ Info: Price and cut time (b-and-b)
└   t = 0.3773935
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 634
│   lb = 2.711430086689814
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 414
└   length(nodes) = 757
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90477
└   sum(fire_plans.plans_per_fire) = 33473
┌ Info: Time check
└   time() - start_time = 941.8840000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 635
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308313
┌ Info: Price and cut time (b-and-b)
└   t = 1.3808
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 635
│   lb = 2.7114310178090055
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 415
└   length(nodes) = 759
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 90685
└   sum(fire_plans.plans_per_fire) = 33537
┌ Info: Time check
└   time() - start_time = 943.2999999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 324
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347442
┌ Info: Price and cut time (b-and-b)
└   t = 0.9232122
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 324
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  7  14  2  0  0
│     0   0   0  6  9  8   2   3   4  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  9  3  3  13  13  12  8   1  0  0  0
└     4   1   2  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.456198
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0783347
│   obj = 2.714834282500158
└   obj_bound = 2.714575094551066
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  15  3  1  1
│      1   1   1   7  10  9   3   4   5  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  10   4  4  14  14  13  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8436237
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1654881
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   8  11  10   4   5   6   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  11   5   5  15  15  14  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7443594
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2437803
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 324
│   lb = 2.7114310178090055
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 416
└   length(nodes) = 761
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91028
└   sum(fire_plans.plans_per_fire) = 33707
┌ Info: Time check
└   time() - start_time = 947.3610000610352
┌ Info: Exploring node
└   branch_and_bound_node.ix = 325
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245688
┌ Info: Price and cut time (b-and-b)
└   t = 1.4349367
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 325
│   lb = 2.71144102005443
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 417
└   length(nodes) = 763
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91111
└   sum(fire_plans.plans_per_fire) = 33760
┌ Info: Time check
└   time() - start_time = 948.8380000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 390
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307363
┌ Info: Price and cut time (b-and-b)
└   t = 0.6506278
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 390
│   lb = 2.71144102005443
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 418
└   length(nodes) = 765
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91191
└   sum(fire_plans.plans_per_fire) = 33785
┌ Info: Time check
└   time() - start_time = 949.5439999103546
┌ Info: Exploring node
└   branch_and_bound_node.ix = 391
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024688
┌ Info: Price and cut time (b-and-b)
└   t = 1.1323586
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 391
│   lb = 2.71144102005443
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 419
└   length(nodes) = 767
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91418
└   sum(fire_plans.plans_per_fire) = 33847
┌ Info: Time check
└   time() - start_time = 950.7149999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 764
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024078
┌ Info: Price and cut time (b-and-b)
└   t = 1.3627829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 764
│   lb = 2.71144102005443
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 420
└   length(nodes) = 769
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 91487
└   sum(fire_plans.plans_per_fire) = 33888
┌ Info: Time check
└   time() - start_time = 952.106999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 765
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244583
┌ Info: Price and cut time (b-and-b)
└   t = 1.3308331
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 765
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0  0   0  8  9  0  0
│      0   0   0   0   0  9  7  8  9   0  0  0  0  0
│     10   0   0   0   0  0  0  0  0   0  0  0  0  0
│      3  20  20  15   0  0  0  0  0   0  2  2  0  0
│      0   0   0   0  12  3  9  8  7  14  7  1  0  0
└      7   0   0   0   0  0  0  0  0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5218406
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0562578
│   obj = 2.714834282500158
└   obj_bound = 2.7146182156811847
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1   1   1  9  10  1  1
│      1   1   1   1   1  10   8  9  10   1  1   1  1  1
│     11   1   1   1   1   1   1  1   1   1  1   1  1  1
│      4  21  21  16   1   1   1  1   1   1  3   3  1  1
│      1   1   1   1  13   4  10  9   8  15  8   2  1  1
└      8   1   1   1   1   1   1  1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3496929
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0287865
│   obj = 2.714834282500158
└   obj_bound = 2.7146201151122495
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  11  2  2
│      2   2   2   2   2  11   9  10  11   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2  14   5  11  10   9  16   9   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8967656
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.05564
│   obj = 2.714834282500158
└   obj_bound = 2.71473040647913
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 765
│   lb = 2.7114585096038715
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 421
└   length(nodes) = 771
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92300
└   sum(fire_plans.plans_per_fire) = 34168
┌ Info: Time check
└   time() - start_time = 956.9140000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 720
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264173
┌ Info: Price and cut time (b-and-b)
└   t = 0.1648772
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 720
│   lb = 2.7114585096038715
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 422
└   length(nodes) = 773
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92320
└   sum(fire_plans.plans_per_fire) = 34177
┌ Info: Time check
└   time() - start_time = 957.1089999675751
┌ Info: Exploring node
└   branch_and_bound_node.ix = 721
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1442111
┌ Info: Price and cut time (b-and-b)
└   t = 0.5186241
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 721
│   lb = 2.711458509603872
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 423
└   length(nodes) = 775
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92367
└   sum(fire_plans.plans_per_fire) = 34193
┌ Info: Time check
└   time() - start_time = 957.795000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 774
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025088
┌ Info: Price and cut time (b-and-b)
└   t = 0.2323328
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 774
│   lb = 2.711458509603872
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 424
└   length(nodes) = 777
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92387
└   sum(fire_plans.plans_per_fire) = 34202
┌ Info: Time check
└   time() - start_time = 958.0729999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 775
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026759
┌ Info: Price and cut time (b-and-b)
└   t = 0.932449
┌ Info: current bounds
│   node_ix = 775
│   lb = 2.7114585096038724
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 425
└   length(nodes) = 777
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 92568
└   sum(fire_plans.plans_per_fire) = 34253
┌ Info: Time check
└   time() - start_time = 959.0460000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 772
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282091
┌ Info: Price and cut time (b-and-b)
└   t = 0.3434841
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 772
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0   0   0  6  15  2  0  0
│      0   0   0  5  7  5  7   4   5  0   0  0  0  0
│     10   0   0  0  0  0  0   0   0  0   0  0  0  0
│      5  20  20  1  0  0  0   0   0  0   0  0  0  0
│      0   0   0  9  6  7  9  11  11  9   1  0  0  0
└      5   0   0  0  1  0  0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5748535
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2344667
│   obj = 2.714834282500158
└   obj_bound = 2.7148342824993574
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  3  1  1
│      1   1   1   6  8  6   8   5   6   1   1  1  1  1
│     11   1   1   1  1  1   1   1   1   1   1  1  1  1
│      6  21  21   2  1  1   1   1   1   1   1  1  1  1
│      1   1   1  10  7  8  10  12  12  10   2  1  1  1
└      6   1   1   1  2  1   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3497334
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3023969
│   obj = 2.714834282500158
└   obj_bound = 2.714578583237639
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  4  2  2
│      2   2   2   7  9  7   9   6   7   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2  11  8  9  11  13  13  11   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3771898
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1806233
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 772
│   lb = 2.7114585096038724
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 426
└   length(nodes) = 779
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93002
└   sum(fire_plans.plans_per_fire) = 34499
┌ Info: Time check
└   time() - start_time = 963.9660000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 773
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269921
┌ Info: Price and cut time (b-and-b)
└   t = 1.4501804
┌ Info: current bounds
│   node_ix = 773
│   lb = 2.7114764876476816
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 427
└   length(nodes) = 779
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93239
└   sum(fire_plans.plans_per_fire) = 34567
┌ Info: Time check
└   time() - start_time = 965.4519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 414
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296394
┌ Info: Price and cut time (b-and-b)
└   t = 0.7504807
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 414
│   lb = 2.7114764876476816
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 428
└   length(nodes) = 781
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93415
└   sum(fire_plans.plans_per_fire) = 34603
┌ Info: Time check
└   time() - start_time = 966.2419998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 415
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278145
┌ Info: Price and cut time (b-and-b)
└   t = 1.0276897
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 415
│   lb = 2.7114764876476816
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 429
└   length(nodes) = 783
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93524
└   sum(fire_plans.plans_per_fire) = 34652
┌ Info: Time check
└   time() - start_time = 967.3229999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 780
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028499
┌ Info: Price and cut time (b-and-b)
└   t = 0.9080521
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 780
│   lb = 2.7114764876476816
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 430
└   length(nodes) = 785
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 93605
└   sum(fire_plans.plans_per_fire) = 34676
┌ Info: Time check
└   time() - start_time = 968.2709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 781
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247655
┌ Info: Price and cut time (b-and-b)
└   t = 0.7016495
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 781
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0   0  8  14  2  0  0
│      0   0   0   0   0  8  8  9   5  0   0  0  0  0
│     10   0   0   0   0  0  0  0   0  0   0  0  0  0
│      6  21  21   0   0  0  0  0   0  0   0  3  0  0
│      0   0   0  15  11  3  7  6  11  7   2  1  0  0
└      5   0   0   0   1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4886886
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0612634
│   obj = 2.714834282500158
└   obj_bound = 2.7145846509520197
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1  1   1   1  9  15  3  1  1
│      1   1   1   1   1  9  9  10   6  1   1  1  1  1
│     11   1   1   1   1  1  1   1   1  1   1  1  1  1
│      7  22  22   1   1  1  1   1   1  1   1  4  1  1
│      1   1   1  16  12  4  8   7  12  8   3  2  1  1
└      6   1   1   1   2  1  1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9316725
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1683834
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  16  4  2  2
│      2   2   2   2   2  10  10  11   7   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      8  23  23   2   2   2   2   2   2   2   2  5  2  2
│      2   2   2  17  13   5   9   8  13   9   4  3  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0568536
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2042075
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 781
│   lb = 2.7114774782737294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 431
└   length(nodes) = 785
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94199
└   sum(fire_plans.plans_per_fire) = 34916
┌ Info: Time check
└   time() - start_time = 972.4300000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 678
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0223394
┌ Info: Price and cut time (b-and-b)
└   t = 0.7213345
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 678
│   lb = 2.7114774782737294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 432
└   length(nodes) = 787
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94274
└   sum(fire_plans.plans_per_fire) = 34946
┌ Info: Time check
└   time() - start_time = 973.1840000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 786
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254836
┌ Info: Price and cut time (b-and-b)
└   t = 0.6210612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 786
│   lb = 2.7114774782737294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 433
└   length(nodes) = 789
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94449
└   sum(fire_plans.plans_per_fire) = 34971
┌ Info: Time check
└   time() - start_time = 973.8469998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 787
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265256
┌ Info: Price and cut time (b-and-b)
└   t = 0.7905795
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 787
│   lb = 2.7114774782737294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 434
└   length(nodes) = 791
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94671
└   sum(fire_plans.plans_per_fire) = 35004
┌ Info: Time check
└   time() - start_time = 974.6770000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 679
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224884
┌ Info: Price and cut time (b-and-b)
└   t = 0.8143117
┌ Info: current bounds
│   node_ix = 679
│   lb = 2.7114869426801635
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 435
└   length(nodes) = 791
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 94900
└   sum(fire_plans.plans_per_fire) = 35049
┌ Info: Time check
└   time() - start_time = 975.5329999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 580
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027033
┌ Info: Price and cut time (b-and-b)
└   t = 0.3584612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 580
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0   0  7  14  1  0  0
│     0   0   0   0   0   0  9  9  12  0   0  0  0  0
│     9   2   0   0   0   0  0  0   0  0   0  0  0  0
│     7  17  18   0   0   0  0  0   0  0   0  0  0  0
│     0   0   0  15  11  11  6  6   4  7   2  0  0  0
└     4   1   2   0   1   0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4783036
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0707999
│   obj = 2.714834282500158
└   obj_bound = 2.714567663226773
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  2  1  1
│      1   1   1   1   1   1  10  10  13  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12  12   7   7   5  8   3  1  1  1
└      5   2   3   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3117476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2005481
│   obj = 2.714834282500158
└   obj_bound = 2.714632559913004
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   2   2   2  11  11  14  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  13  13   8   8   6  9   4  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7894772
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3852233
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 580
│   lb = 2.7114869426801635
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 436
└   length(nodes) = 793
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95407
└   sum(fire_plans.plans_per_fire) = 35235
┌ Info: Time check
└   time() - start_time = 979.6970000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 581
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023015
┌ Info: Price and cut time (b-and-b)
└   t = 0.9774813
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 581
│   lb = 2.7114976780097493
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 437
└   length(nodes) = 795
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95540
└   sum(fire_plans.plans_per_fire) = 35276
┌ Info: Time check
└   time() - start_time = 980.7059998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 700
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311198
┌ Info: Price and cut time (b-and-b)
└   t = 0.3766641
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 700
│   lb = 2.7114976780097493
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 438
└   length(nodes) = 797
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95560
└   sum(fire_plans.plans_per_fire) = 35288
┌ Info: Time check
└   time() - start_time = 981.1280000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 701
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268823
┌ Info: Price and cut time (b-and-b)
└   t = 0.8497174
┌ Info: current bounds
│   node_ix = 701
│   lb = 2.7114976780097497
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 439
└   length(nodes) = 797
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95648
└   sum(fire_plans.plans_per_fire) = 35333
┌ Info: Time check
└   time() - start_time = 982.0199999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 686
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248079
┌ Info: Price and cut time (b-and-b)
└   t = 0.469309
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 686
│   lb = 2.7114976780097497
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 440
└   length(nodes) = 799
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 95682
└   sum(fire_plans.plans_per_fire) = 35347
┌ Info: Time check
└   time() - start_time = 982.537999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 687
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272299
┌ Info: Price and cut time (b-and-b)
└   t = 0.8888162
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 687
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0  0  8  15  1  0  0
│     0   0   0   0   0   0  12  12  6  0   0  0  0  0
│     9   2   0   0   0   0   0   0  0  0   0  0  0  0
│     7  17  18   0   0   0   0   0  0  0   0  0  0  0
│     0   0   1  15  12  11   3   3  9  7   1  0  0  0
└     4   1   2   0   0   1   0   0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4378152
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.079417
│   obj = 2.714834282500158
└   obj_bound = 2.714580110726663
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  9  16  2  1  1
│      1   1   1   1   1   1  13  13   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   2  16  13  12   4   4  10  8   2  1  1  1
└      5   2   3   1   1   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8128184
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1437042
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  17  3  2  2
│      2   2   2   2   2   2  14  14   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   3  17  14  13   5   5  11   9   3  2  2  2
└      6   3   4   2   2   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7236674
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2312885
│   obj = 2.714834282500158
└   obj_bound = 2.71472214955513
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 687
│   lb = 2.71149767800975
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 441
└   length(nodes) = 799
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96130
└   sum(fire_plans.plans_per_fire) = 35557
┌ Info: Time check
└   time() - start_time = 986.4849998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 692
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255456
┌ Info: Price and cut time (b-and-b)
└   t = 0.4855828
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 692
│   lb = 2.71149767800975
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 442
└   length(nodes) = 801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96136
└   sum(fire_plans.plans_per_fire) = 35570
┌ Info: Time check
└   time() - start_time = 987.0160000324249
┌ Info: Exploring node
└   branch_and_bound_node.ix = 693
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277664
┌ Info: Price and cut time (b-and-b)
└   t = 0.9566701
┌ Info: current bounds
│   node_ix = 693
│   lb = 2.71149767800975
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 443
└   length(nodes) = 801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96142
└   sum(fire_plans.plans_per_fire) = 35630
┌ Info: Time check
└   time() - start_time = 988.0069999694824
┌ Info: Exploring node
└   branch_and_bound_node.ix = 698
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268488
┌ Info: Price and cut time (b-and-b)
└   t = 0.3762827
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 698
│   lb = 2.71149767800975
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 444
└   length(nodes) = 803
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96148
└   sum(fire_plans.plans_per_fire) = 35640
┌ Info: Time check
└   time() - start_time = 988.4270000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 699
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265721
┌ Info: Price and cut time (b-and-b)
└   t = 0.8097036
┌ Info: current bounds
│   node_ix = 699
│   lb = 2.711499464923027
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 445
└   length(nodes) = 803
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96154
└   sum(fire_plans.plans_per_fire) = 35691
┌ Info: Time check
└   time() - start_time = 989.2730000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 502
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0227632
┌ Info: Price and cut time (b-and-b)
└   t = 0.4603023
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 502
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0  7  14  2  0  0
│      0   0   0   0  9  9   3   5   6  0   0  0  0  0
│     10   0   0   0  0  0   0   0   0  0   0  0  0  0
│      5  20  20   1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  14  2  2  12  11  10  8   1  0  0  0
└      5   0   0   0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5838328
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1217997
│   obj = 2.7148342825001577
└   obj_bound = 2.7145851560574603
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1  10  10   4   6   7  1   1  1  1  1
│     11   1   1   1   1   1   1   1   1  1   1  1  1  1
│      6  21  21   2   1   1   1   1   1  1   1  1  1  1
│      1   1   1  15   3   3  13  12  11  9   2  1  1  1
└      6   1   1   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9042713
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2375388
│   obj = 2.714834282500158
└   obj_bound = 2.7145783896917983
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2  11  11   5   7   8   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16   4   4  14  13  12  10   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2498219
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2676276
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 502
│   lb = 2.711499464923027
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 446
└   length(nodes) = 805
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96818
└   sum(fire_plans.plans_per_fire) = 35944
┌ Info: Time check
└   time() - start_time = 993.710000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 503
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272179
┌ Info: Price and cut time (b-and-b)
└   t = 1.2056296
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 503
│   lb = 2.711500416798768
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 447
└   length(nodes) = 807
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 96952
└   sum(fire_plans.plans_per_fire) = 36001
┌ Info: Time check
└   time() - start_time = 994.9630000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 388
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287818
┌ Info: Price and cut time (b-and-b)
└   t = 0.900863
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 388
│   lb = 2.711500416798768
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 448
└   length(nodes) = 809
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97035
└   sum(fire_plans.plans_per_fire) = 36032
┌ Info: Time check
└   time() - start_time = 995.912999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 389
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284806
┌ Info: Price and cut time (b-and-b)
└   t = 0.611239
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 389
│   lb = 2.711500848883954
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 449
└   length(nodes) = 811
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97139
└   sum(fire_plans.plans_per_fire) = 36061
┌ Info: Time check
└   time() - start_time = 996.566999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 496
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313466
┌ Info: Price and cut time (b-and-b)
└   t = 0.3355924
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 496
│   lb = 2.711500848883954
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 450
└   length(nodes) = 813
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97196
└   sum(fire_plans.plans_per_fire) = 36069
┌ Info: Time check
└   time() - start_time = 996.9470000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 497
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292088
┌ Info: Price and cut time (b-and-b)
└   t = 0.6903485
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 497
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  14  2  0  0
│     0   0   0   0  9  9   3   5   6  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  15  2  2  13  11  10  8   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5559039
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0745774
│   obj = 2.714834282500158
└   obj_bound = 2.714572326601407
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  15  3  1  1
│      1   1   1   1  10  10   4   6   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16   3   3  14  12  11  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5391974
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1866914
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2   2  11  11   5   7   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17   4   4  15  13  12  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5145715
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1559869
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 497
│   lb = 2.711501724779514
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 451
└   length(nodes) = 815
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97752
└   sum(fire_plans.plans_per_fire) = 36237
┌ Info: Time check
└   time() - start_time = 1001.364000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 808
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319036
┌ Info: Price and cut time (b-and-b)
└   t = 1.5886629
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 808
│   lb = 2.711501724779514
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 452
└   length(nodes) = 817
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97827
└   sum(fire_plans.plans_per_fire) = 36289
┌ Info: Time check
└   time() - start_time = 1002.9949998855591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 809
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285258
┌ Info: Price and cut time (b-and-b)
└   t = 1.0823952
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 809
│   lb = 2.7115060908270294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 453
└   length(nodes) = 819
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 97942
└   sum(fire_plans.plans_per_fire) = 36320
┌ Info: Time check
└   time() - start_time = 1004.1240000724792
┌ Info: Exploring node
└   branch_and_bound_node.ix = 462
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307423
┌ Info: Price and cut time (b-and-b)
└   t = 1.1480428
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 462
│   lb = 2.7115060908270294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 454
└   length(nodes) = 821
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98029
└   sum(fire_plans.plans_per_fire) = 36359
┌ Info: Time check
└   time() - start_time = 1005.3129999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 463
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304757
┌ Info: Price and cut time (b-and-b)
└   t = 0.688298
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 463
│   lb = 2.71150609082703
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 455
└   length(nodes) = 823
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98107
└   sum(fire_plans.plans_per_fire) = 36382
┌ Info: Time check
└   time() - start_time = 1006.0620000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 458
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268862
┌ Info: Price and cut time (b-and-b)
└   t = 1.3819444
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 458
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0  0   0   7  10  0  0
│      0   0   0   0  4  7  10  9  4   0   0   0  0  0
│     10   0   0   0  0  0   0  0  0   0   0   0  0  0
│      3  20  20  15  0  0   0  0  2   0   0   2  0  0
│      0   0   0   0  9  6   6  7  9  14  11   0  0  0
└      7   0   0   0  0  0   0  0  0   0   0   2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6494481
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0686199
│   obj = 2.714834282500158
└   obj_bound = 2.7146373563755333
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1   8  11  1  1
│      1   1   1   1   5  8  11  10   5   1   1   1  1  1
│     11   1   1   1   1  1   1   1   1   1   1   1  1  1
│      4  21  21  16   1  1   1   1   3   1   1   3  1  1
│      1   1   1   1  10  7   7   8  10  15  12   1  1  1
└      8   1   1   1   1  1   1   1   1   1   1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5384852
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0512258
│   obj = 2.714834282500158
└   obj_bound = 2.714806032169907
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2   9  12  2  2
│      2   2   2   2   6  9  12  11   6   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   4   2   2   4  2  2
│      2   2   2   2  11  8   8   9  11  16  13   2  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7096392
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0523434
│   obj = 2.714834282500158
└   obj_bound = 2.714636996596382
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 458
│   lb = 2.71150609082703
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 456
└   length(nodes) = 825
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98569
└   sum(fire_plans.plans_per_fire) = 36690
┌ Info: Time check
└   time() - start_time = 1012.0190000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 459
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02615
┌ Info: Price and cut time (b-and-b)
└   t = 0.9070184
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 459
│   lb = 2.711506643126026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 457
└   length(nodes) = 827
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98627
└   sum(fire_plans.plans_per_fire) = 36722
┌ Info: Time check
└   time() - start_time = 1012.9619998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 516
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309514
┌ Info: Price and cut time (b-and-b)
└   t = 0.49733
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 516
│   lb = 2.711506643126026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 458
└   length(nodes) = 829
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98660
└   sum(fire_plans.plans_per_fire) = 36735
┌ Info: Time check
└   time() - start_time = 1013.5120000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 517
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302515
┌ Info: Price and cut time (b-and-b)
└   t = 0.9606548
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 517
│   lb = 2.7115126740026465
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 459
└   length(nodes) = 831
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98813
└   sum(fire_plans.plans_per_fire) = 36782
┌ Info: Time check
└   time() - start_time = 1014.5230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 452
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295344
┌ Info: Price and cut time (b-and-b)
└   t = 0.7050855
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 452
│   lb = 2.7115126740026465
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 460
└   length(nodes) = 833
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 98850
└   sum(fire_plans.plans_per_fire) = 36802
┌ Info: Time check
└   time() - start_time = 1015.2709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 453
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0317004
┌ Info: Price and cut time (b-and-b)
└   t = 0.634772
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 453
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0  0   0   0  7  15  2  0  0
│     0   0   0  8  4   1  8   6   6  1   0  0  0  0
│     9   2   0  0  0   0  0   0   0  0   0  0  0  0
│     7  17  18  0  0   0  0   0   0  0   0  0  0  0
│     0   0   1  8  8  11  8  10  10  8   1  1  0  0
└     4   1   2  0  1   1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.787846
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0824219
│   obj = 2.714834282500158
└   obj_bound = 2.714566006166729
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1  1  1   1  1   1   1  8  16  3  1  1
│      1   1   1  9  5   2  9   7   7  2   1  1  1  1
│     10   3   1  1  1   1  1   1   1  1   1  1  1  1
│      8  18  19  1  1   1  1   1   1  1   1  1  1  1
│      1   1   2  9  9  12  9  11  11  9   2  2  1  1
└      5   2   3  1  2   2  1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7507336
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1686232
│   obj = 2.714834282500158
└   obj_bound = 2.7145698664934264
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2  10   6   3  10   8   8   3   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   3  10  10  13  10  12  12  10   3  3  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4733363
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1995485
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 453
│   lb = 2.71151527638596
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 461
└   length(nodes) = 833
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99299
└   sum(fire_plans.plans_per_fire) = 36991
┌ Info: Time check
└   time() - start_time = 1018.9300000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 562
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264696
┌ Info: Price and cut time (b-and-b)
└   t = 0.451854
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 562
│   lb = 2.71151527638596
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 462
└   length(nodes) = 835
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99362
└   sum(fire_plans.plans_per_fire) = 37007
┌ Info: Time check
└   time() - start_time = 1019.4170000553131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 563
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277219
┌ Info: Price and cut time (b-and-b)
└   t = 0.9224325
┌ Info: current bounds
│   node_ix = 563
│   lb = 2.7115179068534574
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 463
└   length(nodes) = 835
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99530
└   sum(fire_plans.plans_per_fire) = 37056
┌ Info: Time check
└   time() - start_time = 1020.3919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 494
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334769
┌ Info: Price and cut time (b-and-b)
└   t = 1.2586623
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 494
│   lb = 2.7115179068534574
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 464
└   length(nodes) = 837
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99697
└   sum(fire_plans.plans_per_fire) = 37107
┌ Info: Time check
└   time() - start_time = 1021.7409999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 495
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023043
┌ Info: Price and cut time (b-and-b)
└   t = 0.7968673
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 495
│   lb = 2.711523454197021
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 465
└   length(nodes) = 839
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 99763
└   sum(fire_plans.plans_per_fire) = 37132
┌ Info: Time check
└   time() - start_time = 1022.5859999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 726
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264358
┌ Info: Price and cut time (b-and-b)
└   t = 1.3110467
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 726
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  8  10  0  0
│      0   0   0   0  9  3  6  6  7   0  0   0  0  0
│     10   0   0   0  0  0  0  0  0   0  0   0  0  0
│      3  20  20  15  0  0  0  0  0   0  2   2  0  0
│      0   0   0   0  3  8  9  9  9  14  8   1  0  0
└      7   0   0   0  0  0  0  0  0   0  0   2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6142797
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0715077
│   obj = 2.714834282500158
└   obj_bound = 2.7147315543952573
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  11  1  1
│      1   1   1   1  10  4   7   7   8   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1   4  9  10  10  10  15  9   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7677758
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0516406
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  12  2  2
│      2   2   2   2  11   5   8   8   9   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2   5  10  11  11  11  16  10   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.023598
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0709269
│   obj = 2.714834282500158
└   obj_bound = 2.7147275604663608
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 726
│   lb = 2.711523454197021
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 466
└   length(nodes) = 841
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100360
└   sum(fire_plans.plans_per_fire) = 37423
┌ Info: Time check
└   time() - start_time = 1028.0520000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 727
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294353
┌ Info: Price and cut time (b-and-b)
└   t = 0.7708518
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 727
│   lb = 2.7115255334747195
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 467
└   length(nodes) = 843
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100466
└   sum(fire_plans.plans_per_fire) = 37454
┌ Info: Time check
└   time() - start_time = 1028.8580000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 426
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289468
┌ Info: Price and cut time (b-and-b)
└   t = 1.1653231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 426
│   lb = 2.7115255334747195
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 468
└   length(nodes) = 845
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100583
└   sum(fire_plans.plans_per_fire) = 37492
┌ Info: Time check
└   time() - start_time = 1030.0709998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 427
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267815
┌ Info: Price and cut time (b-and-b)
└   t = 1.4847265
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 427
│   lb = 2.7115295409708224
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 469
└   length(nodes) = 847
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100778
└   sum(fire_plans.plans_per_fire) = 37541
┌ Info: Time check
└   time() - start_time = 1031.5969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 716
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262085
┌ Info: Price and cut time (b-and-b)
└   t = 0.911256
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 716
│   lb = 2.7115295409708224
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 470
└   length(nodes) = 849
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 100892
└   sum(fire_plans.plans_per_fire) = 37575
┌ Info: Time check
└   time() - start_time = 1032.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 717
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271753
┌ Info: Price and cut time (b-and-b)
└   t = 0.9362656
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 717
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0   0   0   0  6  15  2  0  0
│      0   0   0   2   1  9  12   3   4  0   0  0  0  0
│     10   0   0   0   0  0   0   0   0  0   0  0  0  0
│      5  20  20   1   0  0   0   0   0  0   0  0  0  0
│      0   0   0  13  11  2   3  12  11  9   1  0  0  0
└      5   0   0   0   1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6157121
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2134303
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342824993574
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1   3   2  10  13   4   5   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  14  12   3   4  13  12  10   2  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1585847
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1970647
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   4   3  11  14   5   6   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  15  13   4   5  14  13  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9597631
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.223022
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 717
│   lb = 2.7115342215202185
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 471
└   length(nodes) = 851
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101571
└   sum(fire_plans.plans_per_fire) = 37844
┌ Info: Time check
└   time() - start_time = 1037.4639999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 718
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255835
┌ Info: Price and cut time (b-and-b)
└   t = 0.7110288
┌ Info: current bounds
│   node_ix = 718
│   lb = 2.7115342215202185
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 472
└   length(nodes) = 851
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101619
└   sum(fire_plans.plans_per_fire) = 37872
┌ Info: Time check
└   time() - start_time = 1038.204999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 719
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302228
┌ Info: Price and cut time (b-and-b)
└   t = 0.8117715
┌ Info: current bounds
│   node_ix = 719
│   lb = 2.711542964538602
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 473
└   length(nodes) = 851
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101822
└   sum(fire_plans.plans_per_fire) = 37918
┌ Info: Time check
└   time() - start_time = 1039.0680000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 806
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1141989
┌ Info: Price and cut time (b-and-b)
└   t = 0.3259911
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 806
│   lb = 2.711542964538602
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 474
└   length(nodes) = 853
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 101846
└   sum(fire_plans.plans_per_fire) = 37929
┌ Info: Time check
└   time() - start_time = 1039.5099999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 807
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0221692
┌ Info: Price and cut time (b-and-b)
└   t = 1.3692968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 807
│   lb = 2.7115477754121406
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 475
└   length(nodes) = 855
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102104
└   sum(fire_plans.plans_per_fire) = 38007
┌ Info: Time check
└   time() - start_time = 1040.9289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 442
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257139
┌ Info: Price and cut time (b-and-b)
└   t = 0.7983583
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 442
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  14  2  0  0
│     0   0   0  12  8  2   2   4   5  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0   3  3  9  14  12  11  8   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4848347
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.064739
│   obj = 2.7148342825001577
└   obj_bound = 2.7145889112239763
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  15  3  1  1
│      1   1   1  13  9   3   3   5   6  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1   4  4  10  15  13  12  9   2  1  1  1
└      5   2   3   1  2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8444949
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1903635
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2  14  10   4   4   6   7   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   5   5  11  16  14  13  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8160571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2295954
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 442
│   lb = 2.7115477754121406
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 476
└   length(nodes) = 857
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102509
└   sum(fire_plans.plans_per_fire) = 38195
┌ Info: Time check
└   time() - start_time = 1044.8959999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 443
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247618
┌ Info: Price and cut time (b-and-b)
└   t = 0.5095655
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 443
│   lb = 2.711559541851469
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 477
└   length(nodes) = 859
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102566
└   sum(fire_plans.plans_per_fire) = 38211
┌ Info: Time check
└   time() - start_time = 1045.4289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 566
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278703
┌ Info: Price and cut time (b-and-b)
└   t = 0.3984004
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 566
│   lb = 2.711559541851469
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 478
└   length(nodes) = 861
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102590
└   sum(fire_plans.plans_per_fire) = 38225
┌ Info: Time check
└   time() - start_time = 1045.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 567
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232322
┌ Info: Price and cut time (b-and-b)
└   t = 0.7316327
┌ Info: current bounds
│   node_ix = 567
│   lb = 2.711562732072813
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 479
└   length(nodes) = 861
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102732
└   sum(fire_plans.plans_per_fire) = 38269
┌ Info: Time check
└   time() - start_time = 1046.691999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 466
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0230905
┌ Info: Price and cut time (b-and-b)
└   t = 0.2283742
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 466
│   lb = 2.711562732072813
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 480
└   length(nodes) = 863
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 102763
└   sum(fire_plans.plans_per_fire) = 38277
┌ Info: Time check
└   time() - start_time = 1046.9679999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 467
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234864
┌ Info: Price and cut time (b-and-b)
└   t = 0.4679856
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 467
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0   0  0   0   0  0  10  14  0  0  0
│     0   0   3  9   0  2   5   5  6   0   0  0  0  0
│     9   2   0  0   0  0   0   0  0   0   0  0  0  0
│     7  18  17  0   0  0   0   0  0   0   0  0  0  0
│     0   0   0  6  12  9  10  10  9   5   1  0  0  0
└     4   1   0  0   1  1   0   0  0   0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5760517
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.066507
│   obj = 2.7148342825001577
└   obj_bound = 2.714689746998096
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  11  15  1  1  1
│      1   1   4  10   1   3   6   6   7   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      8  19  18   1   1   1   1   1   1   1   1  1  1  1
│      1   1   1   7  13  10  11  11  10   6   2  1  1  1
└      5   2   1   1   2   2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6660698
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1398325
│   obj = 2.714834282500158
└   obj_bound = 2.714732520848341
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  12  16  2  2  2
│      2   2   5  11   2   4   7   7   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  20  19   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8  14  11  12  12  11   7   3  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8108988
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1225921
│   obj = 2.714834282500158
└   obj_bound = 2.7145935716303784
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 467
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 481
└   length(nodes) = 863
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103188
└   sum(fire_plans.plans_per_fire) = 38488
┌ Info: Time check
└   time() - start_time = 1050.3810000419617
┌ Info: Exploring node
└   branch_and_bound_node.ix = 260
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316821
┌ Info: Price and cut time (b-and-b)
└   t = 0.4503537
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 260
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 482
└   length(nodes) = 865
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103214
└   sum(fire_plans.plans_per_fire) = 38502
┌ Info: Time check
└   time() - start_time = 1050.8789999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 864
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324884
┌ Info: Price and cut time (b-and-b)
└   t = 1.5890425
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 864
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 483
└   length(nodes) = 867
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103259
└   sum(fire_plans.plans_per_fire) = 38546
┌ Info: Time check
└   time() - start_time = 1052.5190000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 865
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030627
┌ Info: Price and cut time (b-and-b)
└   t = 0.8837474
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 865
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 484
└   length(nodes) = 869
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103338
└   sum(fire_plans.plans_per_fire) = 38572
┌ Info: Time check
└   time() - start_time = 1053.4519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 261
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292628
┌ Info: Price and cut time (b-and-b)
└   t = 0.3083043
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 261
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 485
└   length(nodes) = 871
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103358
└   sum(fire_plans.plans_per_fire) = 38581
┌ Info: Time check
└   time() - start_time = 1053.8020000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 870
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0225646
┌ Info: Price and cut time (b-and-b)
└   t = 0.9426858
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 870
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   0  8  9  0  0
│      0   0   0   0  6  5  12  6   1   0  0  0  0  0
│     10   0   0   0  0  0   0  0   0   0  0  0  0  0
│      3  20  20  15  0  0   0  0   0   0  2  2  0  0
│      0   0   0   0  6  6   3  9  14  14  7  1  0  0
└      7   0   0   0  0  0   0  0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7625319
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.057338
│   obj = 2.7148342825001577
└   obj_bound = 2.7147021959517588
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  9  10  1  1
│      1   1   1   1  7  6  13   7   2   1  1   1  1  1
│     11   1   1   1  1  1   1   1   1   1  1   1  1  1
│      4  21  21  16  1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  7  7   4  10  15  15  8   2  1  1
└      8   1   1   1  1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.490717
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.038723
│   obj = 2.7148342825001577
└   obj_bound = 2.7145680563856507
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  8  7  14   8   3   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  8  8   5  11  16  16   9   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1190809
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0572806
│   obj = 2.714834282500158
└   obj_bound = 2.71456710413702
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 870
│   lb = 2.711572270460431
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 486
└   length(nodes) = 873
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 103957
└   sum(fire_plans.plans_per_fire) = 38888
┌ Info: Time check
└   time() - start_time = 1058.7960000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 871
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297487
┌ Info: Price and cut time (b-and-b)
└   t = 0.684786
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 871
│   lb = 2.7115819577056195
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 487
└   length(nodes) = 875
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104043
└   sum(fire_plans.plans_per_fire) = 38908
┌ Info: Time check
└   time() - start_time = 1059.5249998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 632
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314192
┌ Info: Price and cut time (b-and-b)
└   t = 0.900219
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 632
│   lb = 2.7115819577056195
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 488
└   length(nodes) = 877
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104098
└   sum(fire_plans.plans_per_fire) = 38937
┌ Info: Time check
└   time() - start_time = 1060.4769999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 633
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0329556
┌ Info: Price and cut time (b-and-b)
└   t = 0.749819
┌ Info: current bounds
│   node_ix = 633
│   lb = 2.711594018636469
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 489
└   length(nodes) = 877
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104266
└   sum(fire_plans.plans_per_fire) = 38985
┌ Info: Time check
└   time() - start_time = 1061.2590000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 532
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246505
┌ Info: Price and cut time (b-and-b)
└   t = 0.7971342
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 532
│   lb = 2.711594018636469
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 490
└   length(nodes) = 879
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104323
└   sum(fire_plans.plans_per_fire) = 39013
┌ Info: Time check
└   time() - start_time = 1062.098000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 533
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309433
┌ Info: Price and cut time (b-and-b)
└   t = 0.6462289
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 533
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0  7  15  1  0  0
│      0   0   0   0  6  6  9  8   3  0   0  0  0  0
│     10   0   0   0  0  0  0  0   0  0   0  0  0  0
│      6  21  21   0  0  0  0  0   0  0   1  2  0  0
│      0   0   0  15  5  6  6  8  13  8   1  0  0  0
└      5   0   0   0  1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3676001
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1750699
│   obj = 2.714834282500158
└   obj_bound = 2.714617611878662
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1  1   1  8  16  2  1  1
│      1   1   1   1  7  7  10  9   4  1   1  1  1  1
│     11   1   1   1  1  1   1  1   1  1   1  1  1  1
│      7  22  22   1  1  1   1  1   1  1   2  3  1  1
│      1   1   1  16  6  7   7  9  14  9   2  1  1  1
└      6   1   1   1  2  1   1  1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0100571
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1610236
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   9  17  3  2  2
│      2   2   2   2  8  8  11  10   5   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      8  23  23   2  2  2   2   2   2   2   3  4  2  2
│      2   2   2  17  7  8   8  10  15  10   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.979121
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2560204
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 533
│   lb = 2.711596230441974
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 491
└   length(nodes) = 879
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 104933
└   sum(fire_plans.plans_per_fire) = 39242
┌ Info: Time check
└   time() - start_time = 1066.2909998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 636
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275074
┌ Info: Price and cut time (b-and-b)
└   t = 1.2112687
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 636
│   lb = 2.711596230441974
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 492
└   length(nodes) = 881
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105099
└   sum(fire_plans.plans_per_fire) = 39288
┌ Info: Time check
└   time() - start_time = 1067.5460000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 637
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262618
┌ Info: Price and cut time (b-and-b)
└   t = 1.2173582
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 637
│   lb = 2.711602869943598
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 493
└   length(nodes) = 883
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105224
└   sum(fire_plans.plans_per_fire) = 39336
┌ Info: Time check
└   time() - start_time = 1068.800999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 814
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276832
┌ Info: Price and cut time (b-and-b)
└   t = 1.1470232
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 814
│   lb = 2.711602869943598
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 494
└   length(nodes) = 885
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105296
└   sum(fire_plans.plans_per_fire) = 39386
┌ Info: Time check
└   time() - start_time = 1069.9879999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 815
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0331956
┌ Info: Price and cut time (b-and-b)
└   t = 0.8598536
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 815
│   lb = 2.7116041677014353
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 495
└   length(nodes) = 887
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105434
└   sum(fire_plans.plans_per_fire) = 39422
┌ Info: Time check
└   time() - start_time = 1070.891000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 504
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291462
┌ Info: Price and cut time (b-and-b)
└   t = 0.3983216
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 504
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  15  2  0  0
│     0   0   0   0  6  8   6   6   5  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  16  5  4  10  10  11  8   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6451042
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0787766
│   obj = 2.714834282500158
└   obj_bound = 2.714572383628155
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  3  1  1
│      1   1   1   1  7  9   7   7   6  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  17  6  5  11  11  12  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2047158
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1858842
│   obj = 2.714834282500158
└   obj_bound = 2.7146716224809087
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  4  2  2
│      2   2   2   2  8  10   8   8   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  18  7   6  12  12  13  10   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6296743
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1698556
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 504
│   lb = 2.7116041677014353
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 496
└   length(nodes) = 889
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105735
└   sum(fire_plans.plans_per_fire) = 39588
┌ Info: Time check
└   time() - start_time = 1074.779000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 505
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257869
┌ Info: Price and cut time (b-and-b)
└   t = 0.331064
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 505
│   lb = 2.7116041677014358
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 497
└   length(nodes) = 891
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105795
└   sum(fire_plans.plans_per_fire) = 39600
┌ Info: Time check
└   time() - start_time = 1075.1429998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 890
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314223
┌ Info: Price and cut time (b-and-b)
└   t = 1.0560932
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 890
│   lb = 2.7116041677014358
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 498
└   length(nodes) = 893
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105821
└   sum(fire_plans.plans_per_fire) = 39631
┌ Info: Time check
└   time() - start_time = 1076.2519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 891
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320989
┌ Info: Price and cut time (b-and-b)
└   t = 0.9678765
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 891
│   lb = 2.7116045724379134
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 499
└   length(nodes) = 895
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105930
└   sum(fire_plans.plans_per_fire) = 39671
┌ Info: Time check
└   time() - start_time = 1077.2669999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 888
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278419
┌ Info: Price and cut time (b-and-b)
└   t = 0.7964156
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 888
│   lb = 2.7116045724379134
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 500
└   length(nodes) = 897
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 105980
└   sum(fire_plans.plans_per_fire) = 39701
┌ Info: Time check
└   time() - start_time = 1078.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 889
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255174
┌ Info: Price and cut time (b-and-b)
└   t = 1.2351737
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 889
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  7  15  1  0  0
│     0   0   0   0  6  9  6  7   3  0   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   0  15  5  2  9  9  13  8   1  0  0  0
└     4   1   2   0  1  1  0  0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4183385
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1225512
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  16  2  1  1
│      1   1   1   1  7  10   7   8   4  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  6   3  10  10  14  9   2  1  1  1
└      5   2   3   1  2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0721496
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1987679
│   obj = 2.7148342825001577
└   obj_bound = 2.714616382779511
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  3  2  2
│      2   2   2   2  8  11   8   9   5   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  7   4  11  11  15  10   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9976675
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1862197
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 889
│   lb = 2.7116059629160203
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 501
└   length(nodes) = 899
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106424
└   sum(fire_plans.plans_per_fire) = 39909
┌ Info: Time check
└   time() - start_time = 1082.941999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 660
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260134
┌ Info: Price and cut time (b-and-b)
└   t = 0.6614653
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 660
│   lb = 2.7116059629160203
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 502
└   length(nodes) = 901
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106481
└   sum(fire_plans.plans_per_fire) = 39929
┌ Info: Time check
└   time() - start_time = 1083.6299998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 661
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260177
┌ Info: Price and cut time (b-and-b)
└   t = 0.8975872
┌ Info: current bounds
│   node_ix = 661
│   lb = 2.711607655306698
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 503
└   length(nodes) = 901
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106595
└   sum(fire_plans.plans_per_fire) = 39969
┌ Info: Time check
└   time() - start_time = 1084.566999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 364
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275397
┌ Info: Price and cut time (b-and-b)
└   t = 1.1433586
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 364
│   lb = 2.711607655306698
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 504
└   length(nodes) = 903
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106724
└   sum(fire_plans.plans_per_fire) = 40017
┌ Info: Time check
└   time() - start_time = 1085.760999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 365
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244796
┌ Info: Price and cut time (b-and-b)
└   t = 0.7528327
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 365
│   lb = 2.7116097175548357
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 505
└   length(nodes) = 905
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 106891
└   sum(fire_plans.plans_per_fire) = 40060
┌ Info: Time check
└   time() - start_time = 1086.5550000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 804
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250931
┌ Info: Price and cut time (b-and-b)
└   t = 0.5458705
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 804
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0  6  14  2  0  0
│      0   0   0   0  9  9   4   5   5  0   0  0  0  0
│     10   0   0   0  0  0   0   0   0  0   0  0  0  0
│      5  20  20   1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  14  2  2  13  11  10  8   1  0  0  0
└      5   0   0   0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6465019
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0708882
│   obj = 2.714834282500158
└   obj_bound = 2.7145972697053367
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  7  15  3  1  1
│      1   1   1   1  10  10   5   6   6  1   1  1  1  1
│     11   1   1   1   1   1   1   1   1  1   1  1  1  1
│      6  21  21   2   1   1   1   1   1  1   1  1  1  1
│      1   1   1  15   3   3  14  12  11  9   2  1  1  1
└      6   1   1   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9343692
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1504869
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  16  4  2  2
│      2   2   2   2  11  11   6   7   7   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16   4   4  15  13  12  10   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4196193
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2303761
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 804
│   lb = 2.7116097175548357
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 506
└   length(nodes) = 907
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107470
└   sum(fire_plans.plans_per_fire) = 40308
┌ Info: Time check
└   time() - start_time = 1091.0889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 805
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023859
┌ Info: Price and cut time (b-and-b)
└   t = 0.9735053
┌ Info: current bounds
│   node_ix = 805
│   lb = 2.711609717554836
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 507
└   length(nodes) = 907
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107683
└   sum(fire_plans.plans_per_fire) = 40359
┌ Info: Time check
└   time() - start_time = 1092.0839998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 906
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256736
┌ Info: Price and cut time (b-and-b)
└   t = 0.3742238
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 906
│   lb = 2.711609717554836
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 508
└   length(nodes) = 909
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107740
└   sum(fire_plans.plans_per_fire) = 40378
┌ Info: Time check
└   time() - start_time = 1092.5060000419617
┌ Info: Exploring node
└   branch_and_bound_node.ix = 907
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279973
┌ Info: Price and cut time (b-and-b)
└   t = 1.474434
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 907
│   lb = 2.71161696702075
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 509
└   length(nodes) = 911
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 107983
└   sum(fire_plans.plans_per_fire) = 40460
┌ Info: Time check
└   time() - start_time = 1094.0230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 654
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306864
┌ Info: Price and cut time (b-and-b)
└   t = 0.7107582
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 654
│   lb = 2.71161696702075
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 510
└   length(nodes) = 913
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108015
└   sum(fire_plans.plans_per_fire) = 40483
┌ Info: Time check
└   time() - start_time = 1094.7820000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 655
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292594
┌ Info: Price and cut time (b-and-b)
└   t = 0.8636748
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 655
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0   0   0  9  14  0  0  0
│     0   0   0   0   0   1   6  13  12  0   0  0  0  0
│     9   2   0   0   0   0   0   0   0  0   0  0  0  0
│     7  17  18   0   0   0   0   0   0  0   0  0  0  0
│     0   0   2  15  12  11  10   3   4  6   1  0  0  0
└     4   1   1   0   0   1   0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6679264
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1094368
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  10  15  1  1  1
│      1   1   1   1   1   2   7  14  13   1   1  1  1  1
│     10   3   1   1   1   1   1   1   1   1   1  1  1  1
│      8  18  19   1   1   1   1   1   1   1   1  1  1  1
│      1   1   3  16  13  12  11   4   5   7   2  1  1  1
└      5   2   2   1   1   2   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2417583
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1005804
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  11  16  2  2  2
│      2   2   2   2   2   3   8  15  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   4  17  14  13  12   5   6   8   3  2  2  2
└      6   3   3   2   2   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9589273
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2899912
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 655
│   lb = 2.7116169670207504
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 511
└   length(nodes) = 913
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108534
└   sum(fire_plans.plans_per_fire) = 40740
┌ Info: Time check
└   time() - start_time = 1099.5789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 658
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236091
┌ Info: Price and cut time (b-and-b)
└   t = 0.5927504
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 658
│   lb = 2.7116169670207504
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 512
└   length(nodes) = 915
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108558
└   sum(fire_plans.plans_per_fire) = 40761
┌ Info: Time check
└   time() - start_time = 1100.2119998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 659
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028377
┌ Info: Price and cut time (b-and-b)
└   t = 0.8847082
┌ Info: current bounds
│   node_ix = 659
│   lb = 2.711618659384445
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 513
└   length(nodes) = 915
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108695
└   sum(fire_plans.plans_per_fire) = 40812
┌ Info: Time check
└   time() - start_time = 1101.135999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 480
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252949
┌ Info: Price and cut time (b-and-b)
└   t = 0.9802288
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 480
│   lb = 2.711618659384445
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 514
└   length(nodes) = 917
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108817
└   sum(fire_plans.plans_per_fire) = 40843
┌ Info: Time check
└   time() - start_time = 1102.1570000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 916
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0344005
┌ Info: Price and cut time (b-and-b)
└   t = 0.5589429
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 916
│   lb = 2.711618659384445
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 515
└   length(nodes) = 919
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 108850
└   sum(fire_plans.plans_per_fire) = 40860
┌ Info: Time check
└   time() - start_time = 1102.766000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 917
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266504
┌ Info: Price and cut time (b-and-b)
└   t = 0.7022261
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 917
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0  7  15  2  0  0
│     0   0   0  9  9  6  6   0   0  0   0  0  0  0
│     9   2   0  0  0  0  0   0   0  0   0  0  0  0
│     7  17  18  0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  6  2  5  9  15  15  8   1  0  0  0
└     4   1   2  0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5109295
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0851269
│   obj = 2.7148342825001577
└   obj_bound = 2.714686076175055
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  16  3  1  1
│      1   1   1  10  10  7   7   1   1  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1   7   3  6  10  16  16  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9292683
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3297732
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  4  2  2
│      2   2   2  11  11  8   8   2   2   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2   8   4  7  11  17  17  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9053418
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2644145
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 917
│   lb = 2.711618659384445
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 516
└   length(nodes) = 921
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109274
└   sum(fire_plans.plans_per_fire) = 41034
┌ Info: Time check
└   time() - start_time = 1107.1419999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 481
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254197
┌ Info: Price and cut time (b-and-b)
└   t = 0.6381786
┌ Info: current bounds
│   node_ix = 481
│   lb = 2.711621919055112
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 517
└   length(nodes) = 921
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109416
└   sum(fire_plans.plans_per_fire) = 41068
┌ Info: Time check
└   time() - start_time = 1107.8139998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 886
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0336912
┌ Info: Price and cut time (b-and-b)
└   t = 1.2640804
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 886
│   lb = 2.711621919055112
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 518
└   length(nodes) = 923
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109525
└   sum(fire_plans.plans_per_fire) = 41106
┌ Info: Time check
└   time() - start_time = 1109.1280000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 887
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319323
┌ Info: Price and cut time (b-and-b)
└   t = 0.8410405
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 887
│   lb = 2.711626507993737
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 519
└   length(nodes) = 925
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109609
└   sum(fire_plans.plans_per_fire) = 41132
┌ Info: Time check
└   time() - start_time = 1110.016000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 464
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274925
┌ Info: Price and cut time (b-and-b)
└   t = 0.5338509
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 464
│   lb = 2.711626507993737
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 520
└   length(nodes) = 927
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 109670
└   sum(fire_plans.plans_per_fire) = 41154
┌ Info: Time check
└   time() - start_time = 1110.5880000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 465
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251562
┌ Info: Price and cut time (b-and-b)
└   t = 1.2209562
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 465
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   0  8  9  0  0
│      0   0   0   0  3  7  10  6   5   0  0  0  0  0
│     10   0   0   0  0  0   0  0   0   0  0  0  0  0
│      3  20  20  15  0  0   0  0   0   0  2  2  0  0
│      0   0   0   0  9  5   6  9  10  15  8  1  0  0
└      7   0   0   0  0  0   0  0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.459991
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0665038
│   obj = 2.714834282500158
└   obj_bound = 2.714593656859506
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  8  11   7   6   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6   7  10  11  16  9   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4004546
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.054697
│   obj = 2.714834282500158
└   obj_bound = 2.714569618339045
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  9  12   8   7   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7   8  11  12  17  10   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3502544
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0624256
│   obj = 2.714834282500158
└   obj_bound = 2.714572236617635
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 465
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 521
└   length(nodes) = 929
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110348
└   sum(fire_plans.plans_per_fire) = 41442
┌ Info: Time check
└   time() - start_time = 1115.7409999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 460
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326662
┌ Info: Price and cut time (b-and-b)
└   t = 0.3787794
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 460
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 522
└   length(nodes) = 931
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110381
└   sum(fire_plans.plans_per_fire) = 41455
┌ Info: Time check
└   time() - start_time = 1116.2279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 930
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0244834
┌ Info: Price and cut time (b-and-b)
└   t = 0.4952422
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 930
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 523
└   length(nodes) = 933
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110422
└   sum(fire_plans.plans_per_fire) = 41472
┌ Info: Time check
└   time() - start_time = 1116.7599999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 931
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295864
┌ Info: Price and cut time (b-and-b)
└   t = 0.9566782
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 931
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 524
└   length(nodes) = 935
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110596
└   sum(fire_plans.plans_per_fire) = 41520
┌ Info: Time check
└   time() - start_time = 1117.7709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 461
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254018
┌ Info: Price and cut time (b-and-b)
└   t = 0.3659517
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 461
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 525
└   length(nodes) = 937
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110602
└   sum(fire_plans.plans_per_fire) = 41533
┌ Info: Time check
└   time() - start_time = 1118.1740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 936
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268325
┌ Info: Price and cut time (b-and-b)
└   t = 0.4838966
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 936
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0   0   0   0   0   0  8  9  0  0
│      0   0   0   0  4  10  13   4   2   0  0  0  0  0
│     10   0   0   0  0   0   0   0   0   0  0  0  0  0
│      3  20  20  15  0   0   0   0   0   0  2  2  0  0
│      0   0   0   0  9   2   3  12  13  14  8  1  0  0
└      7   0   0   0  0   0   0   0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8076942
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0600482
│   obj = 2.7148342825001577
└   obj_bound = 2.7147510401900945
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   1  9  10  1  1
│      1   1   1   1   5  11  14   5   3   1  1   1  1  1
│     11   1   1   1   1   1   1   1   1   1  1   1  1  1
│      4  21  21  16   1   1   1   1   1   1  3   3  1  1
│      1   1   1   1  10   3   4  13  14  15  9   2  1  1
└      8   1   1   1   1   1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8887153
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.042901
│   obj = 2.714834282500158
└   obj_bound = 2.714715378836918
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  11  2  2
│      2   2   2   2   6  12  15   6   4   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2  11   4   5  14  15  16  10   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1955308
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0499368
│   obj = 2.714834282500158
└   obj_bound = 2.714637638313017
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 936
│   lb = 2.7116265079937376
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 526
└   length(nodes) = 939
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110644
└   sum(fire_plans.plans_per_fire) = 41852
┌ Info: Time check
└   time() - start_time = 1123.2539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 937
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265118
┌ Info: Price and cut time (b-and-b)
└   t = 1.1870931
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 937
│   lb = 2.7116358117167367
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 527
└   length(nodes) = 941
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110650
└   sum(fire_plans.plans_per_fire) = 41913
┌ Info: Time check
└   time() - start_time = 1124.470999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 790
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245803
┌ Info: Price and cut time (b-and-b)
└   t = 0.6825828
┌ Info: current bounds
│   node_ix = 790
│   lb = 2.7116358117167367
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 528
└   length(nodes) = 941
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110728
└   sum(fire_plans.plans_per_fire) = 41936
┌ Info: Time check
└   time() - start_time = 1125.1970000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 791
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0268665
┌ Info: Price and cut time (b-and-b)
└   t = 0.8857341
┌ Info: current bounds
│   node_ix = 791
│   lb = 2.711641226698106
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 529
└   length(nodes) = 941
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110923
└   sum(fire_plans.plans_per_fire) = 41979
┌ Info: Time check
└   time() - start_time = 1126.1299998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 792
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233538
┌ Info: Price and cut time (b-and-b)
└   t = 0.2991225
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 792
│   lb = 2.711641226698106
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 530
└   length(nodes) = 943
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 110948
└   sum(fire_plans.plans_per_fire) = 41990
┌ Info: Time check
└   time() - start_time = 1126.4719998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 793
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297312
┌ Info: Price and cut time (b-and-b)
└   t = 1.1505136
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 793
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0   0  7  15  1  0  0
│     0   0   0   0   0   0  9  9  12  0   0  0  0  0
│     9   2   0   0   0   0  0  0   0  0   0  0  0  0
│     7  17  18   0   0   0  0  0   0  0   0  0  0  0
│     0   0   0  15  12  11  6  6   3  8   1  0  0  0
└     4   1   2   0   1   1  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5123566
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0894174
│   obj = 2.714834282500158
└   obj_bound = 2.7145704102643538
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  2  1  1
│      1   1   1   1   1   1  10  10  13  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  13  12   7   7   4  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.901191
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2005597
│   obj = 2.714834282500158
└   obj_bound = 2.714716378524304
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  3  2  2
│      2   2   2   2   2   2  11  11  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  14  13   8   8   5  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9674716
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2683498
│   obj = 2.714834282500158
└   obj_bound = 2.7145715217257953
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 793
│   lb = 2.71164471710439
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 531
└   length(nodes) = 945
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111406
└   sum(fire_plans.plans_per_fire) = 42209
┌ Info: Time check
└   time() - start_time = 1131.1579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 672
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257981
┌ Info: Price and cut time (b-and-b)
└   t = 1.0767298
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: current bounds
│   node_ix = 672
│   lb = 2.71164471710439
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 532
└   length(nodes) = 947
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111536
└   sum(fire_plans.plans_per_fire) = 42241
┌ Info: Time check
└   time() - start_time = 1132.2699999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 673
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294813
┌ Info: Price and cut time (b-and-b)
└   t = 0.8116712
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 673
│   lb = 2.7116447171043903
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 533
└   length(nodes) = 949
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111736
└   sum(fire_plans.plans_per_fire) = 42277
┌ Info: Time check
└   time() - start_time = 1133.1370000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 948
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274205
┌ Info: Price and cut time (b-and-b)
└   t = 1.1534163
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 948
│   lb = 2.7116447171043903
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 534
└   length(nodes) = 951
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111810
└   sum(fire_plans.plans_per_fire) = 42308
┌ Info: Time check
└   time() - start_time = 1134.3339998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 949
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0966522
┌ Info: Price and cut time (b-and-b)
└   t = 1.0475859
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 949
│   lb = 2.711645519716203
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 535
└   length(nodes) = 953
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 111910
└   sum(fire_plans.plans_per_fire) = 42356
┌ Info: Time check
└   time() - start_time = 1135.4879999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 436
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0213094
┌ Info: Price and cut time (b-and-b)
└   t = 0.7861195
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 436
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0  0  7  14  1  0  0
│     0   0   0   0  4  6  7  7  9  0   0  0  0  0
│     9   2   0   0  0  0  0  0  0  0   0  0  0  0
│     7  17  18   0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  8  6  9  8  7  7   1  0  0  0
└     4   1   2   0  1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4053725
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0543715
│   obj = 2.714834282500158
└   obj_bound = 2.714602778958006
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1  1   1  8  15  2  1  1
│      1   1   1   1  5  7   8  8  10  1   1  1  1  1
│     10   3   1   1  1  1   1  1   1  1   1  1  1  1
│      8  18  19   1  1  1   1  1   1  1   1  1  1  1
│      1   1   1  16  9  7  10  9   8  8   2  1  1  1
└      5   2   3   1  2  1   1  1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2287364
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3327241
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  9  16  3  2  2
│      2   2   2   2   6  8   9   9  11  2   2  2  2  2
│     11   4   2   2   2  2   2   2   2  2   2  2  2  2
│      9  19  20   2   2  2   2   2   2  2   2  2  2  2
│      2   2   2  17  10  8  11  10   9  9   3  2  2  2
└      6   3   4   2   3  2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9193611
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1539517
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 436
│   lb = 2.711645519716203
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 536
└   length(nodes) = 955
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112407
└   sum(fire_plans.plans_per_fire) = 42602
┌ Info: Time check
└   time() - start_time = 1139.885999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 437
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0224756
┌ Info: Price and cut time (b-and-b)
└   t = 0.5342668
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 437
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 537
└   length(nodes) = 957
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112510
└   sum(fire_plans.plans_per_fire) = 42630
┌ Info: Time check
└   time() - start_time = 1140.4619998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 334
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302571
┌ Info: Price and cut time (b-and-b)
└   t = 0.2987179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 334
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 538
└   length(nodes) = 959
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112530
└   sum(fire_plans.plans_per_fire) = 42640
┌ Info: Time check
└   time() - start_time = 1140.8020000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 335
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281339
┌ Info: Price and cut time (b-and-b)
└   t = 0.2751355
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 335
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 539
└   length(nodes) = 961
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112551
└   sum(fire_plans.plans_per_fire) = 42650
┌ Info: Time check
└   time() - start_time = 1141.1349999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 958
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289911
┌ Info: Price and cut time (b-and-b)
└   t = 0.9650743
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 958
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 540
└   length(nodes) = 963
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 112669
└   sum(fire_plans.plans_per_fire) = 42696
┌ Info: Time check
└   time() - start_time = 1142.1459999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 959
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272522
┌ Info: Price and cut time (b-and-b)
└   t = 0.7228789
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 959
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0   0   0   0  8  9  0  0
│      0   0   0   0  6  5  6  12   1   0  0  0  0  0
│     10   0   0   0  0  0  0   0   0   0  0  0  0  0
│      3  20  20  15  0  0  0   0   0   0  2  2  0  0
│      0   0   0   0  6  6  9   3  14  14  7  1  0  0
└      7   0   0   0  0  0  0   0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5525991
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0570082
│   obj = 2.714834282500158
└   obj_bound = 2.714666721636604
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  9  10  1  1
│      1   1   1   1  7  6   7  13   2   1  1   1  1  1
│     11   1   1   1  1  1   1   1   1   1  1   1  1  1
│      4  21  21  16  1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  7  7  10   4  15  15  8   2  1  1
└      8   1   1   1  1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3685048
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0339032
│   obj = 2.714834282500158
└   obj_bound = 2.714821192006596
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  8  7   8  14   3   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  8  8  11   5  16  16   9   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0073937
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0707866
│   obj = 2.714834282500158
└   obj_bound = 2.714586098640855
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 959
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 541
└   length(nodes) = 965
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113353
└   sum(fire_plans.plans_per_fire) = 42948
┌ Info: Time check
└   time() - start_time = 1146.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 960
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025964
┌ Info: Price and cut time (b-and-b)
└   t = 0.7035975
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 960
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 542
└   length(nodes) = 967
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113507
└   sum(fire_plans.plans_per_fire) = 42988
┌ Info: Time check
└   time() - start_time = 1147.2419998645782
┌ Info: Exploring node
└   branch_and_bound_node.ix = 961
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296948
┌ Info: Price and cut time (b-and-b)
└   t = 0.9563493
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 961
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 543
└   length(nodes) = 969
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113564
└   sum(fire_plans.plans_per_fire) = 43016
┌ Info: Time check
└   time() - start_time = 1148.2400000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 962
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0350776
┌ Info: Price and cut time (b-and-b)
└   t = 1.2666408
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 962
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 544
└   length(nodes) = 971
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113641
└   sum(fire_plans.plans_per_fire) = 43051
┌ Info: Time check
└   time() - start_time = 1149.5699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 963
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301632
┌ Info: Price and cut time (b-and-b)
└   t = 1.1644447
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 963
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 545
└   length(nodes) = 973
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 113711
└   sum(fire_plans.plans_per_fire) = 43084
┌ Info: Time check
└   time() - start_time = 1150.7820000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 966
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285836
┌ Info: Price and cut time (b-and-b)
└   t = 1.1236566
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 966
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  7  10  0  0
│      0   0   0   0  6  4  6  8  6   0  0   0  0  0
│     10   0   0   0  0  0  0  0  0   0  0   0  0  0
│      3  20  20  15  0  0  0  0  0   0  2   2  0  0
│      0   0   0   0  6  7  9  7  9  14  8   0  0  0
└      7   0   0   0  0  0  0  0  0   0  0   2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8938657
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0626551
│   obj = 2.714834282500158
└   obj_bound = 2.7145668997454777
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1  1   1   1  8  11  1  1
│      1   1   1   1  7  5   7  9   7   1  1   1  1  1
│     11   1   1   1  1  1   1  1   1   1  1   1  1  1
│      4  21  21  16  1  1   1  1   1   1  3   3  1  1
│      1   1   1   1  7  8  10  8  10  15  9   1  1  1
└      8   1   1   1  1  1   1  1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0660875
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0371622
│   obj = 2.714834282500158
└   obj_bound = 2.7145869636486912
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2   9  12  2  2
│      2   2   2   2  8  6   8  10   8   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  8  9  11   9  11  16  10   2  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4439516
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0618206
│   obj = 2.714834282500158
└   obj_bound = 2.714568377541968
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 966
│   lb = 2.711646989249298
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 546
└   length(nodes) = 975
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114487
└   sum(fire_plans.plans_per_fire) = 43418
┌ Info: Time check
└   time() - start_time = 1157.029000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 967
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0803654
┌ Info: Price and cut time (b-and-b)
└   t = 1.2079241
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 967
│   lb = 2.711660827965093
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 547
└   length(nodes) = 977
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114608
└   sum(fire_plans.plans_per_fire) = 43461
┌ Info: Time check
└   time() - start_time = 1158.3269999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 832
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240118
┌ Info: Price and cut time (b-and-b)
└   t = 1.0065689
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 832
│   lb = 2.711660827965093
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 548
└   length(nodes) = 979
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114738
└   sum(fire_plans.plans_per_fire) = 43498
┌ Info: Time check
└   time() - start_time = 1159.3719999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 833
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292492
┌ Info: Price and cut time (b-and-b)
└   t = 1.0346668
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 833
│   lb = 2.711666838094686
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 549
└   length(nodes) = 981
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114822
└   sum(fire_plans.plans_per_fire) = 43525
┌ Info: Time check
└   time() - start_time = 1160.4700000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 500
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276929
┌ Info: Price and cut time (b-and-b)
└   t = 0.5897541
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 500
│   lb = 2.711666838094686
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 550
└   length(nodes) = 983
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 114918
└   sum(fire_plans.plans_per_fire) = 43556
┌ Info: Time check
└   time() - start_time = 1161.0869998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 501
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025993
┌ Info: Price and cut time (b-and-b)
└   t = 0.8649696
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 501
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0  6  14  2  0  0
│      0   0   0   0  6  9  12   2   1  0   0  0  0  0
│     10   0   0   0  0  0   0   0   0  0   0  0  0  0
│      5  20  20   1  0  0   0   0   0  0   0  0  0  0
│      0   0   0  14  5  2   3  13  14  8   1  0  0  0
└      5   0   0   0  1  0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3306099
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.070137
│   obj = 2.714834282500158
└   obj_bound = 2.7146499031423446
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  7  15  3  1  1
│      1   1   1   1  7  10  13   3   2  1   1  1  1  1
│     11   1   1   1  1   1   1   1   1  1   1  1  1  1
│      6  21  21   2  1   1   1   1   1  1   1  1  1  1
│      1   1   1  15  6   3   4  14  15  9   2  1  1  1
└      6   1   1   1  2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2065844
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1222709
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  16  4  2  2
│      2   2   2   2  8  11  14   4   3   2   2  2  2  2
│     12   2   2   2  2   2   2   2   2   2   2  2  2  2
│      7  22  22   3  2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  7   4   5  15  16  10   3  2  2  2
└      7   2   2   2  3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6730217
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2003176
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 501
│   lb = 2.7116668380946867
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 551
└   length(nodes) = 985
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115563
└   sum(fire_plans.plans_per_fire) = 43866
┌ Info: Time check
└   time() - start_time = 1166.0789999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 982
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255509
┌ Info: Price and cut time (b-and-b)
└   t = 0.2757179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 982
│   lb = 2.7116668380946867
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 552
└   length(nodes) = 987
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115603
└   sum(fire_plans.plans_per_fire) = 43878
┌ Info: Time check
└   time() - start_time = 1166.388000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 983
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307563
┌ Info: Price and cut time (b-and-b)
└   t = 1.2916008
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 983
│   lb = 2.711682036166456
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 553
└   length(nodes) = 989
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115738
└   sum(fire_plans.plans_per_fire) = 43927
┌ Info: Time check
└   time() - start_time = 1167.7279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 940
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272287
┌ Info: Price and cut time (b-and-b)
└   t = 1.4454289
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 940
│   lb = 2.711682036166456
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 554
└   length(nodes) = 991
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115744
└   sum(fire_plans.plans_per_fire) = 43975
┌ Info: Time check
└   time() - start_time = 1169.207999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 941
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301947
┌ Info: Price and cut time (b-and-b)
└   t = 0.8967871
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 941
│   lb = 2.7116820361664566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 555
└   length(nodes) = 993
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 115750
└   sum(fire_plans.plans_per_fire) = 44005
┌ Info: Time check
└   time() - start_time = 1170.1510000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 928
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030278
┌ Info: Price and cut time (b-and-b)
└   t = 1.3994994
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 928
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  8  10  0  0
│      0   0   0   0  3  6  9  6  6   0  0   0  0  0
│     10   0   0   0  0  0  0  0  0   0  0   0  0  0
│      3  20  20  15  0  0  0  0  0   0  2   2  0  0
│      0   0   0   0  9  5  6  9  9  15  8   0  0  0
└      7   0   0   0  0  0  0  0  0   0  0   2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4207458
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0760579
│   obj = 2.714834282500158
└   obj_bound = 2.7146545489376877
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  11  1  1
│      1   1   1   1   4  7  10   7   7   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6   7  10  10  16  9   1  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0600408
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0538172
│   obj = 2.714834282500158
└   obj_bound = 2.71476492230438
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  12  2  2
│      2   2   2   2   5  8  11   8   8   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7   8  11  11  17  10   2  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 2.0858892
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0739089
│   obj = 2.7148342825001577
└   obj_bound = 2.714620655834317
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 928
│   lb = 2.7116820361664566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 556
└   length(nodes) = 995
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116269
└   sum(fire_plans.plans_per_fire) = 44314
┌ Info: Time check
└   time() - start_time = 1176.9459998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 929
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0394341
┌ Info: Price and cut time (b-and-b)
└   t = 0.6203793
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 929
│   lb = 2.7116820361664566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 557
└   length(nodes) = 997
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116310
└   sum(fire_plans.plans_per_fire) = 44333
┌ Info: Time check
└   time() - start_time = 1177.6129999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 934
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0332761
┌ Info: Price and cut time (b-and-b)
└   t = 1.0078597
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 934
│   lb = 2.7116820361664566
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 558
└   length(nodes) = 999
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116404
└   sum(fire_plans.plans_per_fire) = 44370
┌ Info: Time check
└   time() - start_time = 1178.667000055313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 935
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298698
┌ Info: Price and cut time (b-and-b)
└   t = 0.936712
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 935
│   lb = 2.7116826852542246
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 559
└   length(nodes) = 1001
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116428
└   sum(fire_plans.plans_per_fire) = 44402
┌ Info: Time check
└   time() - start_time = 1179.654000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 552
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0350112
┌ Info: Price and cut time (b-and-b)
└   t = 0.4851829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 552
│   lb = 2.7116826852542246
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 560
└   length(nodes) = 1003
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116449
└   sum(fire_plans.plans_per_fire) = 44416
┌ Info: Time check
└   time() - start_time = 1180.1900000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 553
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300188
┌ Info: Price and cut time (b-and-b)
└   t = 0.8304417
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 553
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0  0  8  15  0  0  0
│     0   0   0   0  4  7  10  7  7  0   0  0  0  0
│     9   2   0   0  0  0   0  0  0  0   0  0  0  0
│     7  17  18   0  0  0   0  0  0  0   0  0  0  0
│     0   0   1  15  9  5   6  9  9  7   0  0  0  0
└     4   1   2   0  0  1   0  0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4379924
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0849555
│   obj = 2.714834282500158
└   obj_bound = 2.7145778506820206
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  9  16  1  1  1
│      1   1   1   1   5  8  11   8   8  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   2  16  10  6   7  10  10  8   1  1  1  1
└      5   2   3   1   1  2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9125716
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.212778
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  10  17  2  2  2
│      2   2   2   2   6  9  12   9   9   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   3  17  11  7   8  11  11   9   2  2  2  2
└      6   3   4   2   2  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4399349
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3841769
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 553
│   lb = 2.7116826852542246
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 561
└   length(nodes) = 1003
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116900
└   sum(fire_plans.plans_per_fire) = 44595
┌ Info: Time check
└   time() - start_time = 1184.1329998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 556
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264753
┌ Info: Price and cut time (b-and-b)
└   t = 0.3902186
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 556
│   lb = 2.7116826852542246
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 562
└   length(nodes) = 1005
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 116940
└   sum(fire_plans.plans_per_fire) = 44609
┌ Info: Time check
└   time() - start_time = 1184.5680000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 557
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028188
┌ Info: Price and cut time (b-and-b)
└   t = 0.8107877
┌ Info: current bounds
│   node_ix = 557
│   lb = 2.7116851591397544
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 563
└   length(nodes) = 1005
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117049
└   sum(fire_plans.plans_per_fire) = 44647
┌ Info: Time check
└   time() - start_time = 1185.414999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 828
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292199
┌ Info: Price and cut time (b-and-b)
└   t = 0.6759805
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 828
│   lb = 2.7116851591397544
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 564
└   length(nodes) = 1007
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117071
└   sum(fire_plans.plans_per_fire) = 44666
┌ Info: Time check
└   time() - start_time = 1186.1429998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 829
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282762
┌ Info: Price and cut time (b-and-b)
└   t = 0.7643278
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 829
│   lb = 2.711702399277603
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 565
└   length(nodes) = 1009
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117155
└   sum(fire_plans.plans_per_fire) = 44705
┌ Info: Time check
└   time() - start_time = 1186.9459998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 776
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0390186
┌ Info: Price and cut time (b-and-b)
└   t = 0.9725664
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 776
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0   0   0  5  16  2  0  0
│      0   0   0   3  6  5  6   5   6  0   0  0  0  0
│     10   0   0   0  0  0  0   0   0  0   0  0  0  0
│      5  20  20   1  0  0  0   0   0  0   0  0  0  0
│      0   0   0  11  5  6  9  10  10  9   0  0  0  0
└      5   0   0   0  1  0  0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4780122
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1758765
│   obj = 2.714834282500158
└   obj_bound = 2.714567916975951
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   6  17  3  1  1
│      1   1   1   4  7  6   7   6   7   1   1  1  1  1
│     11   1   1   1  1  1   1   1   1   1   1  1  1  1
│      6  21  21   2  1  1   1   1   1   1   1  1  1  1
│      1   1   1  12  6  7  10  11  11  10   1  1  1  1
└      6   1   1   1  2  1   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9978767
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1815612
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   7  18  4  2  2
│      2   2   2   5  8  7   8   7   8   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   3  2  2   2   2   2   2   2  2  2  2
│      2   2   2  13  7  8  11  12  12  11   2  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.390492
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2149346
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 776
│   lb = 2.711702399277603
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 566
└   length(nodes) = 1011
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117563
└   sum(fire_plans.plans_per_fire) = 44952
┌ Info: Time check
└   time() - start_time = 1191.9219999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 777
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295788
┌ Info: Price and cut time (b-and-b)
└   t = 0.8075697
┌ Info: current bounds
│   node_ix = 777
│   lb = 2.711702399277603
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 567
└   length(nodes) = 1011
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117729
└   sum(fire_plans.plans_per_fire) = 44996
┌ Info: Time check
└   time() - start_time = 1192.7709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 778
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304676
┌ Info: Price and cut time (b-and-b)
└   t = 1.0789068
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 778
│   lb = 2.711702399277603
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 568
└   length(nodes) = 1013
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117749
└   sum(fire_plans.plans_per_fire) = 45031
┌ Info: Time check
└   time() - start_time = 1193.898999929428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 779
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321057
┌ Info: Price and cut time (b-and-b)
└   t = 0.8799022
┌ Info: current bounds
│   node_ix = 779
│   lb = 2.7117128949839953
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 569
└   length(nodes) = 1013
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117906
└   sum(fire_plans.plans_per_fire) = 45070
┌ Info: Time check
└   time() - start_time = 1194.8159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 404
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287345
┌ Info: Price and cut time (b-and-b)
└   t = 0.7483096
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 404
│   lb = 2.7117128949839953
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 570
└   length(nodes) = 1015
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 117990
└   sum(fire_plans.plans_per_fire) = 45095
┌ Info: Time check
└   time() - start_time = 1195.6180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 405
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246804
┌ Info: Price and cut time (b-and-b)
└   t = 1.1790083
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 405
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0   0  6  10  0  0
│      0   0   0   0  3  3  7  9  9   1  0   0  0  0
│     10   0   0   0  0  0  0  0  0   0  0   0  0  0
│      4  21  21  16  0  0  0  0  0   0  3   3  0  0
│      0   0   0   0  9  9  8  7  6  13  9   0  0  0
└      7   0   0   0  0  0  0  0  0   0  0   2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4044493
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0753548
│   obj = 2.714834282500158
└   obj_bound = 2.714571637487097
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1  1   1   1   1   7  11  1  1
│      1   1   1   1   4   4  8  10  10   2   1   1  1  1
│     11   1   1   1   1   1  1   1   1   1   1   1  1  1
│      5  22  22  17   1   1  1   1   1   1   4   4  1  1
│      1   1   1   1  10  10  9   8   7  14  10   1  1  1
└      8   1   1   1   1   1  1   1   1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.874775
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0307518
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2   8  12  2  2
│      2   2   2   2   5   5   9  11  11   3   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      6  23  23  18   2   2   2   2   2   2   5   5  2  2
│      2   2   2   2  11  11  10   9   8  15  11   2  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7553493
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0329702
│   obj = 2.714834282500158
└   obj_bound = 2.7146213011027105
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 405
│   lb = 2.7117128949839953
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 571
└   length(nodes) = 1015
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118636
└   sum(fire_plans.plans_per_fire) = 45358
┌ Info: Time check
└   time() - start_time = 1199.5739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1014
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309164
┌ Info: Price and cut time (b-and-b)
└   t = 0.809292
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1014
│   lb = 2.7117128949839953
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 572
└   length(nodes) = 1017
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118687
└   sum(fire_plans.plans_per_fire) = 45389
┌ Info: Time check
└   time() - start_time = 1200.4349999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1015
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285223
┌ Info: Price and cut time (b-and-b)
└   t = 1.1425759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1015
│   lb = 2.711725115260581
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 573
└   length(nodes) = 1019
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118795
└   sum(fire_plans.plans_per_fire) = 45440
┌ Info: Time check
└   time() - start_time = 1201.6159999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 492
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262289
┌ Info: Price and cut time (b-and-b)
└   t = 0.596203
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 492
│   lb = 2.711725115260581
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 574
└   length(nodes) = 1021
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118830
└   sum(fire_plans.plans_per_fire) = 45456
┌ Info: Time check
└   time() - start_time = 1202.266000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 493
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340389
┌ Info: Price and cut time (b-and-b)
└   t = 0.6983204
┌ Info: current bounds
│   node_ix = 493
│   lb = 2.711725589761838
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 575
└   length(nodes) = 1021
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 118948
└   sum(fire_plans.plans_per_fire) = 45498
┌ Info: Time check
└   time() - start_time = 1203.0139999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 736
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316782
┌ Info: Price and cut time (b-and-b)
└   t = 0.4849172
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 736
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0  0  0   0  6  15  2  0  0
│      0   0   0   3   0  2  6  9  10  0   0  0  0  0
│     10   0   0   0   0  0  0  0   0  0   0  0  0  0
│      5  20  20   1   0  0  0  0   0  0   0  0  0  0
│      0   0   0  11  11  9  9  6   5  9   1  0  0  0
└      5   0   0   0   1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4637278
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0772699
│   obj = 2.714834282500158
└   obj_bound = 2.7145797171378945
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   7  16  3  1  1
│      1   1   1   4   1   3   7  10  11   1   1  1  1  1
│     11   1   1   1   1   1   1   1   1   1   1  1  1  1
│      6  21  21   2   1   1   1   1   1   1   1  1  1  1
│      1   1   1  12  12  10  10   7   6  10   2  1  1  1
└      6   1   1   1   2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3803288
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1722805
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   5   2   4   8  11  12   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  13  13  11  11   8   7  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0948724
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4509564
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 736
│   lb = 2.711725589761838
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 576
└   length(nodes) = 1023
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119378
└   sum(fire_plans.plans_per_fire) = 45725
┌ Info: Time check
└   time() - start_time = 1207.6870000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 737
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266807
┌ Info: Price and cut time (b-and-b)
└   t = 0.8978015
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 737
│   lb = 2.7117289245258798
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 577
└   length(nodes) = 1025
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119561
└   sum(fire_plans.plans_per_fire) = 45771
┌ Info: Time check
└   time() - start_time = 1208.6299998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 858
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301449
┌ Info: Price and cut time (b-and-b)
└   t = 1.139335
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 858
│   lb = 2.7117289245258798
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 578
└   length(nodes) = 1027
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119630
└   sum(fire_plans.plans_per_fire) = 45800
┌ Info: Time check
└   time() - start_time = 1209.8050000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 859
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0336907
┌ Info: Price and cut time (b-and-b)
└   t = 1.0223217
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 859
│   lb = 2.7117634582687913
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 579
└   length(nodes) = 1029
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119763
└   sum(fire_plans.plans_per_fire) = 45846
┌ Info: Time check
└   time() - start_time = 1210.8849999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 788
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321003
┌ Info: Price and cut time (b-and-b)
└   t = 0.3201531
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 788
│   lb = 2.7117634582687913
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 580
└   length(nodes) = 1031
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 119793
└   sum(fire_plans.plans_per_fire) = 45857
┌ Info: Time check
└   time() - start_time = 1211.2829999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 789
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275356
┌ Info: Price and cut time (b-and-b)
└   t = 1.0334521
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 789
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0  5  15  2  0  0
│      0   0   0   0  3  2  6  9  10  0   0  0  0  0
│     10   0   0   0  0  0  0  0   0  0   0  0  0  0
│      5  20  20   1  0  0  0  0   0  0   0  0  0  0
│      0   0   0  14  8  9  9  6   5  9   0  0  0  0
└      5   0   0   0  1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4177848
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.069827
│   obj = 2.7148342825001577
└   obj_bound = 2.714594342136479
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   6  16  3  1  1
│      1   1   1   1  4   3   7  10  11   1   1  1  1  1
│     11   1   1   1  1   1   1   1   1   1   1  1  1  1
│      6  21  21   2  1   1   1   1   1   1   1  1  1  1
│      1   1   1  15  9  10  10   7   6  10   1  1  1  1
└      6   1   1   1  2   1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8480972
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1575358
│   obj = 2.7148342825001577
└   obj_bound = 2.7145722386487368
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   7  17  4  2  2
│      2   2   2   2   5   4   8  11  12   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  10  11  11   8   7  11   2  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.991863
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.5318169
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 789
│   lb = 2.7117781723495624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 581
└   length(nodes) = 1033
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120497
└   sum(fire_plans.plans_per_fire) = 46083
┌ Info: Time check
└   time() - start_time = 1215.920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 182
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0236459
┌ Info: Price and cut time (b-and-b)
└   t = 0.6608449
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 182
│   lb = 2.7117781723495624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 582
└   length(nodes) = 1035
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120587
└   sum(fire_plans.plans_per_fire) = 46112
┌ Info: Time check
└   time() - start_time = 1216.6159999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 183
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275905
┌ Info: Price and cut time (b-and-b)
└   t = 1.1106904
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 183
│   lb = 2.711778802587035
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 583
└   length(nodes) = 1037
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120771
└   sum(fire_plans.plans_per_fire) = 46149
┌ Info: Time check
└   time() - start_time = 1217.7649998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 18
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 18, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0926649
┌ Info: Price and cut time (b-and-b)
└   t = 0.7226661
┌ Info: current bounds
│   node_ix = 18
│   lb = 2.711778802587035
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 584
└   length(nodes) = 1037
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 120880
└   sum(fire_plans.plans_per_fire) = 46193
┌ Info: Time check
└   time() - start_time = 1218.5950000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 19
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 2, 19, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0188395
┌ Info: Price and cut time (b-and-b)
└   t = 0.3215751
┌ Info: current bounds
│   node_ix = 19
│   lb = 2.7117835239168624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 585
└   length(nodes) = 1037
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121019
└   sum(fire_plans.plans_per_fire) = 46220
┌ Info: Time check
└   time() - start_time = 1218.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 610
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312638
┌ Info: Price and cut time (b-and-b)
└   t = 1.1907463
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 610
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0  0  6  15  1  0  0
│     0   0   0  6  3  3  6  7  6  0   0  0  0  0
│     9   2   0  0  0  0  0  0  0  0   0  0  0  0
│     7  17  18  0  0  0  0  0  0  0   0  0  0  0
│     0   0   0  9  8  8  9  9  9  9   1  0  0  0
└     4   1   2  0  1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5780743
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1318096
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  2  1  1
│      1   1   1   7  4  4   7   8   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  10  9  9  10  10  10  10   2  1  1  1
└      5   2   3   1  2  2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6218649
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1903239
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  3  2  2
│      2   2   2   8   5   5   8   9   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  11  10  10  11  11  11  11   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0592882
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1996318
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 610
│   lb = 2.7117835239168624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 586
└   length(nodes) = 1039
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121425
└   sum(fire_plans.plans_per_fire) = 46456
┌ Info: Time check
└   time() - start_time = 1224.4589998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 611
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315644
┌ Info: Price and cut time (b-and-b)
└   t = 1.1593425
┌ Info: current bounds
│   node_ix = 611
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 587
└   length(nodes) = 1039
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121553
└   sum(fire_plans.plans_per_fire) = 46491
┌ Info: Time check
└   time() - start_time = 1225.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 830
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296044
┌ Info: Price and cut time (b-and-b)
└   t = 0.4714307
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 830
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 588
└   length(nodes) = 1041
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121575
└   sum(fire_plans.plans_per_fire) = 46506
┌ Info: Time check
└   time() - start_time = 1226.1740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1040
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0355859
┌ Info: Price and cut time (b-and-b)
└   t = 0.1903625
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1040
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 589
└   length(nodes) = 1043
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121598
└   sum(fire_plans.plans_per_fire) = 46513
┌ Info: Time check
└   time() - start_time = 1226.4300000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1041
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277389
┌ Info: Price and cut time (b-and-b)
└   t = 0.1739734
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1041
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 590
└   length(nodes) = 1045
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 121628
└   sum(fire_plans.plans_per_fire) = 46520
┌ Info: Time check
└   time() - start_time = 1226.7139999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1042
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291519
┌ Info: Price and cut time (b-and-b)
└   t = 0.8427351
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1042
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  14  2  0  0
│     0   0   0  12  8  8   2   0   1  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0   3  3  3  13  15  15  8   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5224997
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0769609
│   obj = 2.714834282500158
└   obj_bound = 2.7147926873314203
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  15  3  1  1
│      1   1   1  13  9  9   3   1   2  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1   4  4  4  14  16  16  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9742164
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1669818
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2  14  10  10   4   2   3   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   5   5   5  15  17  17  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9988195
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2740944
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1042
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 591
└   length(nodes) = 1047
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122033
└   sum(fire_plans.plans_per_fire) = 46682
┌ Info: Time check
└   time() - start_time = 1231.1189999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1043
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0465374
┌ Info: Price and cut time (b-and-b)
└   t = 0.8717186
┌ Info: current bounds
│   node_ix = 1043
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 592
└   length(nodes) = 1047
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122204
└   sum(fire_plans.plans_per_fire) = 46728
┌ Info: Time check
└   time() - start_time = 1232.0550000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1044
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029244
┌ Info: Price and cut time (b-and-b)
└   t = 1.1972426
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1044
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 593
└   length(nodes) = 1049
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122224
└   sum(fire_plans.plans_per_fire) = 46755
┌ Info: Time check
└   time() - start_time = 1233.2979998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1045
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266674
┌ Info: Price and cut time (b-and-b)
└   t = 0.5998336
┌ Info: current bounds
│   node_ix = 1045
│   lb = 2.71178988339069
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 594
└   length(nodes) = 1049
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122353
└   sum(fire_plans.plans_per_fire) = 46788
┌ Info: Time check
└   time() - start_time = 1233.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 831
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334445
┌ Info: Price and cut time (b-and-b)
└   t = 1.0489693
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 831
│   lb = 2.711791898578005
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 595
└   length(nodes) = 1051
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122439
└   sum(fire_plans.plans_per_fire) = 46822
┌ Info: Time check
└   time() - start_time = 1235.039999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1046
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284475
┌ Info: Price and cut time (b-and-b)
└   t = 0.1498638
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1046
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  2  0   0   0   0   5  15  2  0  0
│     0   0   0  12  6  6   2   2   3   0   0  0  0  0
│     9   2   0   0  0  0   0   0   0   0   0  0  0  0
│     7  17  18   0  0  0   0   0   0   0   0  0  0  0
│     0   0   0   3  3  5  14  14  13  10   1  0  0  0
└     4   1   2   0  1  1   0   0   0   0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5044614
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0729206
│   obj = 2.7148342825001577
└   obj_bound = 2.7146559463493847
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  3  1   1   1   1   6  16  3  1  1
│      1   1   1  13  7  7   3   3   4   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1   4  4  6  15  15  14  11   2  1  1  1
└      5   2   3   1  2  2   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7942723
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1500911
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  4  2   2   2   2   7  17  4  2  2
│      2   2   2  14  8  8   4   4   5   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2   5  5  7  16  16  15  12   3  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5379583
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2113283
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1046
│   lb = 2.711791898578005
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 596
└   length(nodes) = 1051
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122767
└   sum(fire_plans.plans_per_fire) = 46969
┌ Info: Time check
└   time() - start_time = 1238.108999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1047
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291403
┌ Info: Price and cut time (b-and-b)
└   t = 0.7795645
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1047
│   lb = 2.7117918985780056
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 597
└   length(nodes) = 1053
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122870
└   sum(fire_plans.plans_per_fire) = 47007
┌ Info: Time check
└   time() - start_time = 1238.9319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1048
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328683
┌ Info: Price and cut time (b-and-b)
└   t = 0.2680251
┌ Info: current bounds
│   node_ix = 1048
│   lb = 2.7117918985780056
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 598
└   length(nodes) = 1053
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 122917
└   sum(fire_plans.plans_per_fire) = 47020
┌ Info: Time check
└   time() - start_time = 1239.25
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1049
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250894
┌ Info: Price and cut time (b-and-b)
└   t = 0.7801665
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1049
│   lb = 2.7117991056969397
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 599
└   length(nodes) = 1055
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123022
└   sum(fire_plans.plans_per_fire) = 47060
┌ Info: Time check
└   time() - start_time = 1240.1749999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1002
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281122
┌ Info: Price and cut time (b-and-b)
└   t = 0.3835555
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1002
│   lb = 2.7117991056969397
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 600
└   length(nodes) = 1057
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123076
└   sum(fire_plans.plans_per_fire) = 47076
┌ Info: Time check
└   time() - start_time = 1240.608999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1003
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301427
┌ Info: Price and cut time (b-and-b)
└   t = 1.1812791
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1003
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0   0   0  7  15  2  0  0
│     0   0   0   0   0  11  9   6   5  1   0  0  0  0
│     9   2   0   0   0   0  0   0   0  0   0  0  0  0
│     7  17  18   0   0   0  0   0   0  0   0  0  0  0
│     0   0   0  15  11   0  6  10  11  8   1  0  0  0
└     4   1   2   0   1   0  0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3717228
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0951268
│   obj = 2.7148342825001577
└   obj_bound = 2.714594206410311
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  3  1  1
│      1   1   1   1   1  12  10   7   6  2   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12   1   7  11  12  9   2  1  1  1
└      5   2   3   1   2   1   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8876969
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0895107
│   obj = 2.7148342825001577
└   obj_bound = 2.7145706244662366
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2   2   2  13  11   8   7   3   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13   2   8  12  13  10   3  2  2  2
└      6   3   4   2   3   2   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8519427
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1656964
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1003
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 601
└   length(nodes) = 1057
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123591
└   sum(fire_plans.plans_per_fire) = 47286
┌ Info: Time check
└   time() - start_time = 1244.8949999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1004
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278785
┌ Info: Price and cut time (b-and-b)
└   t = 0.4929636
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1004
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 602
└   length(nodes) = 1059
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123658
└   sum(fire_plans.plans_per_fire) = 47306
┌ Info: Time check
└   time() - start_time = 1245.4359998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1058
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303252
┌ Info: Price and cut time (b-and-b)
└   t = 0.6646759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1058
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 603
└   length(nodes) = 1061
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123702
└   sum(fire_plans.plans_per_fire) = 47331
┌ Info: Time check
└   time() - start_time = 1246.1549999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1059
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284613
┌ Info: Price and cut time (b-and-b)
└   t = 0.8990991
┌ Info: current bounds
│   node_ix = 1059
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 604
└   length(nodes) = 1061
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 123836
└   sum(fire_plans.plans_per_fire) = 47385
┌ Info: Time check
└   time() - start_time = 1247.0969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1005
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258646
┌ Info: Price and cut time (b-and-b)
└   t = 0.9645261
┌ Info: current bounds
│   node_ix = 1005
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 605
└   length(nodes) = 1061
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124005
└   sum(fire_plans.plans_per_fire) = 47428
┌ Info: Time check
└   time() - start_time = 1248.101000070572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1056
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264421
┌ Info: Price and cut time (b-and-b)
└   t = 0.1745346
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1056
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0   0  0  0  7  15  1  0  0
│     0   0   0   0   0  10  10  7  7  0   0  0  0  0
│     9   2   0   0   0   0   0  0  0  0   0  0  0  0
│     7  17  18   0   0   0   0  0  0  0   0  0  0  0
│     0   0   0  15  11   2   6  9  9  8   1  0  0  0
└     4   1   2   0   1   1   0  0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3083182
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0643112
│   obj = 2.714834282500158
└   obj_bound = 2.7145800299837215
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  2  1  1
│      1   1   1   1   1  11  11   8   8  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12   3   7  10  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2803984
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2148079
│   obj = 2.7148342825001577
└   obj_bound = 2.7145760020842267
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  3  2  2
│      2   2   2   2   2  12  12   9   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13   4   8  11  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7091449
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2066002
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1056
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 606
└   length(nodes) = 1063
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124036
└   sum(fire_plans.plans_per_fire) = 47568
┌ Info: Time check
└   time() - start_time = 1251.680999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1062
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276898
┌ Info: Price and cut time (b-and-b)
└   t = 0.3807476
┌ Info: current bounds
│   node_ix = 1062
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 607
└   length(nodes) = 1063
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124042
└   sum(fire_plans.plans_per_fire) = 47582
┌ Info: Time check
└   time() - start_time = 1252.098000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1063
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314253
┌ Info: Price and cut time (b-and-b)
└   t = 1.3996507
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1063
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 608
└   length(nodes) = 1065
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124048
└   sum(fire_plans.plans_per_fire) = 47640
┌ Info: Time check
└   time() - start_time = 1253.555999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1057
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287872
┌ Info: Price and cut time (b-and-b)
└   t = 0.2605204
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1057
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 609
└   length(nodes) = 1067
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124108
└   sum(fire_plans.plans_per_fire) = 47646
┌ Info: Time check
└   time() - start_time = 1253.856999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1066
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282647
┌ Info: Price and cut time (b-and-b)
└   t = 0.3355538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1066
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 610
└   length(nodes) = 1069
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124114
└   sum(fire_plans.plans_per_fire) = 47655
┌ Info: Time check
└   time() - start_time = 1254.2430000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1067
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274114
┌ Info: Price and cut time (b-and-b)
└   t = 0.5075576
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1067
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0  6  15  1  0  0
│     0   0   0   0   0  9  9  6  6  0   0  0  0  0
│     9   2   0   0   0  0  0  0  0  0   0  0  0  0
│     7  17  18   0   0  0  0  0  0  0   0  0  0  0
│     0   0   0  15  11  2  6  9  9  8   1  0  0  0
└     4   1   2   0   1  1  0  0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4226566
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0857852
│   obj = 2.7148342825001577
└   obj_bound = 2.7146457689976713
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  7  16  2  1  1
│      1   1   1   1   1  10  10   7   7  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  16  12   3   7  10  10  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4141871
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2092129
│   obj = 2.7148342825001577
└   obj_bound = 2.7147911249016263
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  3  2  2
│      2   2   2   2   2  11  11   8   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  13   4   8  11  11  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3268513
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.205533
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1067
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 611
└   length(nodes) = 1071
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124441
└   sum(fire_plans.plans_per_fire) = 47836
┌ Info: Time check
└   time() - start_time = 1259.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1070
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284143
┌ Info: Price and cut time (b-and-b)
└   t = 0.5738087
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1070
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 612
└   length(nodes) = 1073
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124462
└   sum(fire_plans.plans_per_fire) = 47853
┌ Info: Time check
└   time() - start_time = 1259.723000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1071
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314556
┌ Info: Price and cut time (b-and-b)
└   t = 0.9090567
┌ Info: current bounds
│   node_ix = 1071
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 613
└   length(nodes) = 1073
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124647
└   sum(fire_plans.plans_per_fire) = 47903
┌ Info: Time check
└   time() - start_time = 1260.680999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1068
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296403
┌ Info: Price and cut time (b-and-b)
└   t = 0.3040903
┌ Info: current bounds
│   node_ix = 1068
│   lb = 2.71179910569694
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 614
└   length(nodes) = 1073
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124653
└   sum(fire_plans.plans_per_fire) = 47915
┌ Info: Time check
└   time() - start_time = 1261.0409998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1069
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270559
┌ Info: Price and cut time (b-and-b)
└   t = 1.3311602
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1069
│   lb = 2.711802577573408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 615
└   length(nodes) = 1075
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 124659
└   sum(fire_plans.plans_per_fire) = 47968
┌ Info: Time check
└   time() - start_time = 1262.404000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 956
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246886
┌ Info: Price and cut time (b-and-b)
└   t = 0.691576
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 956
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  7  15  1  0  0
│     0   0   1   0  4  4  9  7   6  1   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   1  15  7  6  6  9  10  7   1  0  0  0
└     4   1   0   0  1  1  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4408919
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0636778
│   obj = 2.7148342825001577
└   obj_bound = 2.714586138065415
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  2  1  1
│      1   1   2   1  5  5  10   8   7  2   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   2  16  8  7   7  10  11  8   2  1  1  1
└      5   2   1   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7038062
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1491723
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2  9  17  3  2  2
│      2   2   3   2  6  6  11   9   8  3   2  2  2  2
│     11   4   2   2  2  2   2   2   2  2   2  2  2  2
│      9  19  20   2  2  2   2   2   2  2   2  2  2  2
│      2   2   3  17  9  8   8  11  12  9   3  2  2  2
└      6   3   2   2  3  3   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3053878
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2134429
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 956
│   lb = 2.711802577573408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 616
└   length(nodes) = 1077
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125179
└   sum(fire_plans.plans_per_fire) = 48199
┌ Info: Time check
└   time() - start_time = 1266.6269998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 957
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251905
┌ Info: Price and cut time (b-and-b)
└   t = 0.8998569
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 957
│   lb = 2.711809843366288
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 617
└   length(nodes) = 1079
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125367
└   sum(fire_plans.plans_per_fire) = 48243
┌ Info: Time check
└   time() - start_time = 1267.566999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 576
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290183
┌ Info: Price and cut time (b-and-b)
└   t = 0.3590829
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 576
│   lb = 2.711809843366288
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 618
└   length(nodes) = 1081
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125405
└   sum(fire_plans.plans_per_fire) = 48257
┌ Info: Time check
└   time() - start_time = 1267.9639999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 577
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306937
┌ Info: Price and cut time (b-and-b)
└   t = 1.0814715
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 577
│   lb = 2.711812404640282
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 619
└   length(nodes) = 1083
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125580
└   sum(fire_plans.plans_per_fire) = 48314
┌ Info: Time check
└   time() - start_time = 1269.0950000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 596
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229047
┌ Info: Price and cut time (b-and-b)
└   t = 0.4353322
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 596
│   lb = 2.711812404640282
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 620
└   length(nodes) = 1085
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 125688
└   sum(fire_plans.plans_per_fire) = 48330
┌ Info: Time check
└   time() - start_time = 1269.5739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 597
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234411
┌ Info: Price and cut time (b-and-b)
└   t = 1.0976421
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 597
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0   0  0  0  6  15  2  0  0
│      0   0   0  9  3  2   3  6  7  0   0  0  0  0
│     10   0   0  0  0  0   0  0  0  0   0  0  0  0
│      5  20  20  1  0  0   0  0  0  0   0  0  0  0
│      0   0   0  6  8  9  12  9  8  9   1  0  0  0
└      5   0   0  0  1  0   0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5039046
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.052384
│   obj = 2.714834282500158
└   obj_bound = 2.7145828477077885
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1  1   7  16  3  1  1
│      1   1   1  10  4   3   4   7  8   1   1  1  1  1
│     11   1   1   1  1   1   1   1  1   1   1  1  1  1
│      6  21  21   2  1   1   1   1  1   1   1  1  1  1
│      1   1   1   7  9  10  13  10  9  10   2  1  1  1
└      6   1   1   1  2   1   1   1  1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9608597
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1274928
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2  11   5   4   5   8   9   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8  10  11  14  11  10  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3856269
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1816293
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 597
│   lb = 2.7118232856361746
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 621
└   length(nodes) = 1087
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126410
└   sum(fire_plans.plans_per_fire) = 48640
┌ Info: Time check
└   time() - start_time = 1274.4049999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 440
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238042
┌ Info: Price and cut time (b-and-b)
└   t = 0.5046371
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 440
│   lb = 2.7118232856361746
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 622
└   length(nodes) = 1089
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126510
└   sum(fire_plans.plans_per_fire) = 48668
┌ Info: Time check
└   time() - start_time = 1274.941999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 441
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261658
┌ Info: Price and cut time (b-and-b)
└   t = 1.0362803
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 441
│   lb = 2.7118232856361746
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 623
└   length(nodes) = 1091
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126655
└   sum(fire_plans.plans_per_fire) = 48708
┌ Info: Time check
└   time() - start_time = 1276.029000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1088
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1087848
┌ Info: Price and cut time (b-and-b)
└   t = 0.5063319
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1088
│   lb = 2.7118232856361746
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 624
└   length(nodes) = 1093
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126680
└   sum(fire_plans.plans_per_fire) = 48726
┌ Info: Time check
└   time() - start_time = 1276.6480000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1089
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308669
┌ Info: Price and cut time (b-and-b)
└   t = 0.7026046
┌ Info: current bounds
│   node_ix = 1089
│   lb = 2.7118344143254745
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 625
└   length(nodes) = 1093
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 126820
└   sum(fire_plans.plans_per_fire) = 48762
┌ Info: Time check
└   time() - start_time = 1277.3999998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 794
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290672
┌ Info: Price and cut time (b-and-b)
└   t = 0.3416455
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 794
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0   0  0  0  0  6  15  1  0  0
│     0   0   0   4  3   0  9  9  7  0   0  0  0  0
│     9   2   0   0  0   0  0  0  0  0   0  0  0  0
│     7  17  18   0  0   0  0  0  0  0   0  0  0  0
│     0   0   0  13  9  11  7  7  8  9   1  0  0  0
└     4   1   2   0  1   1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4663987
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0902184
│   obj = 2.7148342825001577
└   obj_bound = 2.714598082500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1   7  16  2  1  1
│      1   1   1   5   4   1  10  10  8   1   1  1  1  1
│     10   3   1   1   1   1   1   1  1   1   1  1  1  1
│      8  18  19   1   1   1   1   1  1   1   1  1  1  1
│      1   1   1  14  10  12   8   8  9  10   2  1  1  1
└      5   2   3   1   2   2   1   1  1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4423873
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.221153
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  3  2  2
│      2   2   2   6   5   2  11  11   9   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  15  11  13   9   9  10  11   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5507942
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2681287
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 794
│   lb = 2.7118344143254745
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 626
└   length(nodes) = 1095
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127216
└   sum(fire_plans.plans_per_fire) = 48932
┌ Info: Time check
└   time() - start_time = 1281.3499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 795
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0809233
┌ Info: Price and cut time (b-and-b)
└   t = 0.8842935
┌ Info: current bounds
│   node_ix = 795
│   lb = 2.711843674351557
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 627
└   length(nodes) = 1095
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127398
└   sum(fire_plans.plans_per_fire) = 48993
┌ Info: Time check
└   time() - start_time = 1282.3889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 768
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246952
┌ Info: Price and cut time (b-and-b)
└   t = 0.5683878
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 768
│   lb = 2.711843674351557
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 628
└   length(nodes) = 1097
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127501
└   sum(fire_plans.plans_per_fire) = 49019
┌ Info: Time check
└   time() - start_time = 1282.9879999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 769
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307113
┌ Info: Price and cut time (b-and-b)
└   t = 1.2729853
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 769
│   lb = 2.7118454225981
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 629
└   length(nodes) = 1099
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127667
└   sum(fire_plans.plans_per_fire) = 49055
┌ Info: Time check
└   time() - start_time = 1284.3129999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 622
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300482
┌ Info: Price and cut time (b-and-b)
└   t = 0.4574714
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 622
│   lb = 2.7118454225981
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 630
└   length(nodes) = 1101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 127759
└   sum(fire_plans.plans_per_fire) = 49077
┌ Info: Time check
└   time() - start_time = 1284.8209998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 623
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325784
┌ Info: Price and cut time (b-and-b)
└   t = 0.5557956
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 623
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0  0  0   0  7  15  2  0  0
│     0   0   0  6  3   0  9  7   6  0   0  0  0  0
│     9   2   0  0  0   0  0  0   0  0   0  0  0  0
│     7  17  18  0  0   0  0  0   0  0   0  0  0  0
│     0   0   0  9  8  11  6  9  10  8   1  0  0  0
└     4   1   2  0  1   1  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7636672
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1568532
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  16  3  1  1
│      1   1   1   7  4   1  10   8   7  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1  10  9  12   7  10  11  9   2  1  1  1
└      5   2   3   1  2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2094595
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1749102
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2   8   5   2  11   9   8   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  11  10  13   8  11  12  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8777491
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2341211
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 623
│   lb = 2.711851043763042
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 631
└   length(nodes) = 1103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128236
└   sum(fire_plans.plans_per_fire) = 49297
┌ Info: Time check
└   time() - start_time = 1289.3719999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1092
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252789
┌ Info: Price and cut time (b-and-b)
└   t = 1.1879478
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1092
│   lb = 2.711851043763042
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 632
└   length(nodes) = 1105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128485
└   sum(fire_plans.plans_per_fire) = 49341
┌ Info: Time check
└   time() - start_time = 1290.5920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1093
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306349
┌ Info: Price and cut time (b-and-b)
└   t = 0.9992889
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1093
│   lb = 2.7118575409748256
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 633
└   length(nodes) = 1107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128559
└   sum(fire_plans.plans_per_fire) = 49371
┌ Info: Time check
└   time() - start_time = 1291.6499998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 476
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266439
┌ Info: Price and cut time (b-and-b)
└   t = 0.8464267
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 476
│   lb = 2.7118575409748256
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 634
└   length(nodes) = 1109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128607
└   sum(fire_plans.plans_per_fire) = 49407
┌ Info: Time check
└   time() - start_time = 1292.537999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 477
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292591
┌ Info: Price and cut time (b-and-b)
└   t = 1.1446768
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 477
│   lb = 2.7118650481911253
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 635
└   length(nodes) = 1111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 128762
└   sum(fire_plans.plans_per_fire) = 49454
┌ Info: Time check
└   time() - start_time = 1293.7330000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 536
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246934
┌ Info: Price and cut time (b-and-b)
└   t = 0.6842179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 536
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0   0  0  0  0  7  14  1  0  0
│     0   0   0   1   0  11  7  6  8  0   0  0  0  0
│     9   2   0   0   0   0  0  0  0  0   0  0  0  0
│     7  17  18   0   0   0  0  0  0  0   0  0  0  0
│     0   0   0  15  11   1  9  9  8  7   1  0  0  0
└     4   1   2   0   1   0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.69866
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0636157
│   obj = 2.7148342825001577
└   obj_bound = 2.714566571794892
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1  1  8  15  2  1  1
│      1   1   1   2   1  12   8   7  9  1   1  1  1  1
│     10   3   1   1   1   1   1   1  1  1   1  1  1  1
│      8  18  19   1   1   1   1   1  1  1   1  1  1  1
│      1   1   1  16  12   2  10  10  9  8   2  1  1  1
└      5   2   3   1   2   1   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4828486
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1527488
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  9  16  3  2  2
│      2   2   2   3   2  13   9   8  10  2   2  2  2  2
│     11   4   2   2   2   2   2   2   2  2   2  2  2  2
│      9  19  20   2   2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  13   3  11  11  10  9   3  2  2  2
└      6   3   4   2   3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9154003
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3355528
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 536
│   lb = 2.7118650481911253
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 636
└   length(nodes) = 1113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129233
└   sum(fire_plans.plans_per_fire) = 49684
┌ Info: Time check
└   time() - start_time = 1298.7130000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 537
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0234446
┌ Info: Price and cut time (b-and-b)
└   t = 0.61289
┌ Info: current bounds
│   node_ix = 537
│   lb = 2.7118660346916643
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 637
└   length(nodes) = 1113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129342
└   sum(fire_plans.plans_per_fire) = 49718
┌ Info: Time check
└   time() - start_time = 1299.356999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 612
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306665
┌ Info: Price and cut time (b-and-b)
└   t = 1.4219068
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 612
│   lb = 2.7118660346916643
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 638
└   length(nodes) = 1115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129505
└   sum(fire_plans.plans_per_fire) = 49757
┌ Info: Time check
└   time() - start_time = 1300.8250000476837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 613
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294889
┌ Info: Price and cut time (b-and-b)
└   t = 0.829538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 613
│   lb = 2.7118674961551297
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 639
└   length(nodes) = 1117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129540
└   sum(fire_plans.plans_per_fire) = 49780
┌ Info: Time check
└   time() - start_time = 1301.707999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1006
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320922
┌ Info: Price and cut time (b-and-b)
└   t = 0.5774847
┌ Info: current bounds
│   node_ix = 1006
│   lb = 2.7118674961551297
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 640
└   length(nodes) = 1117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 129597
└   sum(fire_plans.plans_per_fire) = 49807
┌ Info: Time check
└   time() - start_time = 1302.3209998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1007
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.031346
┌ Info: Price and cut time (b-and-b)
└   t = 1.0463151
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1007
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0   0   0   0  7  15  2  0  0
│     0   0   0  9  9  9   2   1   2  0   0  0  0  0
│     9   2   0  0  0  0   0   0   0  0   0  0  0  0
│     7  17  18  0  0  0   0   0   0  0   0  0  0  0
│     0   0   0  6  2  2  13  15  14  8   1  0  0  0
└     4   1   2  0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6388811
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0737213
│   obj = 2.7148342825001577
└   obj_bound = 2.714583896404213
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  3  1  1
│      1   1   1  10  10  10   3   2   3  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1   7   3   3  14  16  15  9   2  1  1  1
└      5   2   3   1   2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.178665
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2033644
│   obj = 2.7148342825001577
└   obj_bound = 2.714699984230543
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  4  2  2
│      2   2   2  11  11  11   4   3   4   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2   8   4   4  15  17  16  10   3  2  2  2
└      6   3   4   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8257793
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2745406
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1007
│   lb = 2.7118679650882473
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 641
└   length(nodes) = 1119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130093
└   sum(fire_plans.plans_per_fire) = 50035
┌ Info: Time check
└   time() - start_time = 1307.1719999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1078
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242187
┌ Info: Price and cut time (b-and-b)
└   t = 0.8747913
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1078
│   lb = 2.7118679650882473
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 642
└   length(nodes) = 1121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130172
└   sum(fire_plans.plans_per_fire) = 50067
┌ Info: Time check
└   time() - start_time = 1308.0889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1079
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246706
┌ Info: Price and cut time (b-and-b)
└   t = 0.5609142
┌ Info: current bounds
│   node_ix = 1079
│   lb = 2.711869156915076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 643
└   length(nodes) = 1121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130311
└   sum(fire_plans.plans_per_fire) = 50097
┌ Info: Time check
└   time() - start_time = 1308.6740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 856
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026737
┌ Info: Price and cut time (b-and-b)
└   t = 0.475199
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 856
│   lb = 2.711869156915076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 644
└   length(nodes) = 1123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130422
└   sum(fire_plans.plans_per_fire) = 50121
┌ Info: Time check
└   time() - start_time = 1309.1900000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 857
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263775
┌ Info: Price and cut time (b-and-b)
└   t = 1.2040481
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 857
│   lb = 2.711869156915076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 645
└   length(nodes) = 1125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130557
└   sum(fire_plans.plans_per_fire) = 50167
┌ Info: Time check
└   time() - start_time = 1310.4370000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1122
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262973
┌ Info: Price and cut time (b-and-b)
└   t = 0.6778333
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1122
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  15  2  0  0
│     0   0   0  12  6  2   2   4   5  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0   3  5  9  14  12  11  8   1  0  0  0
└     4   1   3   0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4765093
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1366488
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  16  3  1  1
│      1   1   1  13  7   3   3   5   6  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1   4  6  10  15  13  12  9   2  1  1  1
└      5   2   4   1  2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.784515
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1829419
│   obj = 2.714834282500158
└   obj_bound = 2.7147178859471457
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  4  2  2
│      2   2   2  14  8   4   4   6   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2   5  7  11  16  14  13  10   3  2  2  2
└      6   3   5   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1144497
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2563342
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1122
│   lb = 2.711869156915076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 646
└   length(nodes) = 1127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130861
└   sum(fire_plans.plans_per_fire) = 50345
┌ Info: Time check
└   time() - start_time = 1314.6909999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1123
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248615
┌ Info: Price and cut time (b-and-b)
└   t = 0.7184762
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1123
│   lb = 2.711876399298026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 647
└   length(nodes) = 1129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 130921
└   sum(fire_plans.plans_per_fire) = 50373
┌ Info: Time check
└   time() - start_time = 1315.4430000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 300
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307661
┌ Info: Price and cut time (b-and-b)
└   t = 1.658851
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 300
│   lb = 2.711876399298026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 648
└   length(nodes) = 1131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131063
└   sum(fire_plans.plans_per_fire) = 50431
┌ Info: Time check
└   time() - start_time = 1317.151999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 301
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313199
┌ Info: Price and cut time (b-and-b)
└   t = 1.5579423
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 301
│   lb = 2.711893522106426
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 649
└   length(nodes) = 1133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131153
└   sum(fire_plans.plans_per_fire) = 50476
┌ Info: Time check
└   time() - start_time = 1318.7590000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1108
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328689
┌ Info: Price and cut time (b-and-b)
└   t = 0.9579166
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1108
│   lb = 2.711893522106426
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 650
└   length(nodes) = 1135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131194
└   sum(fire_plans.plans_per_fire) = 50509
┌ Info: Time check
└   time() - start_time = 1319.7549998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1109
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307807
┌ Info: Price and cut time (b-and-b)
└   t = 0.2498089
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1109
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  11  8  0  0
│      0   0   0   0  6  6  9  6   3   0   0  0  0  0
│     10   1   0   0  0  0  0  0   0   0   0  0  0  0
│      4  19  19  15  0  0  0  0   0   0   0  1  0  0
│      0   0   0   0  6  6  6  9  12  14   7  0  0  0
└      7   0   0   0  0  0  0  0   0   0   0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3789051
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0789739
│   obj = 2.7148342825001577
└   obj_bound = 2.7147383376896554
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  12  9  1  1
│      1   1   1   1  7  7  10   7   4   1   1  1  1  1
│     11   2   1   1  1  1   1   1   1   1   1  1  1  1
│      5  20  20  16  1  1   1   1   1   1   1  2  1  1
│      1   1   1   1  7  7   7  10  13  15   8  1  1  1
└      8   1   1   1  1  1   1   1   1   1   1  3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7884211
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0362678
│   obj = 2.714834282500158
└   obj_bound = 2.714566974667868
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  13  10  2  2
│      2   2   2   2  8  8  11   8   5   2   2   2  2  2
│     12   3   2   2  2  2   2   2   2   2   2   2  2  2
│      6  21  21  17  2  2   2   2   2   2   2   3  2  2
│      2   2   2   2  8  8   8  11  14  16   9   2  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 9, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6103247
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0553834
│   obj = 2.714834282500158
└   obj_bound = 2.7145968324358383
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1109
│   lb = 2.711894855009665
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 651
└   length(nodes) = 1135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131566
└   sum(fire_plans.plans_per_fire) = 50686
┌ Info: Time check
└   time() - start_time = 1322.5320000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 812
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256814
┌ Info: Price and cut time (b-and-b)
└   t = 1.0086624
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 812
│   lb = 2.711894855009665
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 652
└   length(nodes) = 1137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131636
└   sum(fire_plans.plans_per_fire) = 50717
┌ Info: Time check
└   time() - start_time = 1323.5699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 813
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256588
┌ Info: Price and cut time (b-and-b)
└   t = 1.1793675
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 813
│   lb = 2.7118952947340795
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 653
└   length(nodes) = 1139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131753
└   sum(fire_plans.plans_per_fire) = 50756
┌ Info: Time check
└   time() - start_time = 1324.795000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 834
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0309894
┌ Info: Price and cut time (b-and-b)
└   t = 0.8899508
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 834
│   lb = 2.7118952947340795
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 654
└   length(nodes) = 1141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 131824
└   sum(fire_plans.plans_per_fire) = 50789
┌ Info: Time check
└   time() - start_time = 1325.733999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 835
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0331471
┌ Info: Price and cut time (b-and-b)
└   t = 0.9413953
┌ Info: current bounds
│   node_ix = 835
│   lb = 2.711898403568278
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 655
└   length(nodes) = 1141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132026
└   sum(fire_plans.plans_per_fire) = 50843
┌ Info: Time check
└   time() - start_time = 1326.7300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 520
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270511
┌ Info: Price and cut time (b-and-b)
└   t = 0.2585026
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 520
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0   0   0   0   0  7  14  2  0  0
│      0   0   0  11  8   0   2   5   5  0   0  0  0  0
│     10   0   0   0  0   0   0   0   0  0   0  0  0  0
│      5  20  20   1  0   0   0   0   0  0   0  0  0  0
│      0   0   0   3  4  11  13  10  10  8   1  0  0  0
└      5   0   0   0  1   0   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6760223
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0725768
│   obj = 2.714834282500158
└   obj_bound = 2.714578693301519
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  15  3  1  1
│      1   1   1  12  9   1   3   6   6  1   1  1  1  1
│     11   1   1   1  1   1   1   1   1  1   1  1  1  1
│      6  21  21   2  1   1   1   1   1  1   1  1  1  1
│      1   1   1   4  5  12  14  11  11  9   2  1  1  1
└      6   1   1   1  2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0262024
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1893576
│   obj = 2.714834282500158
└   obj_bound = 2.714593650815141
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  16  4  2  2
│      2   2   2  13  10   2   4   7   7   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2   5   6  13  15  12  12  10   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8065966
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2021107
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 520
│   lb = 2.711898403568278
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 656
└   length(nodes) = 1143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132572
└   sum(fire_plans.plans_per_fire) = 51056
┌ Info: Time check
└   time() - start_time = 1330.470999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 521
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297407
┌ Info: Price and cut time (b-and-b)
└   t = 1.2078615
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 521
│   lb = 2.7119027149373425
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 657
└   length(nodes) = 1145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132770
└   sum(fire_plans.plans_per_fire) = 51111
┌ Info: Time check
└   time() - start_time = 1331.7200000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 296
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255537
┌ Info: Price and cut time (b-and-b)
└   t = 1.2007705
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 296
│   lb = 2.7119027149373425
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 658
└   length(nodes) = 1147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 132886
└   sum(fire_plans.plans_per_fire) = 51149
┌ Info: Time check
└   time() - start_time = 1332.9660000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 297
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0216815
┌ Info: Price and cut time (b-and-b)
└   t = 1.6457362
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 297
│   lb = 2.7119040048913927
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 659
└   length(nodes) = 1149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133117
└   sum(fire_plans.plans_per_fire) = 51216
┌ Info: Time check
└   time() - start_time = 1334.641000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 600
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252343
┌ Info: Price and cut time (b-and-b)
└   t = 0.65271
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 600
│   lb = 2.7119040048913927
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 660
└   length(nodes) = 1151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133216
└   sum(fire_plans.plans_per_fire) = 51246
┌ Info: Time check
└   time() - start_time = 1335.3489999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 601
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286134
┌ Info: Price and cut time (b-and-b)
└   t = 0.7140426
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 601
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0   0   0  7  15  1  0  0
│     0   0   0   2   0  3  6  10  12  0   0  0  0  0
│     9   2   0   0   0  0  0   0   0  0   0  0  0  0
│     7  17  18   0   0  0  0   0   0  0   0  0  0  0
│     0   0   0  14  11  9  9   6   4  8   1  0  0  0
└     4   1   3   0   1  0  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4426674
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.169508
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1  8  16  2  1  1
│      1   1   1   3   1   4   7  11  13  1   1  1  1  1
│     10   3   1   1   1   1   1   1   1  1   1  1  1  1
│      8  18  19   1   1   1   1   1   1  1   1  1  1  1
│      1   1   1  15  12  10  10   7   5  9   2  1  1  1
└      5   2   4   1   2   1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0346909
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1822262
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   9  17  3  2  2
│      2   2   2   4   2   5   8  12  14   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   2  16  13  11  11   8   6  10   3  2  2  2
└      6   3   5   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5976838
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2598002
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 601
│   lb = 2.711904291930571
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 661
└   length(nodes) = 1153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133661
└   sum(fire_plans.plans_per_fire) = 51427
┌ Info: Time check
└   time() - start_time = 1339.3289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 550
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0243897
┌ Info: Price and cut time (b-and-b)
└   t = 0.4879025
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 550
│   lb = 2.711904291930571
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 662
└   length(nodes) = 1155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133681
└   sum(fire_plans.plans_per_fire) = 51440
┌ Info: Time check
└   time() - start_time = 1339.8489999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 551
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291359
┌ Info: Price and cut time (b-and-b)
└   t = 0.7272181
┌ Info: current bounds
│   node_ix = 551
│   lb = 2.711904291930572
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 663
└   length(nodes) = 1155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133826
└   sum(fire_plans.plans_per_fire) = 51474
┌ Info: Time check
└   time() - start_time = 1340.6310000419617
┌ Info: Exploring node
└   branch_and_bound_node.ix = 554
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028149
┌ Info: Price and cut time (b-and-b)
└   t = 0.4473265
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 554
│   lb = 2.711904291930572
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 664
└   length(nodes) = 1157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 133868
└   sum(fire_plans.plans_per_fire) = 51487
┌ Info: Time check
└   time() - start_time = 1341.1859998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 555
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0231202
┌ Info: Price and cut time (b-and-b)
└   t = 1.0485148
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 555
│   lb = 2.7119103188583846
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 665
└   length(nodes) = 1159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134000
└   sum(fire_plans.plans_per_fire) = 51525
┌ Info: Time check
└   time() - start_time = 1342.263000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 204
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253738
┌ Info: Price and cut time (b-and-b)
└   t = 1.0704252
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 204
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0   0  0  0  0  0  7  15  1  0  0
│     0   0   2   0   0  5  9  9  8  1   0  0  0  0
│     9   2   0   0   0  0  0  0  0  0   0  0  0  0
│     7  17  18   0   0  0  0  0  0  0   0  0  0  0
│     0   0   1  15  12  6  6  7  8  7   1  0  0  0
└     4   1   1   0   1  1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4453853
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2787342
│   obj = 2.7148342825001577
└   obj_bound = 2.7146583362221213
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1  1  8  16  2  1  1
│      1   1   3   1   1  6  10  10  9  2   1  1  1  1
│     10   3   1   1   1  1   1   1  1  1   1  1  1  1
│      8  18  19   1   1  1   1   1  1  1   1  1  1  1
│      1   1   2  16  13  7   7   8  9  8   2  1  1  1
└      5   2   2   1   2  2   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9298449
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1597857
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  9  17  3  2  2
│      2   2   4   2   2  7  11  11  10  3   2  2  2  2
│     11   4   2   2   2  2   2   2   2  2   2  2  2  2
│      9  19  20   2   2  2   2   2   2  2   2  2  2  2
│      2   2   3  17  14  8   8   9  10  9   3  2  2  2
└      6   3   3   2   3  3   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.956377
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1563155
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 204
│   lb = 2.7119103188583846
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 666
└   length(nodes) = 1161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134410
└   sum(fire_plans.plans_per_fire) = 51755
┌ Info: Time check
└   time() - start_time = 1346.8129999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 205
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0223147
┌ Info: Price and cut time (b-and-b)
└   t = 0.7380109
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 205
│   lb = 2.71191326397123
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 667
└   length(nodes) = 1163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134521
└   sum(fire_plans.plans_per_fire) = 51787
┌ Info: Time check
└   time() - start_time = 1347.5869998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 676
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0241402
┌ Info: Price and cut time (b-and-b)
└   t = 1.0053451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 676
│   lb = 2.71191326397123
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 668
└   length(nodes) = 1165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134669
└   sum(fire_plans.plans_per_fire) = 51822
┌ Info: Time check
└   time() - start_time = 1348.6289999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 677
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282001
┌ Info: Price and cut time (b-and-b)
└   t = 1.1239072
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 677
│   lb = 2.7119252992978398
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 669
└   length(nodes) = 1167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134734
└   sum(fire_plans.plans_per_fire) = 51855
┌ Info: Time check
└   time() - start_time = 1349.7860000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 638
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250353
┌ Info: Price and cut time (b-and-b)
└   t = 0.4553032
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 638
│   lb = 2.7119252992978398
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 670
└   length(nodes) = 1169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 134828
└   sum(fire_plans.plans_per_fire) = 51870
┌ Info: Time check
└   time() - start_time = 1350.287999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 639
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291413
┌ Info: Price and cut time (b-and-b)
└   t = 0.9495678
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 639
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0   0   0  7  15  2  0  0
│     0   0   0  9  3  6  9   2   1  0   0  0  0  0
│     9   2   0  0  0  0  0   0   0  0   0  0  0  0
│     7  17  18  0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  7  8  5  6  13  14  8   1  0  0  0
└     4   1   2  0  1  1  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7717539
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0719638
│   obj = 2.7148342825001577
└   obj_bound = 2.7146476783177027
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  3  1  1
│      1   1   1  10  4  7  10   3   2  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1   8  9  6   7  14  15  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4835488
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1681117
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  4  2  2
│      2   2   2  11   5  8  11   4   3   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2   9  10  7   8  15  16  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9767302
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2596063
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 639
│   lb = 2.71192529929784
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 671
└   length(nodes) = 1171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135369
└   sum(fire_plans.plans_per_fire) = 52097
┌ Info: Time check
└   time() - start_time = 1355.582999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1168
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267432
┌ Info: Price and cut time (b-and-b)
└   t = 1.4555265
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1168
│   lb = 2.71192529929784
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 672
└   length(nodes) = 1173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135512
└   sum(fire_plans.plans_per_fire) = 52148
┌ Info: Time check
└   time() - start_time = 1357.0820000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1169
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257549
┌ Info: Price and cut time (b-and-b)
└   t = 1.5454346
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1169
│   lb = 2.7119330794936753
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 673
└   length(nodes) = 1175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135606
└   sum(fire_plans.plans_per_fire) = 52192
┌ Info: Time check
└   time() - start_time = 1358.659999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 228
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282448
┌ Info: Price and cut time (b-and-b)
└   t = 0.6491457
┌ Info: current bounds
│   node_ix = 228
│   lb = 2.7119330794936753
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 674
└   length(nodes) = 1175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135768
└   sum(fire_plans.plans_per_fire) = 52233
┌ Info: Time check
└   time() - start_time = 1359.3559999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 229
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0217177
┌ Info: Price and cut time (b-and-b)
└   t = 0.6305579
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 229
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 675
└   length(nodes) = 1177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 135917
└   sum(fire_plans.plans_per_fire) = 52271
┌ Info: Time check
└   time() - start_time = 1360.0230000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1080
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318877
┌ Info: Price and cut time (b-and-b)
└   t = 0.2843759
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1080
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0  7  15  2  0  0
│     0   0   0   0  6  8  9   4   5  0   0  0  0  0
│     9   2   0   0  0  0  0   0   0  0   0  0  0  0
│     7  17  18   0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  15  5  3  6  12  11  8   1  0  0  0
└     4   1   2   0  1  1  0   0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.559737
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.071986
│   obj = 2.7148342825001577
└   obj_bound = 2.71458627699483
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  3  1  1
│      1   1   1   1  7  9  10   5   6  1   1  1  1  1
│     10   3   1   1  1  1   1   1   1  1   1  1  1  1
│      8  18  19   1  1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  6  4   7  13  12  9   2  1  1  1
└      5   2   3   1  2  2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8730667
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2232736
│   obj = 2.714834282500158
└   obj_bound = 2.714578735080608
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  4  2  2
│      2   2   2   2  8  10  11   6   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  17  7   5   8  14  13  10   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5064655
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.4122931
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1080
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 676
└   length(nodes) = 1179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136356
└   sum(fire_plans.plans_per_fire) = 52407
┌ Info: Time check
└   time() - start_time = 1363.6689999103546
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1081
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260556
┌ Info: Price and cut time (b-and-b)
└   t = 0.194429
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1081
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 677
└   length(nodes) = 1181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136383
└   sum(fire_plans.plans_per_fire) = 52415
┌ Info: Time check
└   time() - start_time = 1363.8940000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1178
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276383
┌ Info: Price and cut time (b-and-b)
└   t = 0.6402143
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1178
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 678
└   length(nodes) = 1183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136419
└   sum(fire_plans.plans_per_fire) = 52438
┌ Info: Time check
└   time() - start_time = 1364.5859999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1179
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271131
┌ Info: Price and cut time (b-and-b)
└   t = 1.294019
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1179
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 679
└   length(nodes) = 1185
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136576
└   sum(fire_plans.plans_per_fire) = 52495
┌ Info: Time check
└   time() - start_time = 1365.9240000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1180
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0335392
┌ Info: Price and cut time (b-and-b)
└   t = 0.7144201
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1180
│   lb = 2.7119452086752647
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 680
└   length(nodes) = 1187
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 136601
└   sum(fire_plans.plans_per_fire) = 52518
┌ Info: Time check
└   time() - start_time = 1366.6889998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1181
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290467
┌ Info: Price and cut time (b-and-b)
└   t = 1.3025573
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1181
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0   0   0  7  15  1  0  0
│     0   0   0   0  6  9  9   3   4  0   0  0  0  0
│     9   2   0   0  0  0  0   0   0  0   0  0  0  0
│     7  17  18   0  0  0  0   0   0  0   0  0  0  0
│     0   0   0  16  5  2  7  13  12  8   1  0  0  0
└     5   2   2   0  2  1  0   0   0  0   3  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5448145
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0660674
│   obj = 2.7148342825001577
└   obj_bound = 2.7145668035318975
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  8  16  2  1  1
│      1   1   1   1  7  10  10   4   5  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   1  17  6   3   8  14  13  9   2  1  1  1
└      6   3   3   1  3   2   1   1   1  1   4  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3329442
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2392659
│   obj = 2.7148342825001577
└   obj_bound = 2.7145981649065147
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   9  17  3  2  2
│      2   2   2   2  8  11  11   5   6   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  18  7   4   9  15  14  10   3  2  2  2
└      7   4   4   2  4   3   2   2   2   2   5  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8304364
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2186826
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1181
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 681
└   length(nodes) = 1189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137059
└   sum(fire_plans.plans_per_fire) = 52739
┌ Info: Time check
└   time() - start_time = 1371.858999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 564
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0243451
┌ Info: Price and cut time (b-and-b)
└   t = 0.3951706
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 564
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 682
└   length(nodes) = 1191
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137079
└   sum(fire_plans.plans_per_fire) = 52751
┌ Info: Time check
└   time() - start_time = 1372.2829999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 565
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272066
┌ Info: Price and cut time (b-and-b)
└   t = 0.4683014
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 565
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 683
└   length(nodes) = 1193
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137113
└   sum(fire_plans.plans_per_fire) = 52765
┌ Info: Time check
└   time() - start_time = 1372.8029999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1192
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292005
┌ Info: Price and cut time (b-and-b)
└   t = 0.4284766
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1192
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 684
└   length(nodes) = 1195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137159
└   sum(fire_plans.plans_per_fire) = 52775
┌ Info: Time check
└   time() - start_time = 1373.2760000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1193
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301426
┌ Info: Price and cut time (b-and-b)
└   t = 0.9708755
┌ Info: current bounds
│   node_ix = 1193
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 685
└   length(nodes) = 1195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137336
└   sum(fire_plans.plans_per_fire) = 52824
┌ Info: Time check
└   time() - start_time = 1374.2969999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1190
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300138
┌ Info: Price and cut time (b-and-b)
└   t = 0.6007427
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1190
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0  0   0  7  15  2  0  0
│     0   0   0   0  2  6  12  9   1  0   0  0  0  0
│     9   2   0   0  0  0   0  0   0  0   0  0  0  0
│     7  17  18   0  0  0   0  0   0  0   0  0  0  0
│     0   0   0  15  9  5   3  6  14  8   1  0  0  0
└     4   1   2   0  1  1   0  0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3575525
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0633348
│   obj = 2.714834282500158
└   obj_bound = 2.714630875803455
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  16  3  1  1
│      1   1   1   1   3  7  13  10   2  1   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   1  16  10  6   4   7  15  9   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0458194
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.22354
│   obj = 2.7148342825001577
└   obj_bound = 2.714666964641088
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   9  17  4  2  2
│      2   2   2   2   4  8  14  11   3   2   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  11  7   5   8  16  10   3  2  2  2
└      6   3   4   2   3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6901683
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1711276
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1190
│   lb = 2.711947311410213
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 686
└   length(nodes) = 1197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137751
└   sum(fire_plans.plans_per_fire) = 52990
┌ Info: Time check
└   time() - start_time = 1378.135999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1191
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0959344
┌ Info: Price and cut time (b-and-b)
└   t = 0.9225512
┌ Info: current bounds
│   node_ix = 1191
│   lb = 2.7119524741253054
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 687
└   length(nodes) = 1197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 137935
└   sum(fire_plans.plans_per_fire) = 53038
┌ Info: Time check
└   time() - start_time = 1379.167000055313
┌ Info: Exploring node
└   branch_and_bound_node.ix = 148
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273736
┌ Info: Price and cut time (b-and-b)
└   t = 0.5840062
┌ Info: current bounds
│   node_ix = 148
│   lb = 2.7119524741253054
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 688
└   length(nodes) = 1197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138023
└   sum(fire_plans.plans_per_fire) = 53080
┌ Info: Time check
└   time() - start_time = 1379.7869999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 149
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249355
┌ Info: Price and cut time (b-and-b)
└   t = 0.6963853
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 149
│   lb = 2.711952474125306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 689
└   length(nodes) = 1199
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138129
└   sum(fire_plans.plans_per_fire) = 53113
┌ Info: Time check
└   time() - start_time = 1380.5360000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1198
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249486
┌ Info: Price and cut time (b-and-b)
└   t = 0.5272618
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1198
│   lb = 2.711952474125306
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 690
└   length(nodes) = 1201
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138177
└   sum(fire_plans.plans_per_fire) = 53132
┌ Info: Time check
└   time() - start_time = 1381.0910000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1199
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0239586
┌ Info: Price and cut time (b-and-b)
└   t = 1.2001011
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1199
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0  0  0  0   0  8  15  0  0  0
│     0   0   0  6  3  1  9  7   5  0   0  0  0  0
│     9   2   0  0  0  0  0  0   0  0   0  0  0  0
│     7  17  18  0  0  0  0  0   0  0   0  0  0  0
│     0   0   2  9  8  9  6  9  10  8   0  0  0  0
└     4   1   0  0  1  1  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4563929
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1606025
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1  9  16  1  1  1
│      1   1   1   7  4   2  10   8   6  1   1  1  1  1
│     10   3   1   1  1   1   1   1   1  1   1  1  1  1
│      8  18  19   1  1   1   1   1   1  1   1  1  1  1
│      1   1   3  10  9  10   7  10  11  9   1  1  1  1
└      5   2   1   1  2   2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7669865
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1977201
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2  10  17  2  2  2
│      2   2   2   8   5   3  11   9   7   2   2  2  2  2
│     11   4   2   2   2   2   2   2   2   2   2  2  2  2
│      9  19  20   2   2   2   2   2   2   2   2  2  2  2
│      2   2   4  11  10  11   8  11  12  10   2  2  2  2
└      6   3   2   2   3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0644879
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2056713
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1199
│   lb = 2.7119524741253063
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 691
└   length(nodes) = 1203
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138826
└   sum(fire_plans.plans_per_fire) = 53357
┌ Info: Time check
└   time() - start_time = 1385.7200000286102
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1200
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0242075
┌ Info: Price and cut time (b-and-b)
└   t = 0.955671
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1200
│   lb = 2.7119524741253063
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 692
└   length(nodes) = 1205
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138938
└   sum(fire_plans.plans_per_fire) = 53395
┌ Info: Time check
└   time() - start_time = 1386.7119998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1201
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027886
┌ Info: Price and cut time (b-and-b)
└   t = 0.832037
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1201
│   lb = 2.7119613027094163
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 693
└   length(nodes) = 1207
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 138976
└   sum(fire_plans.plans_per_fire) = 53420
┌ Info: Time check
└   time() - start_time = 1387.5809998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 606
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253365
┌ Info: Price and cut time (b-and-b)
└   t = 0.4528439
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 606
│   lb = 2.7119613027094163
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 694
└   length(nodes) = 1209
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139008
└   sum(fire_plans.plans_per_fire) = 53435
┌ Info: Time check
└   time() - start_time = 1388.0839998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1208
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273591
┌ Info: Price and cut time (b-and-b)
└   t = 0.8502849
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1208
│   lb = 2.7119613027094163
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 695
└   length(nodes) = 1211
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139119
└   sum(fire_plans.plans_per_fire) = 53462
┌ Info: Time check
└   time() - start_time = 1388.9849998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1209
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248269
┌ Info: Price and cut time (b-and-b)
└   t = 1.0171079
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1209
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0  0  7  14  1  0  0
│     0   0   0   0  6  3   6  10  8  0   0  0  0  0
│     9   2   0   0  0  0   0   0  0  0   0  0  0  0
│     7  17  18   0  0  0   0   0  0  0   0  0  0  0
│     0   0   0  16  6  9  10   6  7  7   2  0  0  0
└     4   1   2   0  1  0   0   0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5446383
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0693717
│   obj = 2.7148342825001577
└   obj_bound = 2.7145785825245303
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1  1  8  15  2  1  1
│      1   1   1   1  7   4   7  11  9  1   1  1  1  1
│     10   3   1   1  1   1   1   1  1  1   1  1  1  1
│      8  18  19   1  1   1   1   1  1  1   1  1  1  1
│      1   1   1  17  7  10  11   7  8  8   3  1  1  1
└      5   2   3   1  2   1   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1855665
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2109583
│   obj = 2.714834282500158
└   obj_bound = 2.714576860002774
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2  9  16  3  2  2
│      2   2   2   2  8   5   8  12  10  2   2  2  2  2
│     11   4   2   2  2   2   2   2   2  2   2  2  2  2
│      9  19  20   2  2   2   2   2   2  2   2  2  2  2
│      2   2   2  18  8  11  12   8   9  9   4  2  2  2
└      6   3   4   2  3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9158311
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1825019
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1209
│   lb = 2.7119613027094163
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 696
└   length(nodes) = 1213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139513
└   sum(fire_plans.plans_per_fire) = 53685
┌ Info: Time check
└   time() - start_time = 1393.675999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 607
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02748
┌ Info: Price and cut time (b-and-b)
└   t = 0.5611378
┌ Info: current bounds
│   node_ix = 607
│   lb = 2.7119638362653076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 697
└   length(nodes) = 1213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139657
└   sum(fire_plans.plans_per_fire) = 53722
┌ Info: Time check
└   time() - start_time = 1394.2639999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 586
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251058
┌ Info: Price and cut time (b-and-b)
└   t = 1.6042221
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 586
│   lb = 2.7119638362653076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 698
└   length(nodes) = 1215
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139790
└   sum(fire_plans.plans_per_fire) = 53762
┌ Info: Time check
└   time() - start_time = 1395.9079999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 587
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269571
┌ Info: Price and cut time (b-and-b)
└   t = 1.122866
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 587
│   lb = 2.7119674966716394
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 699
└   length(nodes) = 1217
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 139948
└   sum(fire_plans.plans_per_fire) = 53795
┌ Info: Time check
└   time() - start_time = 1397.0729999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1100
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273588
┌ Info: Price and cut time (b-and-b)
└   t = 1.5820486
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1100
│   lb = 2.7119674966716394
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 700
└   length(nodes) = 1219
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140083
└   sum(fire_plans.plans_per_fire) = 53844
┌ Info: Time check
└   time() - start_time = 1398.7109999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1101
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262372
┌ Info: Price and cut time (b-and-b)
└   t = 1.5143022
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1101
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0  0  0   0  0  0  0  6  15  2  0  0
│     0   0   0  6  5   0  6  6  8  0   0  0  0  0
│     9   2   0  0  0   0  0  0  0  0   0  0  0  0
│     7  17  18  0  0   0  0  0  0  0   0  0  0  0
│     0   0   0  9  7  11  9  9  8  9   1  0  0  0
└     4   1   2  0  1   1  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.679882
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1580508
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1  1   7  16  3  1  1
│      1   1   1   7  6   1   7   7  9   1   1  1  1  1
│     10   3   1   1  1   1   1   1  1   1   1  1  1  1
│      8  18  19   1  1   1   1   1  1   1   1  1  1  1
│      1   1   1  10  8  12  10  10  9  10   2  1  1  1
└      5   2   3   1  2   2   1   1  1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3848913
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1766734
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  17  4  2  2
│      2   2   2   8  7   2   8   8  10   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2  11  9  13  11  11  10  11   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6202102
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2574765
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1101
│   lb = 2.7119700247815612
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 701
└   length(nodes) = 1221
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140509
└   sum(fire_plans.plans_per_fire) = 54045
┌ Info: Time check
└   time() - start_time = 1404.0809998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 862
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0238782
┌ Info: Price and cut time (b-and-b)
└   t = 0.3781665
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 862
│   lb = 2.7119700247815612
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 702
└   length(nodes) = 1223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140574
└   sum(fire_plans.plans_per_fire) = 54060
┌ Info: Time check
└   time() - start_time = 1404.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 863
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0468699
┌ Info: Price and cut time (b-and-b)
└   t = 0.8578012
┌ Info: current bounds
│   node_ix = 863
│   lb = 2.7119715814699843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 703
└   length(nodes) = 1223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140785
└   sum(fire_plans.plans_per_fire) = 54113
┌ Info: Time check
└   time() - start_time = 1405.409999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 760
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307991
┌ Info: Price and cut time (b-and-b)
└   t = 0.3601185
┌ Info: current bounds
│   node_ix = 760
│   lb = 2.7119715814699843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 704
└   length(nodes) = 1223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 140828
└   sum(fire_plans.plans_per_fire) = 54135
┌ Info: Time check
└   time() - start_time = 1405.8129999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 761
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326295
┌ Info: Price and cut time (b-and-b)
└   t = 1.0301604
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 761
│   lb = 2.7119765075830684
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 705
└   length(nodes) = 1225
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141020
└   sum(fire_plans.plans_per_fire) = 54193
┌ Info: Time check
└   time() - start_time = 1406.8929998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1022
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0336833
┌ Info: Price and cut time (b-and-b)
└   t = 0.3282823
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1022
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0   0  0  0  0  0  6  15  2  0  0
│      0   0   0  5   0  3  6  8  9  0   0  0  0  0
│     10   0   0  0   0  0  0  0  0  0   0  0  0  0
│      5  20  20  1   0  0  0  0  0  0   0  0  0  0
│      0   0   0  9  11  9  9  7  6  9   1  0  0  0
└      5   0   0  0   1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.3938416
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0739151
│   obj = 2.714834282500158
└   obj_bound = 2.714595368153823
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1  1   1   7  16  3  1  1
│      1   1   1   6   1   4   7  9  10   1   1  1  1  1
│     11   1   1   1   1   1   1  1   1   1   1  1  1  1
│      6  21  21   2   1   1   1  1   1   1   1  1  1  1
│      1   1   1  10  12  10  10  8   7  10   2  1  1  1
└      6   1   1   1   2   1   1  1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4796943
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2233232
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   7   2   5   8  10  11   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  11  13  11  11   9   8  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8719327
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2531442
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1022
│   lb = 2.7119765075830684
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 706
└   length(nodes) = 1227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141465
└   sum(fire_plans.plans_per_fire) = 54421
┌ Info: Time check
└   time() - start_time = 1411.1419999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1023
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293693
┌ Info: Price and cut time (b-and-b)
└   t = 0.9381097
┌ Info: current bounds
│   node_ix = 1023
│   lb = 2.711994641234343
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 707
└   length(nodes) = 1227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141666
└   sum(fire_plans.plans_per_fire) = 54471
┌ Info: Time check
└   time() - start_time = 1412.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 818
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027846
┌ Info: Price and cut time (b-and-b)
└   t = 0.3039499
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 818
│   lb = 2.711994641234343
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 708
└   length(nodes) = 1229
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141690
└   sum(fire_plans.plans_per_fire) = 54481
┌ Info: Time check
└   time() - start_time = 1412.4739999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 819
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026418
┌ Info: Price and cut time (b-and-b)
└   t = 0.2611456
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 819
│   lb = 2.711994641234343
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 709
└   length(nodes) = 1231
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141732
└   sum(fire_plans.plans_per_fire) = 54492
┌ Info: Time check
└   time() - start_time = 1412.7799999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1230
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304315
┌ Info: Price and cut time (b-and-b)
└   t = 0.9547116
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1230
│   lb = 2.711994641234343
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 710
└   length(nodes) = 1233
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 141820
└   sum(fire_plans.plans_per_fire) = 54527
┌ Info: Time check
└   time() - start_time = 1413.779000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1231
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273968
┌ Info: Price and cut time (b-and-b)
└   t = 0.547369
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1231
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0   0  0   0   0   0  9  9  0  0
│      0   0   0   0   0   0  7  12  11   0  0  0  0  0
│     10   0   0   0   0   0  0   0   0   0  0  0  0  0
│      3  20  20  15   0   0  0   0   0   0  2  2  0  0
│      0   0   0   0  12  11  8   3   4  14  7  1  0  0
└      7   0   0   0   0   0  0   0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.5532339
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.060411
│   obj = 2.714834282500158
└   obj_bound = 2.7145833513550315
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1  1   1   1   1  10  10  1  1
│      1   1   1   1   1   1  8  13  12   1   1   1  1  1
│     11   1   1   1   1   1  1   1   1   1   1   1  1  1
│      4  21  21  16   1   1  1   1   1   1   3   3  1  1
│      1   1   1   1  13  12  9   4   5  15   8   2  1  1
└      8   1   1   1   1   1  1   1   1   1   1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6473765
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0479049
│   obj = 2.714834282500158
└   obj_bound = 2.714715371646349
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  11  11  2  2
│      2   2   2   2   2   2   9  14  13   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2  14  13  10   5   6  16   9   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4150493
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0420849
│   obj = 2.714834282500158
└   obj_bound = 2.7147062030523914
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1231
│   lb = 2.7119946412343436
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 711
└   length(nodes) = 1235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142301
└   sum(fire_plans.plans_per_fire) = 54821
┌ Info: Time check
└   time() - start_time = 1418.6570000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1228
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248566
┌ Info: Price and cut time (b-and-b)
└   t = 0.7942131
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1228
│   lb = 2.7119946412343436
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 712
└   length(nodes) = 1237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142373
└   sum(fire_plans.plans_per_fire) = 54855
┌ Info: Time check
└   time() - start_time = 1419.4960000514984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1229
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0446818
┌ Info: Price and cut time (b-and-b)
└   t = 0.8733785
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1229
│   lb = 2.7119999937665495
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 713
└   length(nodes) = 1239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142395
└   sum(fire_plans.plans_per_fire) = 54896
┌ Info: Time check
└   time() - start_time = 1420.4289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1154
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303581
┌ Info: Price and cut time (b-and-b)
└   t = 0.5960557
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1154
│   lb = 2.7119999937665495
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 714
└   length(nodes) = 1241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142422
└   sum(fire_plans.plans_per_fire) = 54920
┌ Info: Time check
└   time() - start_time = 1421.0780000686646
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1155
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259856
┌ Info: Price and cut time (b-and-b)
└   t = 0.8496547
┌ Info: current bounds
│   node_ix = 1155
│   lb = 2.7119999937665495
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 715
└   length(nodes) = 1241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142608
└   sum(fire_plans.plans_per_fire) = 54972
┌ Info: Time check
└   time() - start_time = 1421.9660000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1156
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.104611
┌ Info: Price and cut time (b-and-b)
└   t = 0.6757
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1156
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  1  0  0   0  0  6  16  1  0  0
│     0   0   2   0  2  6  9   6  8  1   0  0  0  0
│     9   2   0   0  0  0  0   0  0  0   0  0  0  0
│     7  17  18   0  0  0  0   0  0  0   0  0  0  0
│     0   0   0  15  9  5  6  10  8  8   0  0  0  0
└     4   1   1   0  1  1  0   0  0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4219166
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1330578
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   2  1   1   1  1  7  17  2  1  1
│      1   1   3   1   3  7  10   7  9  2   1  1  1  1
│     10   3   1   1   1  1   1   1  1  1   1  1  1  1
│      8  18  19   1   1  1   1   1  1  1   1  1  1  1
│      1   1   1  16  10  6   7  11  9  9   1  1  1  1
└      5   2   2   1   2  2   1   1  1  1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6692167
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1464613
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   3  2   2   2   2   8  18  3  2  2
│      2   2   4   2   4  8  11   8  10   3   2  2  2  2
│     11   4   2   2   2  2   2   2   2   2   2  2  2  2
│      9  19  20   2   2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  11  7   8  12  10  10   2  2  2  2
└      6   3   3   2   3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(3, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.605789
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.181312
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1156
│   lb = 2.7119999937665495
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 716
└   length(nodes) = 1241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 142956
└   sum(fire_plans.plans_per_fire) = 55134
┌ Info: Time check
└   time() - start_time = 1425.5209999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1157
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302139
┌ Info: Price and cut time (b-and-b)
└   t = 0.5259736
┌ Info: current bounds
│   node_ix = 1157
│   lb = 2.712002469403792
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 717
└   length(nodes) = 1241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143070
└   sum(fire_plans.plans_per_fire) = 55165
┌ Info: Time check
└   time() - start_time = 1426.0929999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 574
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261281
┌ Info: Price and cut time (b-and-b)
└   t = 0.8190746
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 574
│   lb = 2.712002469403792
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 718
└   length(nodes) = 1243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143119
└   sum(fire_plans.plans_per_fire) = 55187
┌ Info: Time check
└   time() - start_time = 1426.9539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 575
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233068
┌ Info: Price and cut time (b-and-b)
└   t = 1.2111193
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 575
│   lb = 2.712010420164428
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 719
└   length(nodes) = 1245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143307
└   sum(fire_plans.plans_per_fire) = 55238
┌ Info: Time check
└   time() - start_time = 1428.1959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1126
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326158
┌ Info: Price and cut time (b-and-b)
└   t = 1.3014469
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1126
│   lb = 2.712010420164428
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 720
└   length(nodes) = 1247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143450
└   sum(fire_plans.plans_per_fire) = 55281
┌ Info: Time check
└   time() - start_time = 1429.5579998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1127
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261087
┌ Info: Price and cut time (b-and-b)
└   t = 1.1276355
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1127
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  6  15  1  0  0
│     0   0   0  12  6  2   3   3   5  0   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   0   3  5  9  13  12  11  9   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4841647
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0737947
│   obj = 2.7148342825001577
└   obj_bound = 2.7146053069919542
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1   1   7  16  2  1  1
│      1   1   1  13  7   3   4   4   6   1   1  1  1  1
│     10   3   1   1  1   1   1   1   1   1   1  1  1  1
│      8  18  19   1  1   1   1   1   1   1   1  1  1  1
│      1   1   1   4  6  10  14  13  12  10   2  1  1  1
└      5   2   3   1  2   2   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2739018
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2010656
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  17  3  2  2
│      2   2   2  14  8   4   5   5   7   2   2  2  2  2
│     11   4   2   2  2   2   2   2   2   2   2  2  2  2
│      9  19  20   2  2   2   2   2   2   2   2  2  2  2
│      2   2   2   5  7  11  15  14  13  11   3  2  2  2
└      6   3   4   2  3   3   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9667937
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2922698
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1127
│   lb = 2.7120121877635377
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 721
└   length(nodes) = 1249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143865
└   sum(fire_plans.plans_per_fire) = 55491
┌ Info: Time check
└   time() - start_time = 1434.5409998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 904
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235672
┌ Info: Price and cut time (b-and-b)
└   t = 1.2289602
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 904
│   lb = 2.7120121877635377
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 722
└   length(nodes) = 1251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 143989
└   sum(fire_plans.plans_per_fire) = 55528
┌ Info: Time check
└   time() - start_time = 1435.7990000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 905
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0229101
┌ Info: Price and cut time (b-and-b)
└   t = 0.7448445
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 905
│   lb = 2.712017261150719
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 723
└   length(nodes) = 1253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144079
└   sum(fire_plans.plans_per_fire) = 55556
┌ Info: Time check
└   time() - start_time = 1436.5759999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 578
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249852
┌ Info: Price and cut time (b-and-b)
└   t = 1.0191707
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 578
│   lb = 2.712017261150719
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 724
└   length(nodes) = 1255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144198
└   sum(fire_plans.plans_per_fire) = 55599
┌ Info: Time check
└   time() - start_time = 1437.6370000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 579
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275436
┌ Info: Price and cut time (b-and-b)
└   t = 1.1478605
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 579
│   lb = 2.712020075902342
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 725
└   length(nodes) = 1257
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144284
└   sum(fire_plans.plans_per_fire) = 55634
┌ Info: Time check
└   time() - start_time = 1438.8259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 848
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289108
┌ Info: Price and cut time (b-and-b)
└   t = 0.9159641
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 848
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0   0  0   0  0   0  6  15  2  0  0
│      0   0   0   3   0  8  12  6   2  0   0  0  0  0
│     10   0   0   0   0  0   0  0   0  0   0  0  0  0
│      5  20  20   1   0  0   0  0   0  0   0  0  0  0
│      0   0   0  12  11  3   3  9  13  9   1  0  0  0
└      5   0   0   0   1  0   0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4290615
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1141517
│   obj = 2.714834282500158
└   obj_bound = 2.7148342824984866
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   7  16  3  1  1
│      1   1   1   4   1  9  13   7   3   1   1  1  1  1
│     11   1   1   1   1  1   1   1   1   1   1  1  1  1
│      6  21  21   2   1  1   1   1   1   1   1  1  1  1
│      1   1   1  13  12  4   4  10  14  10   2  1  1  1
└      6   1   1   1   2  1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0655435
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.3648073
│   obj = 2.714834282500158
└   obj_bound = 2.714580376391325
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   8  17  4  2  2
│      2   2   2   5   2  10  14   8   4   2   2  2  2  2
│     12   2   2   2   2   2   2   2   2   2   2  2  2  2
│      7  22  22   3   2   2   2   2   2   2   2  2  2  2
│      2   2   2  14  13   5   5  11  15  11   3  2  2  2
└      7   2   2   2   3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4197365
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2037976
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 848
│   lb = 2.712020075902342
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 726
└   length(nodes) = 1259
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 144851
└   sum(fire_plans.plans_per_fire) = 55913
┌ Info: Time check
└   time() - start_time = 1443.8929998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 849
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260565
┌ Info: Price and cut time (b-and-b)
└   t = 0.6016215
┌ Info: current bounds
│   node_ix = 849
│   lb = 2.7120207509711136
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 727
└   length(nodes) = 1259
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145035
└   sum(fire_plans.plans_per_fire) = 55949
┌ Info: Time check
└   time() - start_time = 1444.5499999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 732
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027705
┌ Info: Price and cut time (b-and-b)
└   t = 0.3459185
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 732
│   lb = 2.7120207509711136
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 728
└   length(nodes) = 1261
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145077
└   sum(fire_plans.plans_per_fire) = 55964
┌ Info: Time check
└   time() - start_time = 1444.9289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 733
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289109
┌ Info: Price and cut time (b-and-b)
└   t = 1.0077013
┌ Info: current bounds
│   node_ix = 733
│   lb = 2.712038117474307
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 729
└   length(nodes) = 1261
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145337
└   sum(fire_plans.plans_per_fire) = 56015
┌ Info: Time check
└   time() - start_time = 1445.983999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 826
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293652
┌ Info: Price and cut time (b-and-b)
└   t = 0.4382704
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 826
│   lb = 2.712038117474307
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 730
└   length(nodes) = 1263
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145357
└   sum(fire_plans.plans_per_fire) = 56032
┌ Info: Time check
└   time() - start_time = 1446.470999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 827
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0333123
┌ Info: Price and cut time (b-and-b)
└   t = 1.1939329
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 827
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0   0  8  9  0  0
│      0   0   0   0  3  9  9  9   0   0  0  0  0  0
│     10   0   0   0  0  0  0  0   0   0  0  0  0  0
│      3  20  20  15  0  0  0  0   0   0  2  2  0  0
│      0   0   0   0  9  2  6  6  15  14  8  1  0  0
└      7   0   0   0  0  0  0  0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4830601
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0632708
│   obj = 2.714834282500158
└   obj_bound = 2.7146532045262575
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  10  10  10   1   1  1   1  1  1
│     11   1   1   1   1   1   1   1   1   1  1   1  1  1
│      4  21  21  16   1   1   1   1   1   1  3   3  1  1
│      1   1   1   1  10   3   7   7  16  15  9   2  1  1
└      8   1   1   1   1   1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.7356966
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.043735
│   obj = 2.714834282500158
└   obj_bound = 2.7146252343605197
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  11  11  11   2   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   2   2   2   2   2   4   4  2  2
│      2   2   2   2  11   4   8   8  17  16  10   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2019219
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0605396
│   obj = 2.714834282500158
└   obj_bound = 2.7146520926839033
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 827
│   lb = 2.712038813638188
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 731
└   length(nodes) = 1265
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145936
└   sum(fire_plans.plans_per_fire) = 56330
┌ Info: Time check
└   time() - start_time = 1451.8810000419617
┌ Info: Exploring node
└   branch_and_bound_node.ix = 506
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029045
┌ Info: Price and cut time (b-and-b)
└   t = 0.5013627
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 506
│   lb = 2.712038813638188
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 732
└   length(nodes) = 1267
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 145972
└   sum(fire_plans.plans_per_fire) = 56347
┌ Info: Time check
└   time() - start_time = 1452.4249999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 507
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311804
┌ Info: Price and cut time (b-and-b)
└   t = 0.7082972
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 507
│   lb = 2.712043428944496
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 733
└   length(nodes) = 1269
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146121
└   sum(fire_plans.plans_per_fire) = 56385
┌ Info: Time check
└   time() - start_time = 1453.175999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 646
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.030182
┌ Info: Price and cut time (b-and-b)
└   t = 0.9073995
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 646
│   lb = 2.712043428944496
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 734
└   length(nodes) = 1271
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146174
└   sum(fire_plans.plans_per_fire) = 56411
┌ Info: Time check
└   time() - start_time = 1454.1269998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 647
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298012
┌ Info: Price and cut time (b-and-b)
└   t = 1.0260102
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 647
│   lb = 2.712043428944496
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 735
└   length(nodes) = 1273
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146227
└   sum(fire_plans.plans_per_fire) = 56444
┌ Info: Time check
└   time() - start_time = 1455.2070000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1270
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265948
┌ Info: Price and cut time (b-and-b)
└   t = 0.5003406
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1270
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0   0   0   0  8  9  0  0
│      0   0   0   0  9  9  6   4   2   0  0  0  0  0
│     10   0   0   0  0  0  0   0   0   0  0  0  0  0
│      3  20  20  15  0  2  0   0   0   0  0  2  0  0
│      0   0   0   0  3  0  9  11  13  14  9  1  0  0
└      7   0   0   0  0  0  0   0   0   0  0  2  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7386144
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0691904
│   obj = 2.714834282500158
└   obj_bound = 2.7146304619582224
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1   1   1   1   1   1   9  10  1  1
│      1   1   1   1  10  10   7   5   3   1   1   1  1  1
│     11   1   1   1   1   1   1   1   1   1   1   1  1  1
│      4  21  21  16   1   3   1   1   1   1   1   3  1  1
│      1   1   1   1   4   1  10  12  14  15  10   2  1  1
└      8   1   1   1   1   1   1   1   1   1   1   3  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.4411118
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0368966
│   obj = 2.714834282500158
└   obj_bound = 2.7146376937937724
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2   2   2   2   2   2  10  11  2  2
│      2   2   2   2  11  11   8   6   4   2   2   2  2  2
│     12   2   2   2   2   2   2   2   2   2   2   2  2  2
│      5  22  22  17   2   4   2   2   2   2   2   4  2  2
│      2   2   2   2   5   2  11  13  15  16  11   3  2  2
└      9   2   2   2   2   2   2   2   2   2   2   4  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3745621
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0535412
│   obj = 2.714834282500158
└   obj_bound = 2.7147237622167415
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1270
│   lb = 2.712043428944496
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 736
└   length(nodes) = 1275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146718
└   sum(fire_plans.plans_per_fire) = 56725
┌ Info: Time check
└   time() - start_time = 1459.9809999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1271
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325124
┌ Info: Price and cut time (b-and-b)
└   t = 0.5249786
┌ Info: current bounds
│   node_ix = 1271
│   lb = 2.7120501555366725
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 737
└   length(nodes) = 1275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146865
└   sum(fire_plans.plans_per_fire) = 56762
┌ Info: Time check
└   time() - start_time = 1460.5569999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 568
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306117
┌ Info: Price and cut time (b-and-b)
└   t = 0.5452745
┌ Info: current bounds
│   node_ix = 568
│   lb = 2.7120501555366725
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 738
└   length(nodes) = 1275
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 146943
└   sum(fire_plans.plans_per_fire) = 56795
┌ Info: Time check
└   time() - start_time = 1461.1449999809265
┌ Info: Exploring node
└   branch_and_bound_node.ix = 569
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0334396
┌ Info: Price and cut time (b-and-b)
└   t = 0.4901424
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 569
│   lb = 2.7120501555366725
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 739
└   length(nodes) = 1277
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147002
└   sum(fire_plans.plans_per_fire) = 56819
┌ Info: Time check
└   time() - start_time = 1461.6770000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1276
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028931
┌ Info: Price and cut time (b-and-b)
└   t = 1.0962391
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1276
│   lb = 2.7120501555366725
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 740
└   length(nodes) = 1279
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147078
└   sum(fire_plans.plans_per_fire) = 56858
┌ Info: Time check
└   time() - start_time = 1462.8239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1277
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326507
┌ Info: Price and cut time (b-and-b)
└   t = 0.324718
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1277
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0  0  0  0  0   0   0  7  15  1  0  0
│      0   0   0  9  6  6  6   3   0  0   0  0  0  0
│     10   0   0  0  0  0  0   0   0  0   0  0  0  0
│      5  20  20  0  0  0  0   0   0  0   1  2  0  0
│      0   0   0  6  5  5  9  12  15  8   1  0  0  0
└      5   0   0  0  1  0  0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4272228
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1399925
│   obj = 2.714834282500158
└   obj_bound = 2.7146545106934354
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1  8  16  2  1  1
│      1   1   1  10  7  7   7   4   1  1   1  1  1  1
│     11   1   1   1  1  1   1   1   1  1   1  1  1  1
│      6  21  21   1  1  1   1   1   1  1   2  3  1  1
│      1   1   1   7  6  6  10  13  16  9   2  1  1  1
└      6   1   1   1  2  1   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2875828
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1732647
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   9  17  3  2  2
│      2   2   2  11  8  8   8   5   2   2   2  2  2  2
│     12   2   2   2  2  2   2   2   2   2   2  2  2  2
│      7  22  22   2  2  2   2   2   2   2   3  4  2  2
│      2   2   2   8  7  7  11  14  17  10   3  2  2  2
└      7   2   2   2  3  2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 13, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8119476
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.241362
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1277
│   lb = 2.7120541540784973
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 741
└   length(nodes) = 1279
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147526
└   sum(fire_plans.plans_per_fire) = 57088
┌ Info: Time check
└   time() - start_time = 1466.8580000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1052
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276488
┌ Info: Price and cut time (b-and-b)
└   t = 0.7095464
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1052
│   lb = 2.7120541540784973
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 742
└   length(nodes) = 1281
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147547
└   sum(fire_plans.plans_per_fire) = 57109
┌ Info: Time check
└   time() - start_time = 1467.6099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1053
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289597
┌ Info: Price and cut time (b-and-b)
└   t = 0.2473186
┌ Info: current bounds
│   node_ix = 1053
│   lb = 2.712054154078498
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 743
└   length(nodes) = 1281
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147582
└   sum(fire_plans.plans_per_fire) = 57125
┌ Info: Time check
└   time() - start_time = 1467.904000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1054
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315861
┌ Info: Price and cut time (b-and-b)
└   t = 1.0693959
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1054
│   lb = 2.712054154078498
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 744
└   length(nodes) = 1283
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147644
└   sum(fire_plans.plans_per_fire) = 57155
┌ Info: Time check
└   time() - start_time = 1469.026999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1055
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319445
┌ Info: Price and cut time (b-and-b)
└   t = 0.7478231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1055
│   lb = 2.712066383691752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 745
└   length(nodes) = 1285
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 147667
└   sum(fire_plans.plans_per_fire) = 57174
┌ Info: Time check
└   time() - start_time = 1469.8180000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 872
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269684
┌ Info: Price and cut time (b-and-b)
└   t = 1.2623252
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 872
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0   0   0   0   8  9  0  0
│      0   0   0   0  6  5  12   3   4   0   0  0  0  0
│     10   0   0   0  0  0   0   0   0   0   0  0  0  0
│      3  20  20  15  0  0   0   2   0   0   0  2  0  0
│      0   0   0   0  6  6   3  10  11  14  10  1  0  0
└      7   0   0   0  0  0   0   0   0   0   0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8034371
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.064216
│   obj = 2.714834282500158
└   obj_bound = 2.714596308676846
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1   9  10  1  1
│      1   1   1   1  7  6  13   4   5   1   1   1  1  1
│     11   1   1   1  1  1   1   1   1   1   1   1  1  1
│      4  21  21  16  1  1   1   3   1   1   1   3  1  1
│      1   1   1   1  7  7   4  11  12  15  11   2  1  1
└      8   1   1   1  1  1   1   1   1   1   1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5219925
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0312477
│   obj = 2.714834282500158
└   obj_bound = 2.7146585639595293
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  11  2  2
│      2   2   2   2  8  7  14   5   6   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   4   2   2   2   4  2  2
│      2   2   2   2  8  8   5  12  13  16  12   3  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1507727
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0551297
│   obj = 2.714834282500158
└   obj_bound = 2.7148341386528325
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 872
│   lb = 2.712066383691752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 746
└   length(nodes) = 1287
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148508
└   sum(fire_plans.plans_per_fire) = 57485
┌ Info: Time check
└   time() - start_time = 1475.2939999103546
┌ Info: Exploring node
└   branch_and_bound_node.ix = 873
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280807
┌ Info: Price and cut time (b-and-b)
└   t = 0.9818462
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 873
│   lb = 2.712066383691752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 747
└   length(nodes) = 1289
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148605
└   sum(fire_plans.plans_per_fire) = 57527
┌ Info: Time check
└   time() - start_time = 1476.3079998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1288
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297107
┌ Info: Price and cut time (b-and-b)
└   t = 0.7772
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1288
│   lb = 2.712066383691752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 748
└   length(nodes) = 1291
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148747
└   sum(fire_plans.plans_per_fire) = 57558
┌ Info: Time check
└   time() - start_time = 1477.1459999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1289
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029688
┌ Info: Price and cut time (b-and-b)
└   t = 1.0172674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1289
│   lb = 2.7120663836917527
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 749
└   length(nodes) = 1293
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148796
└   sum(fire_plans.plans_per_fire) = 57585
┌ Info: Time check
└   time() - start_time = 1478.1959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 866
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278776
┌ Info: Price and cut time (b-and-b)
└   t = 0.8211689
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 866
│   lb = 2.7120663836917527
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 750
└   length(nodes) = 1295
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 148884
└   sum(fire_plans.plans_per_fire) = 57614
┌ Info: Time check
└   time() - start_time = 1479.0750000476837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1294
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257495
┌ Info: Price and cut time (b-and-b)
└   t = 0.7408572
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 11, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1294
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   0  8  10  0  0
│      0   0   0   0  7  5  11  7   3   0  0   0  0  0
│     10   0   0   0  0  0   0  0   0   0  0   0  0  0
│      3  20  20  15  0  0   0  0   0   0  2   2  0  0
│      0   0   0   0  6  6   5  9  12  14  8   0  0  0
└      7   0   0   0  0  0   0  0   0   0  0   2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6214342
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0607683
│   obj = 2.714834282500158
└   obj_bound = 2.7145668401899457
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   1  9  11  1  1
│      1   1   1   1  8  6  12   8   4   1  1   1  1  1
│     11   1   1   1  1  1   1   1   1   1  1   1  1  1
│      4  21  21  16  1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  7  7   6  10  13  15  9   1  1  1
└      8   1   1   1  1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8570925
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.040747
│   obj = 2.714834282500158
└   obj_bound = 2.714566840190791
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   2  10  12  2  2
│      2   2   2   2  9  7  13   9   5   2   2   2  2  2
│     12   2   2   2  2  2   2   2   2   2   2   2  2  2
│      5  22  22  17  2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  8  8   7  11  14  16  10   2  2  2
└      9   2   2   2  2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(5, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9534015
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0912473
│   obj = 2.714834282500158
└   obj_bound = 2.7145846796007373
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1294
│   lb = 2.7120663836917527
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 751
└   length(nodes) = 1297
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149377
└   sum(fire_plans.plans_per_fire) = 57912
┌ Info: Time check
└   time() - start_time = 1484.055999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1295
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029481
┌ Info: Price and cut time (b-and-b)
└   t = 1.2062562
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1295
│   lb = 2.7120663836917527
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 752
└   length(nodes) = 1299
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149425
└   sum(fire_plans.plans_per_fire) = 57949
┌ Info: Time check
└   time() - start_time = 1485.305999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 867
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294487
┌ Info: Price and cut time (b-and-b)
└   t = 1.1860712
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 867
│   lb = 2.7120731109853082
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 753
└   length(nodes) = 1301
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149483
└   sum(fire_plans.plans_per_fire) = 57992
┌ Info: Time check
└   time() - start_time = 1486.5490000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 406
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.035202
┌ Info: Price and cut time (b-and-b)
└   t = 0.7566224
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 406
│   lb = 2.7120731109853082
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 754
└   length(nodes) = 1303
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149609
└   sum(fire_plans.plans_per_fire) = 58023
┌ Info: Time check
└   time() - start_time = 1487.3559999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 407
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025976
┌ Info: Price and cut time (b-and-b)
└   t = 0.7720781
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 407
│   lb = 2.712073110985309
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 755
└   length(nodes) = 1305
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 149805
└   sum(fire_plans.plans_per_fire) = 58051
┌ Info: Time check
└   time() - start_time = 1488.1570000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1302
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276143
┌ Info: Price and cut time (b-and-b)
└   t = 0.6424308
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1302
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0   0  6  15  2  0  0
│      0   0   0   3  6  3  6  9   4  0   0  0  0  0
│     10   0   0   0  0  0  0  0   0  0   0  0  0  0
│      5  20  20   1  0  0  0  0   0  0   0  0  0  0
│      0   0   0  12  5  8  9  6  12  9   1  0  0  0
└      5   0   0   0  1  0  0  0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8061924
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2645275
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825000964
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  3  1  1
│      1   1   1   4  7  4   7  10   5   1   1  1  1  1
│     11   1   1   1  1  1   1   1   1   1   1  1  1  1
│      6  21  21   2  1  1   1   1   1   1   1  1  1  1
│      1   1   1  13  6  9  10   7  13  10   2  1  1  1
└      6   1   1   1  2  1   1   1   1   1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5980179
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1565151
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2   8  17  4  2  2
│      2   2   2   5  8   5   8  11   6   2   2  2  2  2
│     12   2   2   2  2   2   2   2   2   2   2  2  2  2
│      7  22  22   3  2   2   2   2   2   2   2  2  2  2
│      2   2   2  14  7  10  11   8  14  11   3  2  2  2
└      7   2   2   2  3   2   2   2   2   2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.3829671
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1994006
│   obj = 2.714834282500158
└   obj_bound = 2.714787278000016
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1302
│   lb = 2.712073110985309
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 756
└   length(nodes) = 1307
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150217
└   sum(fire_plans.plans_per_fire) = 58348
┌ Info: Time check
└   time() - start_time = 1493.8289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1303
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255805
┌ Info: Price and cut time (b-and-b)
└   t = 0.8023124
┌ Info: current bounds
│   node_ix = 1303
│   lb = 2.7120775008951
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 757
└   length(nodes) = 1307
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150446
└   sum(fire_plans.plans_per_fire) = 58400
┌ Info: Time check
└   time() - start_time = 1494.6679999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 604
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265596
┌ Info: Price and cut time (b-and-b)
└   t = 0.6942514
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 604
│   lb = 2.7120775008951
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 758
└   length(nodes) = 1309
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150526
└   sum(fire_plans.plans_per_fire) = 58432
┌ Info: Time check
└   time() - start_time = 1495.3970000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 605
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0317541
┌ Info: Price and cut time (b-and-b)
└   t = 0.7318544
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 605
│   lb = 2.7120775008951004
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 759
└   length(nodes) = 1311
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150670
└   sum(fire_plans.plans_per_fire) = 58460
┌ Info: Time check
└   time() - start_time = 1496.1859998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1308
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025816
┌ Info: Price and cut time (b-and-b)
└   t = 0.6541044
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1308
│   lb = 2.7120775008951004
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 760
└   length(nodes) = 1313
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 150772
└   sum(fire_plans.plans_per_fire) = 58486
┌ Info: Time check
└   time() - start_time = 1496.87299990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1309
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264362
┌ Info: Price and cut time (b-and-b)
└   t = 1.1167416
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1309
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0  0  0  0  7  14  1  0  0
│      0   0   0   0  6  2  9  7  8  0   0  0  0  0
│     10   3   0   0  0  0  0  0  0  0   0  0  0  0
│      7  17  18   0  0  0  0  0  0  0   0  0  0  0
│      0   0   0  15  5  9  6  9  8  7   2  0  0  0
└      4   1   2   0  1  0  0  0  0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4440498
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0706579
│   obj = 2.714834282500158
└   obj_bound = 2.714591868106614
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1   1   1   1  1  8  15  2  1  1
│      1   1   1   1  7   3  10   8  9  1   1  1  1  1
│     11   4   1   1  1   1   1   1  1  1   1  1  1  1
│      8  18  19   1  1   1   1   1  1  1   1  1  1  1
│      1   1   1  16  6  10   7  10  9  8   3  1  1  1
└      5   2   3   1  2   1   1   1  1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8980817
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1661202
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2   2   2   2   2  9  16  3  2  2
│      2   2   2   2  8   4  11   9  10  2   2  2  2  2
│     12   5   2   2  2   2   2   2   2  2   2  2  2  2
│      9  19  20   2  2   2   2   2   2  2   2  2  2  2
│      2   2   2  17  7  11   8  11  10  9   4  2  2  2
└      6   3   4   2  3   2   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.7842762
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2000217
│   obj = 2.714834282500158
└   obj_bound = 2.714834282500158
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1309
│   lb = 2.71208384176521
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 761
└   length(nodes) = 1315
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151299
└   sum(fire_plans.plans_per_fire) = 58700
┌ Info: Time check
└   time() - start_time = 1501.1789999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 518
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0247672
┌ Info: Price and cut time (b-and-b)
└   t = 0.5689812
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 518
│   lb = 2.71208384176521
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 762
└   length(nodes) = 1317
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151403
└   sum(fire_plans.plans_per_fire) = 58726
┌ Info: Time check
└   time() - start_time = 1501.7909998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 519
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0338739
┌ Info: Price and cut time (b-and-b)
└   t = 0.8829702
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 519
│   lb = 2.7120838417652102
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 763
└   length(nodes) = 1319
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151615
└   sum(fire_plans.plans_per_fire) = 58763
┌ Info: Time check
└   time() - start_time = 1502.7269999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1316
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293679
┌ Info: Price and cut time (b-and-b)
└   t = 1.1250918
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1316
│   lb = 2.7120838417652102
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 764
└   length(nodes) = 1321
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151769
└   sum(fire_plans.plans_per_fire) = 58804
┌ Info: Time check
└   time() - start_time = 1503.8919999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1317
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319415
┌ Info: Price and cut time (b-and-b)
└   t = 0.819513
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1317
│   lb = 2.7120870949003577
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 765
└   length(nodes) = 1323
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 151865
└   sum(fire_plans.plans_per_fire) = 58834
┌ Info: Time check
└   time() - start_time = 1504.7620000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 892
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274982
┌ Info: Price and cut time (b-and-b)
└   t = 0.6556873
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 892
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  6  15  1  0  0
│     0   0   0   0  7  6  6  6   6  0   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   0  15  5  5  9  9  10  9   1  0  0  0
└     4   1   2   0  1  1  0  0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6097623
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0709842
│   obj = 2.7148342825001577
└   obj_bound = 2.7145722242503423
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  2  1  1
│      1   1   1   1  8  7   7   7   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  16  6  6  10  10  11  10   2  1  1  1
└      5   2   3   1  2  2   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.5145462
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1347591
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  3  2  2
│      2   2   2   2  9  8   8   8   8   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  7  11  11  12  11   3  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0525084
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1882859
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 892
│   lb = 2.7120870949003577
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 766
└   length(nodes) = 1325
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152264
└   sum(fire_plans.plans_per_fire) = 59042
┌ Info: Time check
└   time() - start_time = 1509.5839998722076
┌ Info: Exploring node
└   branch_and_bound_node.ix = 893
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280253
┌ Info: Price and cut time (b-and-b)
└   t = 0.8443024
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 893
│   lb = 2.7120913331197336
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 767
└   length(nodes) = 1327
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152406
└   sum(fire_plans.plans_per_fire) = 59070
┌ Info: Time check
└   time() - start_time = 1510.4789998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1128
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.146701
┌ Info: Price and cut time (b-and-b)
└   t = 1.109114
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1128
│   lb = 2.7120913331197336
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 768
└   length(nodes) = 1329
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152533
└   sum(fire_plans.plans_per_fire) = 59111
┌ Info: Time check
└   time() - start_time = 1511.74799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1129
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265552
┌ Info: Price and cut time (b-and-b)
└   t = 0.6843166
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1129
│   lb = 2.712092405763192
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 769
└   length(nodes) = 1331
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152598
└   sum(fire_plans.plans_per_fire) = 59134
┌ Info: Time check
└   time() - start_time = 1512.470999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 860
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293839
┌ Info: Price and cut time (b-and-b)
└   t = 0.9628344
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 860
│   lb = 2.712092405763192
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 770
└   length(nodes) = 1333
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 152665
└   sum(fire_plans.plans_per_fire) = 59171
┌ Info: Time check
└   time() - start_time = 1513.4749999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 861
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277841
┌ Info: Price and cut time (b-and-b)
└   t = 0.7564621
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 861
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0   0   0   0  7  15  1  0  0
│     0   0   0   0  3  6  12   5   5  1   0  0  0  0
│     9   2   0   0  0  0   0   0   0  0   0  0  0  0
│     7  17  18   0  0  0   0   0   0  0   0  0  0  0
│     0   0   1  15  9  5   3  11  11  7   1  0  0  0
└     4   1   2   0  1  1   0   0   0  0   2  0  0  0
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.4252438
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0860697
│   obj = 2.714834282500158
└   obj_bound = 2.71464369890326
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1  8  16  2  1  1
│      1   1   1   1   4  7  13   6   6  2   1  1  1  1
│     10   3   1   1   1  1   1   1   1  1   1  1  1  1
│      8  18  19   1   1  1   1   1   1  1   1  1  1  1
│      1   1   2  16  10  6   4  12  12  8   2  1  1  1
└      5   2   3   1   2  2   1   1   1  1   3  1  1  1
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.0635909
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2229118
│   obj = 2.7148342825001577
└   obj_bound = 2.714608736531301
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2  9  17  3  2  2
│      2   2   2   2   5  8  14   7   7  3   2  2  2  2
│     11   4   2   2   2  2   2   2   2  2   2  2  2  2
│      9  19  20   2   2  2   2   2   2  2   2  2  2  2
│      2   2   3  17  11  7   5  13  13  9   3  2  2  2
└      6   3   4   2   3  3   2   2   2  2   4  2  2  2
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.8052265
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2107765
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 861
│   lb = 2.712095118078509
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 771
└   length(nodes) = 1333
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153194
└   sum(fire_plans.plans_per_fire) = 59376
┌ Info: Time check
└   time() - start_time = 1517.6289999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 896
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261219
┌ Info: Price and cut time (b-and-b)
└   t = 0.2276295
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(1, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(1, 3, 1, true)
┌ Info: current bounds
│   node_ix = 896
│   lb = 2.712095118078509
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 772
└   length(nodes) = 1335
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153214
└   sum(fire_plans.plans_per_fire) = 59383
┌ Info: Time check
└   time() - start_time = 1517.909999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 897
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270238
┌ Info: Price and cut time (b-and-b)
└   t = 0.214165
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 897
│   lb = 2.7120971666039044
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 773
└   length(nodes) = 1337
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153220
└   sum(fire_plans.plans_per_fire) = 59392
┌ Info: Time check
└   time() - start_time = 1518.1619999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1334
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0346641
┌ Info: Price and cut time (b-and-b)
└   t = 0.1926043
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(16, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(16, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1334
│   lb = 2.7120971666039044
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 774
└   length(nodes) = 1339
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153242
└   sum(fire_plans.plans_per_fire) = 59398
┌ Info: Time check
└   time() - start_time = 1518.4070000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1335
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320912
┌ Info: Price and cut time (b-and-b)
└   t = 0.136146
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1335
│   lb = 2.712098366603905
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 775
└   length(nodes) = 1341
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153248
└   sum(fire_plans.plans_per_fire) = 59404
┌ Info: Time check
└   time() - start_time = 1518.5999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1340
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311823
┌ Info: Price and cut time (b-and-b)
└   t = 0.6338333
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1340
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  6  15  1  0  0
│     0   0   0   0  7  7  7  7   6  0   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   0  15  5  5  9  9  10  9   1  0  0  0
└     5   2   2   0  2  1  0  0   0  0   3  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.513006
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0673719
│   obj = 2.7148342825001577
└   obj_bound = 2.714566225442845
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  2  1  1
│      1   1   1   1  8  8   8   8   7   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  16  6  6  10  10  11  10   2  1  1  1
└      6   3   3   1  3  2   1   1   1   1   4  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.520794
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1540443
│   obj = 2.7148342825001577
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  3  2  2
│      2   2   2   2  9  9   9   9   8   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  7  11  11  12  11   3  2  2  2
└      7   4   4   2  4  3   2   2   2   2   5  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, true)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.1889785
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.2166373
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.7148342825001577
┌ Info: current bounds
│   node_ix = 1340
│   lb = 2.712098366603905
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 776
└   length(nodes) = 1343
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153279
└   sum(fire_plans.plans_per_fire) = 59608
┌ Info: Time check
└   time() - start_time = 1523.4479999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1341
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0255865
┌ Info: Price and cut time (b-and-b)
└   t = 0.9584535
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1341
│   lb = 2.712098739616176
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 777
└   length(nodes) = 1345
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153285
└   sum(fire_plans.plans_per_fire) = 59640
┌ Info: Time check
└   time() - start_time = 1524.4519999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1338
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1191904
┌ Info: Price and cut time (b-and-b)
└   t = 0.1729463
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1338
│   lb = 2.712098739616176
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 778
└   length(nodes) = 1347
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153314
└   sum(fire_plans.plans_per_fire) = 59647
┌ Info: Time check
└   time() - start_time = 1524.7590000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1339
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287427
┌ Info: Price and cut time (b-and-b)
└   t = 0.177196
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1339
│   lb = 2.712100726122312
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 779
└   length(nodes) = 1349
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153320
└   sum(fire_plans.plans_per_fire) = 59654
┌ Info: Time check
└   time() - start_time = 1524.9800000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1346
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290504
┌ Info: Price and cut time (b-and-b)
└   t = 0.7064546
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1346
│   lb = 2.712100726122312
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 780
└   length(nodes) = 1351
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153389
└   sum(fire_plans.plans_per_fire) = 59680
┌ Info: Time check
└   time() - start_time = 1525.7249999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1347
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279325
┌ Info: Price and cut time (b-and-b)
└   t = 1.0458568
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1347
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│     0   0   0   0  0  0  0  0   0  6  15  1  0  0
│     0   0   0   0  6  6  6  9   3  0   0  0  0  0
│     9   2   0   0  0  0  0  0   0  0   0  0  0  0
│     7  17  18   0  0  0  0  0   0  0   0  0  0  0
│     0   0   0  15  5  5  9  6  12  9   1  0  0  0
└     4   1   2   0  1  1  0  0   0  0   2  0  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(16, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6258559
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0722888
│   obj = 2.714834282500158
└   obj_bound = 2.714581718124392
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1  1  1   1   1   1   7  16  2  1  1
│      1   1   1   1  7  7   7  10   4   1   1  1  1  1
│     10   3   1   1  1  1   1   1   1   1   1  1  1  1
│      8  18  19   1  1  1   1   1   1   1   1  1  1  1
│      1   1   1  16  6  6  10   7  13  10   2  1  1  1
└      5   2   3   1  2  2   1   1   1   1   3  1  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(16, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.6722354
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1419426
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2  2  2   2   2   2   8  17  3  2  2
│      2   2   2   2  8  8   8  11   5   2   2  2  2  2
│     11   4   2   2  2  2   2   2   2   2   2  2  2  2
│      9  19  20   2  2  2   2   2   2   2   2  2  2  2
│      2   2   2  17  7  7  11   8  14  11   3  2  2  2
└      6   3   4   2  3  3   2   2   2   2   4  2  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(14, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(13, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(1, 3, 1, false)
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(16, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.6773275
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.1693293
│   obj = 2.714834282500158
└   obj_bound = 2.7148342825001577
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1347
│   lb = 2.712101814374321
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 781
└   length(nodes) = 1353
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153919
└   sum(fire_plans.plans_per_fire) = 59898
┌ Info: Time check
└   time() - start_time = 1530.7549998760223
┌ Info: Exploring node
└   branch_and_bound_node.ix = 724
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276993
┌ Info: Price and cut time (b-and-b)
└   t = 1.1172091
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 724
│   lb = 2.712101814374321
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 782
└   length(nodes) = 1355
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 153964
└   sum(fire_plans.plans_per_fire) = 59933
┌ Info: Time check
└   time() - start_time = 1531.9059998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 725
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287795
┌ Info: Price and cut time (b-and-b)
└   t = 1.0413115
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 725
│   lb = 2.712114816601934
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 783
└   length(nodes) = 1357
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154145
└   sum(fire_plans.plans_per_fire) = 59977
┌ Info: Time check
└   time() - start_time = 1533.0030000209808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1324
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288501
┌ Info: Price and cut time (b-and-b)
└   t = 1.3114757
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1324
│   lb = 2.712114816601934
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 784
└   length(nodes) = 1359
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154222
└   sum(fire_plans.plans_per_fire) = 60016
┌ Info: Time check
└   time() - start_time = 1534.361999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1325
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0320446
┌ Info: Price and cut time (b-and-b)
└   t = 0.7920197
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1325
│   lb = 2.712116070124111
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 785
└   length(nodes) = 1361
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154273
└   sum(fire_plans.plans_per_fire) = 60040
┌ Info: Time check
└   time() - start_time = 1535.2070000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1262
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274177
┌ Info: Price and cut time (b-and-b)
└   t = 0.6841457
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1262
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing route best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
[ Info: pushing plan best sol
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      0   0   0   0  0  0   0  0   0   0  8  9  0  0
│      0   0   0   0  3  6  10  9   2   0  0  0  0  0
│     10   0   0   0  0  0   0  0   0   0  0  0  0  0
│      3  20  20  15  0  0   0  0   0   0  2  2  0  0
│      0   0   0   0  9  5   5  6  13  14  8  1  0  0
└      7   0   0   0  0  0   0  0   0   0  0  2  0  0
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 0.9403976
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0699571
│   obj = 2.714834282500158
└   obj_bound = 2.714592666787212
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      1   1   1   1   1  1   1   1   1   1  9  10  1  1
│      1   1   1   1   4  7  11  10   3   1  1   1  1  1
│     11   1   1   1   1  1   1   1   1   1  1   1  1  1
│      4  21  21  16   1  1   1   1   1   1  3   3  1  1
│      1   1   1   1  10  6   6   7  14  15  9   2  1  1
└      8   1   1   1   1  1   1   1   1   1  1   3  1  1
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.8684576
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0562012
│   obj = 2.714834282500158
└   obj_bound = 2.7146296991695302
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    6×14 Matrix{Int64}:
│      2   2   2   2   2  2   2   2   2   2  10  11  2  2
│      2   2   2   2   5  8  12  11   4   2   2   2  2  2
│     12   2   2   2   2  2   2   2   2   2   2   2  2  2
│      5  22  22  17   2  2   2   2   2   2   4   4  2  2
│      2   2   2   2  11  7   7   8  15  16  10   3  2  2
└      9   2   2   2   2  2   2   2   2   2   2   4  2  2
┌ Info: crew rule
└   rule = CrewSupplyBranchingRule(7, 3, 1, false)
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
┌ Info: fire rule
└   rule = FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
┌ Info: Price and cut time (heuristic)
└   t = 1.2192706
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0704267
│   obj = 2.714834282500158
└   obj_bound = 2.714702718791132
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 2.714834282500158
┌ Info: current bounds
│   node_ix = 1262
│   lb = 2.712116070124111
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 786
└   length(nodes) = 1363
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154819
└   sum(fire_plans.plans_per_fire) = 60346
┌ Info: Time check
└   time() - start_time = 1540.8259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1263
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.037084
┌ Info: Price and cut time (b-and-b)
└   t = 0.8791743
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1263
│   lb = 2.7121181061610073
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 787
└   length(nodes) = 1365
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154860
└   sum(fire_plans.plans_per_fire) = 60369
┌ Info: Time check
└   time() - start_time = 1541.7579998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 524
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305406
┌ Info: Price and cut time (b-and-b)
└   t = 0.6212195
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 524
│   lb = 2.7121181061610073
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 788
└   length(nodes) = 1367
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 154880
└   sum(fire_plans.plans_per_fire) = 60394
┌ Info: Time check
└   time() - start_time = 1542.4340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 525
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.031313
┌ Info: Price and cut time (b-and-b)
└   t = 0.7549816
┌ Info: current bounds
│   node_ix = 525
│   lb = 2.7121209604824763
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 789
└   length(nodes) = 1367
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155047
└   sum(fire_plans.plans_per_fire) = 60439
┌ Info: Time check
└   time() - start_time = 1543.2279999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1336
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325886
┌ Info: Price and cut time (b-and-b)
└   t = 0.646229
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1336
│   lb = 2.7121209604824763
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 790
└   length(nodes) = 1369
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155053
└   sum(fire_plans.plans_per_fire) = 60465
┌ Info: Time check
└   time() - start_time = 1543.9300000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1337
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248967
┌ Info: Price and cut time (b-and-b)
└   t = 0.8732102
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(16, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(16, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1337
│   lb = 2.7121209604824768
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 791
└   length(nodes) = 1371
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155059
└   sum(fire_plans.plans_per_fire) = 60499
┌ Info: Time check
└   time() - start_time = 1544.8399999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1368
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282719
┌ Info: Price and cut time (b-and-b)
└   t = 1.2176927
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1368
│   lb = 2.7121209604824768
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 792
└   length(nodes) = 1373
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155065
└   sum(fire_plans.plans_per_fire) = 60540
┌ Info: Time check
└   time() - start_time = 1546.1019999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1369
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262141
┌ Info: Price and cut time (b-and-b)
└   t = 0.7918681
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1369
│   lb = 2.712121053933448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 793
└   length(nodes) = 1375
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155071
└   sum(fire_plans.plans_per_fire) = 60564
┌ Info: Time check
└   time() - start_time = 1546.9340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 954
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026031
┌ Info: Price and cut time (b-and-b)
└   t = 0.5243741
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 954
│   lb = 2.712121053933448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 794
└   length(nodes) = 1377
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155121
└   sum(fire_plans.plans_per_fire) = 60590
┌ Info: Time check
└   time() - start_time = 1547.5120000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 955
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291976
┌ Info: Price and cut time (b-and-b)
└   t = 0.7826203
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 955
│   lb = 2.712121053933448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 795
└   length(nodes) = 1379
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155285
└   sum(fire_plans.plans_per_fire) = 60621
┌ Info: Time check
└   time() - start_time = 1548.3289999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1376
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.03109
┌ Info: Price and cut time (b-and-b)
└   t = 0.9134687
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1376
│   lb = 2.712121053933448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 796
└   length(nodes) = 1381
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155383
└   sum(fire_plans.plans_per_fire) = 60665
┌ Info: Time check
└   time() - start_time = 1549.284999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1377
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233025
┌ Info: Price and cut time (b-and-b)
└   t = 0.9359269
┌ Info: current bounds
│   node_ix = 1377
│   lb = 2.7121225890625387
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 797
└   length(nodes) = 1381
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155523
└   sum(fire_plans.plans_per_fire) = 60697
┌ Info: Time check
└   time() - start_time = 1550.2669999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 702
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260293
┌ Info: Price and cut time (b-and-b)
└   t = 0.7522088
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 702
│   lb = 2.7121225890625387
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 798
└   length(nodes) = 1383
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155591
└   sum(fire_plans.plans_per_fire) = 60727
┌ Info: Time check
└   time() - start_time = 1551.0620000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 703
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257945
┌ Info: Price and cut time (b-and-b)
└   t = 1.0728717
┌ Info: current bounds
│   node_ix = 703
│   lb = 2.712126088305481
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 799
└   length(nodes) = 1383
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155810
└   sum(fire_plans.plans_per_fire) = 60786
┌ Info: Time check
└   time() - start_time = 1552.1640000343323
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1342
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273444
┌ Info: Price and cut time (b-and-b)
└   t = 0.8466299
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1342
│   lb = 2.712126088305481
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 800
└   length(nodes) = 1385
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155816
└   sum(fire_plans.plans_per_fire) = 60815
┌ Info: Time check
└   time() - start_time = 1553.0659999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1343
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0253871
┌ Info: Price and cut time (b-and-b)
└   t = 0.8603967
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1343
│   lb = 2.7121284478238876
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 801
└   length(nodes) = 1387
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155822
└   sum(fire_plans.plans_per_fire) = 60840
┌ Info: Time check
└   time() - start_time = 1553.9670000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1350
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0232703
┌ Info: Price and cut time (b-and-b)
└   t = 1.3755029
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1350
│   lb = 2.7121284478238876
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 802
└   length(nodes) = 1389
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 155941
└   sum(fire_plans.plans_per_fire) = 60880
┌ Info: Time check
└   time() - start_time = 1555.3769998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1351
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324878
┌ Info: Price and cut time (b-and-b)
└   t = 0.6977722
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1351
│   lb = 2.7121364258906304
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 803
└   length(nodes) = 1391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156002
└   sum(fire_plans.plans_per_fire) = 60904
┌ Info: Time check
└   time() - start_time = 1556.125
┌ Info: Exploring node
└   branch_and_bound_node.ix = 942
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280234
┌ Info: Price and cut time (b-and-b)
└   t = 0.5217626
┌ Info: current bounds
│   node_ix = 942
│   lb = 2.7121364258906304
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 804
└   length(nodes) = 1391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156045
└   sum(fire_plans.plans_per_fire) = 60928
┌ Info: Time check
└   time() - start_time = 1556.6870000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 943
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270401
┌ Info: Price and cut time (b-and-b)
└   t = 0.8188344
┌ Info: current bounds
│   node_ix = 943
│   lb = 2.7121441963202693
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 805
└   length(nodes) = 1391
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156277
└   sum(fire_plans.plans_per_fire) = 60984
┌ Info: Time check
└   time() - start_time = 1557.5550000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1212
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248516
┌ Info: Price and cut time (b-and-b)
└   t = 0.8291178
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1212
│   lb = 2.7121441963202693
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 806
└   length(nodes) = 1393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156350
└   sum(fire_plans.plans_per_fire) = 61011
┌ Info: Time check
└   time() - start_time = 1558.4210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1213
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0250328
┌ Info: Price and cut time (b-and-b)
└   t = 0.7630004
┌ Info: current bounds
│   node_ix = 1213
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 807
└   length(nodes) = 1393
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156503
└   sum(fire_plans.plans_per_fire) = 61044
┌ Info: Time check
└   time() - start_time = 1559.2289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 756
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316711
┌ Info: Price and cut time (b-and-b)
└   t = 0.1537916
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 756
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 808
└   length(nodes) = 1395
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156523
└   sum(fire_plans.plans_per_fire) = 61051
┌ Info: Time check
└   time() - start_time = 1559.4289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 757
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313848
┌ Info: Price and cut time (b-and-b)
└   t = 0.2186062
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 757
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 809
└   length(nodes) = 1397
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156544
└   sum(fire_plans.plans_per_fire) = 61059
┌ Info: Time check
└   time() - start_time = 1559.6829998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1396
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270131
┌ Info: Price and cut time (b-and-b)
└   t = 1.2087679
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1396
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 810
└   length(nodes) = 1399
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156694
└   sum(fire_plans.plans_per_fire) = 61101
┌ Info: Time check
└   time() - start_time = 1560.9400000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1397
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297468
┌ Info: Price and cut time (b-and-b)
└   t = 1.1614992
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1397
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 811
└   length(nodes) = 1401
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156854
└   sum(fire_plans.plans_per_fire) = 61140
┌ Info: Time check
└   time() - start_time = 1562.1499998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1394
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328179
┌ Info: Price and cut time (b-and-b)
└   t = 1.4244021
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1394
│   lb = 2.7121451175863345
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 812
└   length(nodes) = 1403
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 156984
└   sum(fire_plans.plans_per_fire) = 61186
┌ Info: Time check
└   time() - start_time = 1563.6370000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1395
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267083
┌ Info: Price and cut time (b-and-b)
└   t = 0.6925844
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1395
│   lb = 2.7121463871927904
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 813
└   length(nodes) = 1405
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157062
└   sum(fire_plans.plans_per_fire) = 61211
┌ Info: Time check
└   time() - start_time = 1564.3719999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1102
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269483
┌ Info: Price and cut time (b-and-b)
└   t = 1.5576422
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1102
│   lb = 2.7121463871927904
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 814
└   length(nodes) = 1407
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157152
└   sum(fire_plans.plans_per_fire) = 61264
┌ Info: Time check
└   time() - start_time = 1565.9609999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1103
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288025
┌ Info: Price and cut time (b-and-b)
└   t = 1.3822715
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1103
│   lb = 2.7121522881675153
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 815
└   length(nodes) = 1409
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157257
└   sum(fire_plans.plans_per_fire) = 61310
┌ Info: Time check
└   time() - start_time = 1567.4849998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 810
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0237305
┌ Info: Price and cut time (b-and-b)
└   t = 0.6686934
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 810
│   lb = 2.7121522881675153
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 816
└   length(nodes) = 1411
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157307
└   sum(fire_plans.plans_per_fire) = 61333
┌ Info: Time check
└   time() - start_time = 1568.1900000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 811
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289514
┌ Info: Price and cut time (b-and-b)
└   t = 0.9820647
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 811
│   lb = 2.7121547618552
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 817
└   length(nodes) = 1413
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157483
└   sum(fire_plans.plans_per_fire) = 61374
┌ Info: Time check
└   time() - start_time = 1569.223000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 650
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02719
┌ Info: Price and cut time (b-and-b)
└   t = 0.6673717
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 650
│   lb = 2.7121547618552
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 818
└   length(nodes) = 1415
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157559
└   sum(fire_plans.plans_per_fire) = 61396
┌ Info: Time check
└   time() - start_time = 1569.9219999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 651
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302714
┌ Info: Price and cut time (b-and-b)
└   t = 0.7568379
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 651
│   lb = 2.712156073545419
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 819
└   length(nodes) = 1417
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157679
└   sum(fire_plans.plans_per_fire) = 61422
┌ Info: Time check
└   time() - start_time = 1570.7349998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1382
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0358535
┌ Info: Price and cut time (b-and-b)
└   t = 0.8083378
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1382
│   lb = 2.712156073545419
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 820
└   length(nodes) = 1419
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157750
└   sum(fire_plans.plans_per_fire) = 61448
┌ Info: Time check
└   time() - start_time = 1571.5910000801086
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1383
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258644
┌ Info: Price and cut time (b-and-b)
└   t = 1.0262528
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1383
│   lb = 2.712156152030993
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 821
└   length(nodes) = 1421
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157881
└   sum(fire_plans.plans_per_fire) = 61484
┌ Info: Time check
└   time() - start_time = 1572.6719999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1232
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273576
┌ Info: Price and cut time (b-and-b)
└   t = 1.1222243
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1232
│   lb = 2.712156152030993
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 822
└   length(nodes) = 1423
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 157976
└   sum(fire_plans.plans_per_fire) = 61526
┌ Info: Time check
└   time() - start_time = 1573.8280000686646
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1233
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303997
┌ Info: Price and cut time (b-and-b)
└   t = 0.8704942
┌ Info: current bounds
│   node_ix = 1233
│   lb = 2.712156152030993
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 823
└   length(nodes) = 1423
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158136
└   sum(fire_plans.plans_per_fire) = 61559
┌ Info: Time check
└   time() - start_time = 1574.7469999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1236
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.033289
┌ Info: Price and cut time (b-and-b)
└   t = 0.8535203
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1236
│   lb = 2.712156152030993
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 824
└   length(nodes) = 1425
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158190
└   sum(fire_plans.plans_per_fire) = 61589
┌ Info: Time check
└   time() - start_time = 1575.6529998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1237
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307224
┌ Info: Price and cut time (b-and-b)
└   t = 0.9721979
┌ Info: current bounds
│   node_ix = 1237
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 825
└   length(nodes) = 1425
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158348
└   sum(fire_plans.plans_per_fire) = 61627
┌ Info: Time check
└   time() - start_time = 1576.6719999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 642
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271563
┌ Info: Price and cut time (b-and-b)
└   t = 0.1848499
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 642
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 826
└   length(nodes) = 1427
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158370
└   sum(fire_plans.plans_per_fire) = 61633
┌ Info: Time check
└   time() - start_time = 1576.9010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1426
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0314232
┌ Info: Price and cut time (b-and-b)
└   t = 0.8059892
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1426
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 827
└   length(nodes) = 1429
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158436
└   sum(fire_plans.plans_per_fire) = 61659
┌ Info: Time check
└   time() - start_time = 1577.7599999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1427
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257471
┌ Info: Price and cut time (b-and-b)
└   t = 0.1790371
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1427
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 828
└   length(nodes) = 1431
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158457
└   sum(fire_plans.plans_per_fire) = 61665
┌ Info: Time check
└   time() - start_time = 1577.9879999160767
┌ Info: Exploring node
└   branch_and_bound_node.ix = 643
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0370116
┌ Info: Price and cut time (b-and-b)
└   t = 0.1771554
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 643
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 829
└   length(nodes) = 1433
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158478
└   sum(fire_plans.plans_per_fire) = 61671
┌ Info: Time check
└   time() - start_time = 1578.2149999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1432
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319966
┌ Info: Price and cut time (b-and-b)
└   t = 0.9879447
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1432
│   lb = 2.71215999704646
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 830
└   length(nodes) = 1435
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158552
└   sum(fire_plans.plans_per_fire) = 61702
┌ Info: Time check
└   time() - start_time = 1579.2539999485016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1433
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0317878
┌ Info: Price and cut time (b-and-b)
└   t = 0.1424014
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1433
│   lb = 2.7121615538304473
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 831
└   length(nodes) = 1437
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158572
└   sum(fire_plans.plans_per_fire) = 61708
┌ Info: Time check
└   time() - start_time = 1579.4539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1030
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256268
┌ Info: Price and cut time (b-and-b)
└   t = 0.9874974
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1030
│   lb = 2.7121615538304473
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 832
└   length(nodes) = 1439
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158645
└   sum(fire_plans.plans_per_fire) = 61739
┌ Info: Time check
└   time() - start_time = 1580.473000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1031
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261645
┌ Info: Price and cut time (b-and-b)
└   t = 1.196285
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1031
│   lb = 2.712163549147661
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 833
└   length(nodes) = 1441
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158906
└   sum(fire_plans.plans_per_fire) = 61782
┌ Info: Time check
└   time() - start_time = 1581.7149999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1268
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280253
┌ Info: Price and cut time (b-and-b)
└   t = 0.9123367
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1268
│   lb = 2.712163549147661
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 834
└   length(nodes) = 1443
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 158955
└   sum(fire_plans.plans_per_fire) = 61814
┌ Info: Time check
└   time() - start_time = 1582.680999994278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1269
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266584
┌ Info: Price and cut time (b-and-b)
└   t = 0.6517555
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1269
│   lb = 2.7121751568748675
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 835
└   length(nodes) = 1445
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159089
└   sum(fire_plans.plans_per_fire) = 61849
┌ Info: Time check
└   time() - start_time = 1583.3769998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1282
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    19-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0324705
┌ Info: Price and cut time (b-and-b)
└   t = 0.7141724
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(1, 4, 2, false)
└   right_branching_rule = CrewSupplyBranchingRule(1, 4, 2, true)
┌ Info: current bounds
│   node_ix = 1282
│   lb = 2.7121751568748675
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 836
└   length(nodes) = 1447
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159122
└   sum(fire_plans.plans_per_fire) = 61866
┌ Info: Time check
└   time() - start_time = 1584.1389999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1283
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    19-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0328881
┌ Info: Price and cut time (b-and-b)
└   t = 0.2444616
┌ Info: current bounds
│   node_ix = 1283
│   lb = 2.7121759125932448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 837
└   length(nodes) = 1447
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159154
└   sum(fire_plans.plans_per_fire) = 61879
┌ Info: Time check
└   time() - start_time = 1584.4279999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 766
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297269
┌ Info: Price and cut time (b-and-b)
└   t = 1.0533125
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 766
│   lb = 2.7121759125932448
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 838
└   length(nodes) = 1449
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159266
└   sum(fire_plans.plans_per_fire) = 61914
┌ Info: Time check
└   time() - start_time = 1585.5360000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 767
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266331
┌ Info: Price and cut time (b-and-b)
└   t = 1.1578196
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 767
│   lb = 2.712176250457192
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 839
└   length(nodes) = 1451
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159329
└   sum(fire_plans.plans_per_fire) = 61951
┌ Info: Time check
└   time() - start_time = 1586.7309999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1082
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0245165
┌ Info: Price and cut time (b-and-b)
└   t = 0.6126027
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1082
│   lb = 2.712176250457192
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 840
└   length(nodes) = 1453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159353
└   sum(fire_plans.plans_per_fire) = 61968
┌ Info: Time check
└   time() - start_time = 1587.3929998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1083
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263471
┌ Info: Price and cut time (b-and-b)
└   t = 0.5749723
┌ Info: current bounds
│   node_ix = 1083
│   lb = 2.7121771104273624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 841
└   length(nodes) = 1453
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159404
└   sum(fire_plans.plans_per_fire) = 62003
┌ Info: Time check
└   time() - start_time = 1588.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 620
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0341863
┌ Info: Price and cut time (b-and-b)
└   t = 0.4602612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 620
│   lb = 2.7121771104273624
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 842
└   length(nodes) = 1455
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159448
└   sum(fire_plans.plans_per_fire) = 62020
┌ Info: Time check
└   time() - start_time = 1588.5079998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 621
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0215818
┌ Info: Price and cut time (b-and-b)
└   t = 1.3256189
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 621
│   lb = 2.7121815752925924
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 843
└   length(nodes) = 1457
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159616
└   sum(fire_plans.plans_per_fire) = 62093
┌ Info: Time check
└   time() - start_time = 1589.869999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1176
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0223945
┌ Info: Price and cut time (b-and-b)
└   t = 1.0004865
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1176
│   lb = 2.7121815752925924
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 844
└   length(nodes) = 1459
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159703
└   sum(fire_plans.plans_per_fire) = 62119
┌ Info: Time check
└   time() - start_time = 1590.9340000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1177
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0398235
┌ Info: Price and cut time (b-and-b)
└   t = 1.3945939
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1177
│   lb = 2.7121851444820093
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 845
└   length(nodes) = 1461
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 159945
└   sum(fire_plans.plans_per_fire) = 62169
┌ Info: Time check
└   time() - start_time = 1592.3829998970032
┌ Info: Exploring node
└   branch_and_bound_node.ix = 920
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0439658
┌ Info: Price and cut time (b-and-b)
└   t = 1.1359032
┌ Info: current bounds
│   node_ix = 920
│   lb = 2.7121851444820093
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 846
└   length(nodes) = 1461
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160042
└   sum(fire_plans.plans_per_fire) = 62208
┌ Info: Time check
└   time() - start_time = 1593.5769999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 921
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027438
┌ Info: Price and cut time (b-and-b)
└   t = 1.0056129
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 921
│   lb = 2.712185441277564
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 847
└   length(nodes) = 1463
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160109
└   sum(fire_plans.plans_per_fire) = 62242
┌ Info: Time check
└   time() - start_time = 1594.6259999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 584
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271129
┌ Info: Price and cut time (b-and-b)
└   t = 0.8510683
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 584
│   lb = 2.712185441277564
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 848
└   length(nodes) = 1465
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160193
└   sum(fire_plans.plans_per_fire) = 62277
┌ Info: Time check
└   time() - start_time = 1595.5299999713898
┌ Info: Exploring node
└   branch_and_bound_node.ix = 585
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272328
┌ Info: Price and cut time (b-and-b)
└   t = 1.110574
┌ Info: current bounds
│   node_ix = 585
│   lb = 2.712193810704464
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 849
└   length(nodes) = 1465
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160427
└   sum(fire_plans.plans_per_fire) = 62342
┌ Info: Time check
└   time() - start_time = 1596.6819999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 750
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0325492
┌ Info: Price and cut time (b-and-b)
└   t = 0.9945434
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 750
│   lb = 2.712193810704464
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 850
└   length(nodes) = 1467
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160494
└   sum(fire_plans.plans_per_fire) = 62368
┌ Info: Time check
└   time() - start_time = 1597.7289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 751
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264961
┌ Info: Price and cut time (b-and-b)
└   t = 0.8779579
┌ Info: current bounds
│   node_ix = 751
│   lb = 2.712193810704465
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 851
└   length(nodes) = 1467
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160714
└   sum(fire_plans.plans_per_fire) = 62424
┌ Info: Time check
└   time() - start_time = 1598.6389999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 746
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293858
┌ Info: Price and cut time (b-and-b)
└   t = 0.8760617
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 746
│   lb = 2.712193810704465
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 852
└   length(nodes) = 1469
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160762
└   sum(fire_plans.plans_per_fire) = 62455
┌ Info: Time check
└   time() - start_time = 1599.5659999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 747
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284066
┌ Info: Price and cut time (b-and-b)
└   t = 1.074795
┌ Info: current bounds
│   node_ix = 747
│   lb = 2.7122154738146964
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 853
└   length(nodes) = 1469
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 160970
└   sum(fire_plans.plans_per_fire) = 62512
┌ Info: Time check
└   time() - start_time = 1600.6879999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1112
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264064
┌ Info: Price and cut time (b-and-b)
└   t = 0.6839454
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1112
│   lb = 2.7122154738146964
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 854
└   length(nodes) = 1471
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161011
└   sum(fire_plans.plans_per_fire) = 62530
┌ Info: Time check
└   time() - start_time = 1601.4110000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1113
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281176
┌ Info: Price and cut time (b-and-b)
└   t = 0.9387178
┌ Info: current bounds
│   node_ix = 1113
│   lb = 2.71221940743788
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 855
└   length(nodes) = 1471
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161174
└   sum(fire_plans.plans_per_fire) = 62574
┌ Info: Time check
└   time() - start_time = 1602.3889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 644
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272587
┌ Info: Price and cut time (b-and-b)
└   t = 1.2881745
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 644
│   lb = 2.71221940743788
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 856
└   length(nodes) = 1473
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161291
└   sum(fire_plans.plans_per_fire) = 62609
┌ Info: Time check
└   time() - start_time = 1603.7330000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 645
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0296692
┌ Info: Price and cut time (b-and-b)
└   t = 0.78604
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 645
│   lb = 2.712223135120837
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 857
└   length(nodes) = 1475
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161349
└   sum(fire_plans.plans_per_fire) = 62628
┌ Info: Time check
└   time() - start_time = 1604.5609998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1116
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0368561
┌ Info: Price and cut time (b-and-b)
└   t = 0.6614931
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1116
│   lb = 2.712223135120837
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 858
└   length(nodes) = 1477
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161392
└   sum(fire_plans.plans_per_fire) = 62647
┌ Info: Time check
└   time() - start_time = 1605.2809998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1117
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303802
┌ Info: Price and cut time (b-and-b)
└   t = 0.7943153
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1117
│   lb = 2.712223624302026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 859
└   length(nodes) = 1479
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161520
└   sum(fire_plans.plans_per_fire) = 62678
┌ Info: Time check
└   time() - start_time = 1606.111999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 880
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257386
┌ Info: Price and cut time (b-and-b)
└   t = 0.5696397
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 880
│   lb = 2.712223624302026
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 860
└   length(nodes) = 1481
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161545
└   sum(fire_plans.plans_per_fire) = 62699
┌ Info: Time check
└   time() - start_time = 1606.7400000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 881
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267559
┌ Info: Price and cut time (b-and-b)
└   t = 1.1097057
┌ Info: current bounds
│   node_ix = 881
│   lb = 2.712223870600634
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 861
└   length(nodes) = 1481
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161696
└   sum(fire_plans.plans_per_fire) = 62758
┌ Info: Time check
└   time() - start_time = 1607.8759999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1118
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295595
┌ Info: Price and cut time (b-and-b)
└   t = 0.4016909
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1118
│   lb = 2.712223870600634
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 862
└   length(nodes) = 1483
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161726
└   sum(fire_plans.plans_per_fire) = 62768
┌ Info: Time check
└   time() - start_time = 1608.335000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1119
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0357104
┌ Info: Price and cut time (b-and-b)
└   t = 0.2125991
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1119
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 863
└   length(nodes) = 1485
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161749
└   sum(fire_plans.plans_per_fire) = 62777
┌ Info: Time check
└   time() - start_time = 1608.5999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1484
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323767
┌ Info: Price and cut time (b-and-b)
└   t = 0.2243804
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1484
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 864
└   length(nodes) = 1487
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161755
└   sum(fire_plans.plans_per_fire) = 62785
┌ Info: Time check
└   time() - start_time = 1608.875
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1485
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0353604
┌ Info: Price and cut time (b-and-b)
└   t = 0.2120016
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1485
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 865
└   length(nodes) = 1489
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161778
└   sum(fire_plans.plans_per_fire) = 62792
┌ Info: Time check
└   time() - start_time = 1609.1499998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1488
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260572
┌ Info: Price and cut time (b-and-b)
└   t = 0.3735435
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1488
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 866
└   length(nodes) = 1491
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161798
└   sum(fire_plans.plans_per_fire) = 62803
┌ Info: Time check
└   time() - start_time = 1609.5680000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1489
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298932
┌ Info: Price and cut time (b-and-b)
└   t = 0.8371836
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1489
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 867
└   length(nodes) = 1493
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161863
└   sum(fire_plans.plans_per_fire) = 62827
┌ Info: Time check
└   time() - start_time = 1610.4430000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1486
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026903
┌ Info: Price and cut time (b-and-b)
└   t = 0.1896801
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1486
│   lb = 2.7122238706006354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 868
└   length(nodes) = 1495
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161869
└   sum(fire_plans.plans_per_fire) = 62834
┌ Info: Time check
└   time() - start_time = 1610.6889998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1487
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305806
┌ Info: Price and cut time (b-and-b)
└   t = 0.6111172
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1487
│   lb = 2.712223870600636
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 869
└   length(nodes) = 1497
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161875
└   sum(fire_plans.plans_per_fire) = 62853
┌ Info: Time check
└   time() - start_time = 1611.3420000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1482
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027501
┌ Info: Price and cut time (b-and-b)
└   t = 0.244534
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1482
│   lb = 2.712223870600636
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 870
└   length(nodes) = 1499
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161895
└   sum(fire_plans.plans_per_fire) = 62862
┌ Info: Time check
└   time() - start_time = 1611.6370000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1483
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    17-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0318828
┌ Info: Price and cut time (b-and-b)
└   t = 0.8404444
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1483
│   lb = 2.7122253140389385
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 871
└   length(nodes) = 1501
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 161967
└   sum(fire_plans.plans_per_fire) = 62887
┌ Info: Time check
└   time() - start_time = 1612.526999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 478
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288396
┌ Info: Price and cut time (b-and-b)
└   t = 1.1182163
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 478
│   lb = 2.7122253140389385
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 872
└   length(nodes) = 1503
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162015
└   sum(fire_plans.plans_per_fire) = 62919
┌ Info: Time check
└   time() - start_time = 1613.6829998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 479
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258848
┌ Info: Price and cut time (b-and-b)
└   t = 1.8396245
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 479
│   lb = 2.712225706363548
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 873
└   length(nodes) = 1505
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162125
└   sum(fire_plans.plans_per_fire) = 62963
┌ Info: Time check
└   time() - start_time = 1615.5780000686646
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1430
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290697
┌ Info: Price and cut time (b-and-b)
└   t = 0.9037097
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1430
│   lb = 2.712225706363548
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 874
└   length(nodes) = 1507
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162203
└   sum(fire_plans.plans_per_fire) = 62993
┌ Info: Time check
└   time() - start_time = 1616.5320000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1506
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297937
┌ Info: Price and cut time (b-and-b)
└   t = 0.8947089
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1506
│   lb = 2.712225706363548
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 875
└   length(nodes) = 1509
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162318
└   sum(fire_plans.plans_per_fire) = 63023
┌ Info: Time check
└   time() - start_time = 1617.5520000457764
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1507
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289257
┌ Info: Price and cut time (b-and-b)
└   t = 0.5505128
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1507
│   lb = 2.712225706363548
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 876
└   length(nodes) = 1511
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162380
└   sum(fire_plans.plans_per_fire) = 63043
┌ Info: Time check
└   time() - start_time = 1618.1510000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1431
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312016
┌ Info: Price and cut time (b-and-b)
└   t = 1.1067388
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1431
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 877
└   length(nodes) = 1513
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162456
└   sum(fire_plans.plans_per_fire) = 63069
┌ Info: Time check
└   time() - start_time = 1619.3079998493195
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1436
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270182
┌ Info: Price and cut time (b-and-b)
└   t = 0.1533042
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1436
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 878
└   length(nodes) = 1515
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162462
└   sum(fire_plans.plans_per_fire) = 63075
┌ Info: Time check
└   time() - start_time = 1619.513000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1514
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0415041
┌ Info: Price and cut time (b-and-b)
└   t = 1.2471906
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1514
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 879
└   length(nodes) = 1517
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162468
└   sum(fire_plans.plans_per_fire) = 63116
┌ Info: Time check
└   time() - start_time = 1620.8269999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1515
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0341733
┌ Info: Price and cut time (b-and-b)
└   t = 0.758972
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1515
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 880
└   length(nodes) = 1519
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162474
└   sum(fire_plans.plans_per_fire) = 63137
┌ Info: Time check
└   time() - start_time = 1621.638000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1437
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267477
┌ Info: Price and cut time (b-and-b)
└   t = 0.330407
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1437
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 881
└   length(nodes) = 1521
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162495
└   sum(fire_plans.plans_per_fire) = 63145
┌ Info: Time check
└   time() - start_time = 1622.0120000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1520
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308868
┌ Info: Price and cut time (b-and-b)
└   t = 0.9028124
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1520
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 882
└   length(nodes) = 1523
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162560
└   sum(fire_plans.plans_per_fire) = 63174
┌ Info: Time check
└   time() - start_time = 1622.9639999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1522
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299438
┌ Info: Price and cut time (b-and-b)
└   t = 0.5736044
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1522
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 883
└   length(nodes) = 1525
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162652
└   sum(fire_plans.plans_per_fire) = 63191
┌ Info: Time check
└   time() - start_time = 1623.5889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1523
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263349
┌ Info: Price and cut time (b-and-b)
└   t = 0.7334616
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1523
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 884
└   length(nodes) = 1527
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162715
└   sum(fire_plans.plans_per_fire) = 63214
┌ Info: Time check
└   time() - start_time = 1624.3659999370575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1521
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310268
┌ Info: Price and cut time (b-and-b)
└   t = 0.9815825
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1521
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 885
└   length(nodes) = 1529
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162786
└   sum(fire_plans.plans_per_fire) = 63237
┌ Info: Time check
└   time() - start_time = 1625.4010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1516
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319398
┌ Info: Price and cut time (b-and-b)
└   t = 0.7125676
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1516
│   lb = 2.7122257063635486
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 886
└   length(nodes) = 1531
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162792
└   sum(fire_plans.plans_per_fire) = 63260
┌ Info: Time check
└   time() - start_time = 1626.1480000019073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1517
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274361
┌ Info: Price and cut time (b-and-b)
└   t = 0.6365825
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1517
│   lb = 2.7122263185251794
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 887
└   length(nodes) = 1533
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162798
└   sum(fire_plans.plans_per_fire) = 63280
┌ Info: Time check
└   time() - start_time = 1626.8389999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1478
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0323724
┌ Info: Price and cut time (b-and-b)
└   t = 0.863053
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1478
│   lb = 2.7122263185251794
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 888
└   length(nodes) = 1535
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162858
└   sum(fire_plans.plans_per_fire) = 63307
┌ Info: Time check
└   time() - start_time = 1627.75
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1479
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258506
┌ Info: Price and cut time (b-and-b)
└   t = 0.3918899
┌ Info: current bounds
│   node_ix = 1479
│   lb = 2.7122286926730035
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 889
└   length(nodes) = 1535
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162883
└   sum(fire_plans.plans_per_fire) = 63327
┌ Info: Time check
└   time() - start_time = 1628.191999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1444
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288137
┌ Info: Price and cut time (b-and-b)
└   t = 1.3176865
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1444
│   lb = 2.7122286926730035
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 890
└   length(nodes) = 1537
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 162964
└   sum(fire_plans.plans_per_fire) = 63363
┌ Info: Time check
└   time() - start_time = 1629.5539999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1445
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297526
┌ Info: Price and cut time (b-and-b)
└   t = 0.9976659
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1445
│   lb = 2.7122297756194294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 891
└   length(nodes) = 1539
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163038
└   sum(fire_plans.plans_per_fire) = 63393
┌ Info: Time check
└   time() - start_time = 1630.5889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1366
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254217
┌ Info: Price and cut time (b-and-b)
└   t = 1.0148588
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1366
│   lb = 2.7122297756194294
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 892
└   length(nodes) = 1541
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163183
└   sum(fire_plans.plans_per_fire) = 63420
┌ Info: Time check
└   time() - start_time = 1631.6529998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1367
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0256624
┌ Info: Price and cut time (b-and-b)
└   t = 0.9679791
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1367
│   lb = 2.7122320378990326
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 893
└   length(nodes) = 1543
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163332
└   sum(fire_plans.plans_per_fire) = 63451
┌ Info: Time check
└   time() - start_time = 1632.662999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1460
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0235018
┌ Info: Price and cut time (b-and-b)
└   t = 0.7184932
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1460
│   lb = 2.7122320378990326
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 894
└   length(nodes) = 1545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163429
└   sum(fire_plans.plans_per_fire) = 63472
┌ Info: Time check
└   time() - start_time = 1633.49799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1461
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271749
┌ Info: Price and cut time (b-and-b)
└   t = 0.8002542
┌ Info: current bounds
│   node_ix = 1461
│   lb = 2.7122322153414906
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 895
└   length(nodes) = 1545
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163656
└   sum(fire_plans.plans_per_fire) = 63525
┌ Info: Time check
└   time() - start_time = 1634.3399999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 362
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0303646
┌ Info: Price and cut time (b-and-b)
└   t = 0.4850676
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: current bounds
│   node_ix = 362
│   lb = 2.7122322153414906
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 896
└   length(nodes) = 1547
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163711
└   sum(fire_plans.plans_per_fire) = 63551
┌ Info: Time check
└   time() - start_time = 1634.8840000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 363
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269842
┌ Info: Price and cut time (b-and-b)
└   t = 1.1463843
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 363
│   lb = 2.7122322153414906
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 897
└   length(nodes) = 1549
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163849
└   sum(fire_plans.plans_per_fire) = 63603
┌ Info: Time check
└   time() - start_time = 1636.0709998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1546
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293319
┌ Info: Price and cut time (b-and-b)
└   t = 0.1944541
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(7, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(7, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1546
│   lb = 2.7122322153414906
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 898
└   length(nodes) = 1551
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163869
└   sum(fire_plans.plans_per_fire) = 63610
┌ Info: Time check
└   time() - start_time = 1636.319000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1547
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265303
┌ Info: Price and cut time (b-and-b)
└   t = 0.1937837
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1547
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 899
└   length(nodes) = 1553
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163891
└   sum(fire_plans.plans_per_fire) = 63617
┌ Info: Time check
└   time() - start_time = 1636.5499999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1550
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300671
┌ Info: Price and cut time (b-and-b)
└   t = 0.2789622
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1550
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 900
└   length(nodes) = 1555
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163911
└   sum(fire_plans.plans_per_fire) = 63626
┌ Info: Time check
└   time() - start_time = 1636.8759999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1551
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293232
┌ Info: Price and cut time (b-and-b)
└   t = 0.1851976
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1551
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 901
└   length(nodes) = 1557
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163917
└   sum(fire_plans.plans_per_fire) = 63634
┌ Info: Time check
└   time() - start_time = 1637.1099998950958
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1556
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301621
┌ Info: Price and cut time (b-and-b)
└   t = 0.754517
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1556
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 902
└   length(nodes) = 1559
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163923
└   sum(fire_plans.plans_per_fire) = 63657
┌ Info: Time check
└   time() - start_time = 1637.9219999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1557
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282273
┌ Info: Price and cut time (b-and-b)
└   t = 0.7476807
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1557
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 903
└   length(nodes) = 1561
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 163929
└   sum(fire_plans.plans_per_fire) = 63679
┌ Info: Time check
└   time() - start_time = 1638.7030000686646
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1552
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290234
┌ Info: Price and cut time (b-and-b)
└   t = 0.5910406
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1552
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 904
└   length(nodes) = 1563
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164002
└   sum(fire_plans.plans_per_fire) = 63699
┌ Info: Time check
└   time() - start_time = 1639.343999862671
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1553
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246631
┌ Info: Price and cut time (b-and-b)
└   t = 1.7118036
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1553
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 905
└   length(nodes) = 1565
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164076
└   sum(fire_plans.plans_per_fire) = 63749
┌ Info: Time check
└   time() - start_time = 1641.1959998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1554
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292009
┌ Info: Price and cut time (b-and-b)
└   t = 1.1484818
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1554
│   lb = 2.712232215341491
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 906
└   length(nodes) = 1567
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164131
└   sum(fire_plans.plans_per_fire) = 63777
┌ Info: Time check
└   time() - start_time = 1642.3870000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1555
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(5, 3, 1, false)
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0362045
┌ Info: Price and cut time (b-and-b)
└   t = 1.0742423
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1555
│   lb = 2.712235621753752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 907
└   length(nodes) = 1569
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164187
└   sum(fire_plans.plans_per_fire) = 63806
┌ Info: Time check
└   time() - start_time = 1643.5169999599457
┌ Info: Exploring node
└   branch_and_bound_node.ix = 978
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0297775
┌ Info: Price and cut time (b-and-b)
└   t = 0.7587207
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 978
│   lb = 2.712235621753752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 908
└   length(nodes) = 1571
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164241
└   sum(fire_plans.plans_per_fire) = 63831
┌ Info: Time check
└   time() - start_time = 1644.3309998512268
┌ Info: Exploring node
└   branch_and_bound_node.ix = 979
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269498
┌ Info: Price and cut time (b-and-b)
└   t = 0.6995321
┌ Info: current bounds
│   node_ix = 979
│   lb = 2.7122423940673936
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 909
└   length(nodes) = 1571
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164358
└   sum(fire_plans.plans_per_fire) = 63861
┌ Info: Time check
└   time() - start_time = 1645.0709998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 570
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288647
┌ Info: Price and cut time (b-and-b)
└   t = 1.009157
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 570
│   lb = 2.7122423940673936
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 910
└   length(nodes) = 1573
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164464
└   sum(fire_plans.plans_per_fire) = 63899
┌ Info: Time check
└   time() - start_time = 1646.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 571
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291346
┌ Info: Price and cut time (b-and-b)
└   t = 0.5010078
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 571
│   lb = 2.712244160432776
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 911
└   length(nodes) = 1575
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164497
└   sum(fire_plans.plans_per_fire) = 63920
┌ Info: Time check
└   time() - start_time = 1646.6659998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1038
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300806
┌ Info: Price and cut time (b-and-b)
└   t = 0.1958702
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1038
│   lb = 2.712244160432776
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 912
└   length(nodes) = 1577
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164518
└   sum(fire_plans.plans_per_fire) = 63927
┌ Info: Time check
└   time() - start_time = 1646.9219999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1039
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262379
┌ Info: Price and cut time (b-and-b)
└   t = 0.2821888
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1039
│   lb = 2.7122441604327765
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 913
└   length(nodes) = 1579
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164539
└   sum(fire_plans.plans_per_fire) = 63936
┌ Info: Time check
└   time() - start_time = 1647.2509999275208
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1578
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1189183
┌ Info: Price and cut time (b-and-b)
└   t = 0.1726292
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(20, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(20, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1578
│   lb = 2.7122441604327765
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 914
└   length(nodes) = 1581
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164545
└   sum(fire_plans.plans_per_fire) = 63943
┌ Info: Time check
└   time() - start_time = 1647.5550000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1579
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319249
┌ Info: Price and cut time (b-and-b)
└   t = 0.1809
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1579
│   lb = 2.7122441604327765
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 915
└   length(nodes) = 1583
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164580
└   sum(fire_plans.plans_per_fire) = 63951
┌ Info: Time check
└   time() - start_time = 1647.7860000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1582
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286714
┌ Info: Price and cut time (b-and-b)
└   t = 0.1863439
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1582
│   lb = 2.7122441604327765
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 916
└   length(nodes) = 1585
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164586
└   sum(fire_plans.plans_per_fire) = 63958
┌ Info: Time check
└   time() - start_time = 1648.029000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1583
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269921
┌ Info: Price and cut time (b-and-b)
└   t = 0.1413615
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1583
│   lb = 2.712244160432777
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 917
└   length(nodes) = 1587
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164606
└   sum(fire_plans.plans_per_fire) = 63964
┌ Info: Time check
└   time() - start_time = 1648.220999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1586
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0300777
┌ Info: Price and cut time (b-and-b)
└   t = 0.8190993
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1586
│   lb = 2.712244160432777
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 918
└   length(nodes) = 1589
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164714
└   sum(fire_plans.plans_per_fire) = 63992
┌ Info: Time check
└   time() - start_time = 1649.0859999656677
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1588
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313892
┌ Info: Price and cut time (b-and-b)
└   t = 1.1096957
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1588
│   lb = 2.712244160432777
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 919
└   length(nodes) = 1591
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164815
└   sum(fire_plans.plans_per_fire) = 64035
┌ Info: Time check
└   time() - start_time = 1650.24799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1589
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0316678
┌ Info: Price and cut time (b-and-b)
└   t = 1.2894929
┌ Info: current bounds
│   node_ix = 1589
│   lb = 2.712244160432777
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 920
└   length(nodes) = 1591
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 164958
└   sum(fire_plans.plans_per_fire) = 64079
┌ Info: Time check
└   time() - start_time = 1651.5750000476837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1587
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029316
┌ Info: Price and cut time (b-and-b)
└   t = 0.7104041
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1587
│   lb = 2.7122458664303015
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 921
└   length(nodes) = 1593
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165019
└   sum(fire_plans.plans_per_fire) = 64103
┌ Info: Time check
└   time() - start_time = 1652.3429999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1580
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293059
┌ Info: Price and cut time (b-and-b)
└   t = 0.144313
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1580
│   lb = 2.7122458664303015
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 922
└   length(nodes) = 1595
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165025
└   sum(fire_plans.plans_per_fire) = 64109
┌ Info: Time check
└   time() - start_time = 1652.5409998893738
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1581
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266013
┌ Info: Price and cut time (b-and-b)
└   t = 0.1521957
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1581
│   lb = 2.712245866430302
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 923
└   length(nodes) = 1597
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165031
└   sum(fire_plans.plans_per_fire) = 64115
┌ Info: Time check
└   time() - start_time = 1652.7400000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1576
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0269693
┌ Info: Price and cut time (b-and-b)
└   t = 0.1998633
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1576
│   lb = 2.712245866430302
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 924
└   length(nodes) = 1599
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165052
└   sum(fire_plans.plans_per_fire) = 64122
┌ Info: Time check
└   time() - start_time = 1652.9779999256134
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1577
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0313379
┌ Info: Price and cut time (b-and-b)
└   t = 0.1671202
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1577
│   lb = 2.712245866430302
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 925
└   length(nodes) = 1601
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165058
└   sum(fire_plans.plans_per_fire) = 64128
┌ Info: Time check
└   time() - start_time = 1653.1949999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1600
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027728
┌ Info: Price and cut time (b-and-b)
└   t = 0.3068253
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1600
│   lb = 2.712245866430302
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 926
└   length(nodes) = 1603
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165064
└   sum(fire_plans.plans_per_fire) = 64137
┌ Info: Time check
└   time() - start_time = 1653.5609998703003
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1601
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260867
┌ Info: Price and cut time (b-and-b)
└   t = 0.184073
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1601
│   lb = 2.712246717667292
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 927
└   length(nodes) = 1605
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165070
└   sum(fire_plans.plans_per_fire) = 64145
┌ Info: Time check
└   time() - start_time = 1653.7860000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1594
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264855
┌ Info: Price and cut time (b-and-b)
└   t = 0.2290283
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1594
│   lb = 2.712246717667292
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 928
└   length(nodes) = 1607
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165076
└   sum(fire_plans.plans_per_fire) = 64153
┌ Info: Time check
└   time() - start_time = 1654.0499999523163
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1595
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289393
┌ Info: Price and cut time (b-and-b)
└   t = 0.2406167
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1595
│   lb = 2.712246717667292
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 929
└   length(nodes) = 1609
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165082
└   sum(fire_plans.plans_per_fire) = 64160
┌ Info: Time check
└   time() - start_time = 1654.3429999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1608
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028793
┌ Info: Price and cut time (b-and-b)
└   t = 0.1443839
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1608
│   lb = 2.712246717667292
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 930
└   length(nodes) = 1611
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165088
└   sum(fire_plans.plans_per_fire) = 64166
┌ Info: Time check
└   time() - start_time = 1654.5479998588562
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1609
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025173
┌ Info: Price and cut time (b-and-b)
└   t = 0.1556414
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1609
│   lb = 2.7122484166755996
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 931
└   length(nodes) = 1613
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165094
└   sum(fire_plans.plans_per_fire) = 64172
┌ Info: Time check
└   time() - start_time = 1654.7519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1362
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311189
┌ Info: Price and cut time (b-and-b)
└   t = 1.5966365
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 10, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 10, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1362
│   lb = 2.7122484166755996
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 932
└   length(nodes) = 1615
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165121
└   sum(fire_plans.plans_per_fire) = 64215
┌ Info: Time check
└   time() - start_time = 1656.3889999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1363
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302322
┌ Info: Price and cut time (b-and-b)
└   t = 0.5922979
┌ Info: current bounds
│   node_ix = 1363
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 933
└   length(nodes) = 1615
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165171
└   sum(fire_plans.plans_per_fire) = 64246
┌ Info: Time check
└   time() - start_time = 1657.0320000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1596
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258799
┌ Info: Price and cut time (b-and-b)
└   t = 0.143696
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1596
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 934
└   length(nodes) = 1617
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165177
└   sum(fire_plans.plans_per_fire) = 64252
┌ Info: Time check
└   time() - start_time = 1657.223000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1597
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026283
┌ Info: Price and cut time (b-and-b)
└   t = 0.1429525
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1597
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 935
└   length(nodes) = 1619
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165183
└   sum(fire_plans.plans_per_fire) = 64258
┌ Info: Time check
└   time() - start_time = 1657.4119999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1598
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026891
┌ Info: Price and cut time (b-and-b)
└   t = 0.7208144
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1598
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 936
└   length(nodes) = 1621
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165228
└   sum(fire_plans.plans_per_fire) = 64278
┌ Info: Time check
└   time() - start_time = 1658.1719999313354
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1599
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289516
┌ Info: Price and cut time (b-and-b)
└   t = 0.7737542
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1599
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 937
└   length(nodes) = 1623
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165318
└   sum(fire_plans.plans_per_fire) = 64298
┌ Info: Time check
└   time() - start_time = 1659.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1618
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0319985
┌ Info: Price and cut time (b-and-b)
└   t = 0.6302074
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1618
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 938
└   length(nodes) = 1625
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165324
└   sum(fire_plans.plans_per_fire) = 64319
┌ Info: Time check
└   time() - start_time = 1659.6710000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1619
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276692
┌ Info: Price and cut time (b-and-b)
└   t = 0.7050788
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1619
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 939
└   length(nodes) = 1627
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165330
└   sum(fire_plans.plans_per_fire) = 64341
┌ Info: Time check
└   time() - start_time = 1660.4319999217987
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1620
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298925
┌ Info: Price and cut time (b-and-b)
└   t = 1.0173792
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1620
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 940
└   length(nodes) = 1629
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165421
└   sum(fire_plans.plans_per_fire) = 64371
┌ Info: Time check
└   time() - start_time = 1661.5019998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1621
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281571
┌ Info: Price and cut time (b-and-b)
└   t = 1.5661626
┌ Info: current bounds
│   node_ix = 1621
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 941
└   length(nodes) = 1629
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165533
└   sum(fire_plans.plans_per_fire) = 64418
┌ Info: Time check
└   time() - start_time = 1663.098000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1624
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304785
┌ Info: Price and cut time (b-and-b)
└   t = 1.1203229
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1624
│   lb = 2.712249278425354
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 942
└   length(nodes) = 1631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165539
└   sum(fire_plans.plans_per_fire) = 64458
┌ Info: Time check
└   time() - start_time = 1664.2679998874664
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1625
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270159
┌ Info: Price and cut time (b-and-b)
└   t = 1.5303682
┌ Info: current bounds
│   node_ix = 1625
│   lb = 2.7122503218619283
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 943
└   length(nodes) = 1631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165545
└   sum(fire_plans.plans_per_fire) = 64514
┌ Info: Time check
└   time() - start_time = 1665.8499999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1604
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0340181
┌ Info: Price and cut time (b-and-b)
└   t = 0.5478933
┌ Info: current bounds
│   node_ix = 1604
│   lb = 2.7122503218619283
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 944
└   length(nodes) = 1631
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165551
└   sum(fire_plans.plans_per_fire) = 64539
┌ Info: Time check
└   time() - start_time = 1666.4470000267029
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1605
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266318
┌ Info: Price and cut time (b-and-b)
└   t = 0.6243989
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1605
│   lb = 2.7122503218619287
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 945
└   length(nodes) = 1633
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165557
└   sum(fire_plans.plans_per_fire) = 64556
┌ Info: Time check
└   time() - start_time = 1667.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1612
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260696
┌ Info: Price and cut time (b-and-b)
└   t = 0.8887788
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1612
│   lb = 2.7122503218619287
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 946
└   length(nodes) = 1635
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165563
└   sum(fire_plans.plans_per_fire) = 64585
┌ Info: Time check
└   time() - start_time = 1668.151999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1613
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0536837
┌ Info: Price and cut time (b-and-b)
└   t = 0.6656199
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1613
│   lb = 2.7122503218619287
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 947
└   length(nodes) = 1637
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165569
└   sum(fire_plans.plans_per_fire) = 64605
┌ Info: Time check
└   time() - start_time = 1668.885999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1634
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279207
┌ Info: Price and cut time (b-and-b)
└   t = 1.1589817
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1634
│   lb = 2.7122503218619287
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 948
└   length(nodes) = 1639
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165575
└   sum(fire_plans.plans_per_fire) = 64642
┌ Info: Time check
└   time() - start_time = 1670.0880000591278
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1635
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261368
┌ Info: Price and cut time (b-and-b)
└   t = 0.9661362
┌ Info: current bounds
│   node_ix = 1635
│   lb = 2.712250321861929
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 949
└   length(nodes) = 1639
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165581
└   sum(fire_plans.plans_per_fire) = 64678
┌ Info: Time check
└   time() - start_time = 1671.1059999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1632
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257509
┌ Info: Price and cut time (b-and-b)
└   t = 1.0486052
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1632
│   lb = 2.712250321861929
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 950
└   length(nodes) = 1641
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165587
└   sum(fire_plans.plans_per_fire) = 64711
┌ Info: Time check
└   time() - start_time = 1672.1849999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1633
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283455
┌ Info: Price and cut time (b-and-b)
└   t = 1.1722084
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1633
│   lb = 2.712251462790808
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 951
└   length(nodes) = 1643
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165593
└   sum(fire_plans.plans_per_fire) = 64739
┌ Info: Time check
└   time() - start_time = 1673.401999950409
┌ Info: Exploring node
└   branch_and_bound_node.ix = 938
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027894
┌ Info: Price and cut time (b-and-b)
└   t = 0.5704847
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 938
│   lb = 2.712251462790808
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 952
└   length(nodes) = 1645
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165599
└   sum(fire_plans.plans_per_fire) = 64759
┌ Info: Time check
└   time() - start_time = 1674.0309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 939
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0435807
┌ Info: Price and cut time (b-and-b)
└   t = 0.8196648
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 939
│   lb = 2.7122514627908085
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 953
└   length(nodes) = 1647
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165605
└   sum(fire_plans.plans_per_fire) = 64805
┌ Info: Time check
└   time() - start_time = 1675.0090000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 926
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028932
┌ Info: Price and cut time (b-and-b)
└   t = 0.7292243
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 926
│   lb = 2.7122514627908085
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 954
└   length(nodes) = 1649
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165625
└   sum(fire_plans.plans_per_fire) = 64827
┌ Info: Time check
└   time() - start_time = 1675.784999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 927
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267768
┌ Info: Price and cut time (b-and-b)
└   t = 1.3268461
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 927
│   lb = 2.712251832136323
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 955
└   length(nodes) = 1651
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165777
└   sum(fire_plans.plans_per_fire) = 64873
┌ Info: Time check
└   time() - start_time = 1677.1619999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1606
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286588
┌ Info: Price and cut time (b-and-b)
└   t = 0.5148011
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1606
│   lb = 2.712251832136323
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 956
└   length(nodes) = 1653
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165783
└   sum(fire_plans.plans_per_fire) = 64891
┌ Info: Time check
└   time() - start_time = 1677.723000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1607
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302787
┌ Info: Price and cut time (b-and-b)
└   t = 0.8263451
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(1, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(1, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1607
│   lb = 2.7122518321363236
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 957
└   length(nodes) = 1655
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165789
└   sum(fire_plans.plans_per_fire) = 64916
┌ Info: Time check
└   time() - start_time = 1678.5989999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1652
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281969
┌ Info: Price and cut time (b-and-b)
└   t = 0.8876678
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1652
│   lb = 2.7122518321363236
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 958
└   length(nodes) = 1657
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165795
└   sum(fire_plans.plans_per_fire) = 64947
┌ Info: Time check
└   time() - start_time = 1679.5309998989105
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1653
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0306729
┌ Info: Price and cut time (b-and-b)
└   t = 1.415616
┌ Info: current bounds
│   node_ix = 1653
│   lb = 2.7122540372127384
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 959
└   length(nodes) = 1657
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165801
└   sum(fire_plans.plans_per_fire) = 64997
┌ Info: Time check
└   time() - start_time = 1680.9939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 932
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299515
┌ Info: Price and cut time (b-and-b)
└   t = 0.6204353
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 932
│   lb = 2.7122540372127384
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 960
└   length(nodes) = 1659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165833
└   sum(fire_plans.plans_per_fire) = 65022
┌ Info: Time check
└   time() - start_time = 1681.664999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 933
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0259306
┌ Info: Price and cut time (b-and-b)
└   t = 0.8658261
┌ Info: current bounds
│   node_ix = 933
│   lb = 2.712257488356346
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 961
└   length(nodes) = 1659
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 165941
└   sum(fire_plans.plans_per_fire) = 65058
┌ Info: Time check
└   time() - start_time = 1682.5680000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1658
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280171
┌ Info: Price and cut time (b-and-b)
└   t = 1.8294092
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1658
│   lb = 2.712257488356346
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 962
└   length(nodes) = 1661
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166038
└   sum(fire_plans.plans_per_fire) = 65102
┌ Info: Time check
└   time() - start_time = 1684.4400000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1659
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025305
┌ Info: Price and cut time (b-and-b)
└   t = 0.6816199
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 13, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 14, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1659
│   lb = 2.7122574883563466
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 963
└   length(nodes) = 1663
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166125
└   sum(fire_plans.plans_per_fire) = 65128
┌ Info: Time check
└   time() - start_time = 1685.1610000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1644
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265131
┌ Info: Price and cut time (b-and-b)
└   t = 1.4229185
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1644
│   lb = 2.7122574883563466
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 964
└   length(nodes) = 1665
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166131
└   sum(fire_plans.plans_per_fire) = 65166
┌ Info: Time check
└   time() - start_time = 1686.638000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1645
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264419
┌ Info: Price and cut time (b-and-b)
└   t = 0.8940776
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1645
│   lb = 2.712257488356347
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 965
└   length(nodes) = 1667
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166137
└   sum(fire_plans.plans_per_fire) = 65201
┌ Info: Time check
└   time() - start_time = 1687.5599999427795
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1648
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0330378
┌ Info: Price and cut time (b-and-b)
└   t = 1.0099693
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1648
│   lb = 2.712257488356347
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 966
└   length(nodes) = 1669
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166233
└   sum(fire_plans.plans_per_fire) = 65238
┌ Info: Time check
└   time() - start_time = 1688.619999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1649
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0272614
┌ Info: Price and cut time (b-and-b)
└   t = 1.1818633
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1649
│   lb = 2.7122577469104976
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 967
└   length(nodes) = 1671
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166315
└   sum(fire_plans.plans_per_fire) = 65273
┌ Info: Time check
└   time() - start_time = 1689.856999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1584
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284326
┌ Info: Price and cut time (b-and-b)
└   t = 0.461708
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1584
│   lb = 2.7122577469104976
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 968
└   length(nodes) = 1673
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166321
└   sum(fire_plans.plans_per_fire) = 65293
┌ Info: Time check
└   time() - start_time = 1690.369999885559
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1585
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0288938
┌ Info: Price and cut time (b-and-b)
└   t = 0.5743298
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1585
│   lb = 2.7122577469104985
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 969
└   length(nodes) = 1675
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166327
└   sum(fire_plans.plans_per_fire) = 65310
┌ Info: Time check
└   time() - start_time = 1690.9809999465942
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1672
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0258791
┌ Info: Price and cut time (b-and-b)
└   t = 1.1401531
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1672
│   lb = 2.7122577469104985
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 970
└   length(nodes) = 1677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166333
└   sum(fire_plans.plans_per_fire) = 65348
┌ Info: Time check
└   time() - start_time = 1692.1710000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1673
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0347947
┌ Info: Price and cut time (b-and-b)
└   t = 1.4074345
┌ Info: current bounds
│   node_ix = 1673
│   lb = 2.712261054238421
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 971
└   length(nodes) = 1677
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166339
└   sum(fire_plans.plans_per_fire) = 65398
┌ Info: Time check
└   time() - start_time = 1693.6340000629425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1470
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0308257
┌ Info: Price and cut time (b-and-b)
└   t = 0.9339367
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1470
│   lb = 2.712261054238421
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 972
└   length(nodes) = 1679
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166444
└   sum(fire_plans.plans_per_fire) = 65429
┌ Info: Time check
└   time() - start_time = 1694.6150000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1471
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0246979
┌ Info: Price and cut time (b-and-b)
└   t = 0.7679151
┌ Info: current bounds
│   node_ix = 1471
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 973
└   length(nodes) = 1679
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166572
└   sum(fire_plans.plans_per_fire) = 65461
┌ Info: Time check
└   time() - start_time = 1695.420000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1602
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291986
┌ Info: Price and cut time (b-and-b)
└   t = 0.5247812
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1602
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 974
└   length(nodes) = 1681
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166578
└   sum(fire_plans.plans_per_fire) = 65480
┌ Info: Time check
└   time() - start_time = 1695.989000082016
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1603
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295964
┌ Info: Price and cut time (b-and-b)
└   t = 0.4829682
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 6, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 6, 1, true)
┌ Info: current bounds
│   node_ix = 1603
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 975
└   length(nodes) = 1683
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166584
└   sum(fire_plans.plans_per_fire) = 65495
┌ Info: Time check
└   time() - start_time = 1696.5220000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1616
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281611
┌ Info: Price and cut time (b-and-b)
└   t = 0.5427514
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1616
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 976
└   length(nodes) = 1685
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166590
└   sum(fire_plans.plans_per_fire) = 65512
┌ Info: Time check
└   time() - start_time = 1697.1180000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1617
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307394
┌ Info: Price and cut time (b-and-b)
└   t = 0.7821595
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1617
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 977
└   length(nodes) = 1687
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166596
└   sum(fire_plans.plans_per_fire) = 65529
┌ Info: Time check
└   time() - start_time = 1697.9479999542236
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1684
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0282808
┌ Info: Price and cut time (b-and-b)
└   t = 0.6882884
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1684
│   lb = 2.7122628649030758
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 978
└   length(nodes) = 1689
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166602
└   sum(fire_plans.plans_per_fire) = 65555
┌ Info: Time check
└   time() - start_time = 1698.6879999637604
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1685
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264855
┌ Info: Price and cut time (b-and-b)
└   t = 0.9690526
┌ Info: current bounds
│   node_ix = 1685
│   lb = 2.712262864903076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 979
└   length(nodes) = 1689
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166608
└   sum(fire_plans.plans_per_fire) = 65595
┌ Info: Time check
└   time() - start_time = 1699.6930000782013
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1680
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289465
┌ Info: Price and cut time (b-and-b)
└   t = 1.0814033
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1680
│   lb = 2.712262864903076
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 980
└   length(nodes) = 1691
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166614
└   sum(fire_plans.plans_per_fire) = 65632
┌ Info: Time check
└   time() - start_time = 1700.8239998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1681
┌ Info: rules
│   crew_rules =
│    3-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254259
┌ Info: Price and cut time (b-and-b)
└   t = 0.9713709
┌ Info: current bounds
│   node_ix = 1681
│   lb = 2.7122651016563672
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 981
└   length(nodes) = 1691
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166620
└   sum(fire_plans.plans_per_fire) = 65679
┌ Info: Time check
└   time() - start_time = 1701.8320000171661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 738
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276326
┌ Info: Price and cut time (b-and-b)
└   t = 1.2068142
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(8, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(8, 3, 1, true)
┌ Info: current bounds
│   node_ix = 738
│   lb = 2.7122651016563672
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 982
└   length(nodes) = 1693
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166718
└   sum(fire_plans.plans_per_fire) = 65722
┌ Info: Time check
└   time() - start_time = 1703.0889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 739
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026508
┌ Info: Price and cut time (b-and-b)
└   t = 1.1773965
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 739
│   lb = 2.712265418614045
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 983
└   length(nodes) = 1695
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166821
└   sum(fire_plans.plans_per_fire) = 65763
┌ Info: Time check
└   time() - start_time = 1704.295000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1610
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278556
┌ Info: Price and cut time (b-and-b)
└   t = 0.7698638
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1610
│   lb = 2.712265418614045
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 984
└   length(nodes) = 1697
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166827
└   sum(fire_plans.plans_per_fire) = 65788
┌ Info: Time check
└   time() - start_time = 1705.1150000095367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1611
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02804
┌ Info: Price and cut time (b-and-b)
└   t = 0.793874
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1611
│   lb = 2.7122654186140456
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 985
└   length(nodes) = 1699
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166833
└   sum(fire_plans.plans_per_fire) = 65813
┌ Info: Time check
└   time() - start_time = 1705.957999944687
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1696
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290819
┌ Info: Price and cut time (b-and-b)
└   t = 0.8578964
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1696
│   lb = 2.7122654186140456
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 986
└   length(nodes) = 1701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166839
└   sum(fire_plans.plans_per_fire) = 65840
┌ Info: Time check
└   time() - start_time = 1706.8610000610352
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1697
┌ Info: rules
│   crew_rules =
│    5-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│     CrewSupplyBranchingRule(20, 3, 1, false)
│     CrewSupplyBranchingRule(14, 3, 1, true)
│     CrewSupplyBranchingRule(4, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0281847
┌ Info: Price and cut time (b-and-b)
└   t = 1.3961928
┌ Info: current bounds
│   node_ix = 1697
│   lb = 2.7122717394317744
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 987
└   length(nodes) = 1701
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166845
└   sum(fire_plans.plans_per_fire) = 65888
┌ Info: Time check
└   time() - start_time = 1708.3050000667572
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1136
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0276982
┌ Info: Price and cut time (b-and-b)
└   t = 0.3111683
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1136
│   lb = 2.7122717394317744
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 988
└   length(nodes) = 1703
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166868
└   sum(fire_plans.plans_per_fire) = 65898
┌ Info: Time check
└   time() - start_time = 1708.662999868393
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1137
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279575
┌ Info: Price and cut time (b-and-b)
└   t = 0.4715478
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1137
│   lb = 2.7122717394317744
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 989
└   length(nodes) = 1705
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166908
└   sum(fire_plans.plans_per_fire) = 65911
┌ Info: Time check
└   time() - start_time = 1709.1779999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1702
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0293148
┌ Info: Price and cut time (b-and-b)
└   t = 0.6357318
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1702
│   lb = 2.7122717394317744
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 990
└   length(nodes) = 1707
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 166990
└   sum(fire_plans.plans_per_fire) = 65935
┌ Info: Time check
└   time() - start_time = 1709.861999988556
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1703
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294691
┌ Info: Price and cut time (b-and-b)
└   t = 1.3014415
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1703
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 991
└   length(nodes) = 1709
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167109
└   sum(fire_plans.plans_per_fire) = 65988
┌ Info: Time check
└   time() - start_time = 1711.210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1704
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0254888
┌ Info: Price and cut time (b-and-b)
└   t = 0.60798
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1704
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 992
└   length(nodes) = 1711
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167197
└   sum(fire_plans.plans_per_fire) = 66010
┌ Info: Time check
└   time() - start_time = 1711.8519999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1705
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0292969
┌ Info: Price and cut time (b-and-b)
└   t = 1.083162
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1705
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 993
└   length(nodes) = 1713
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167337
└   sum(fire_plans.plans_per_fire) = 66053
┌ Info: Time check
└   time() - start_time = 1712.981999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1710
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0299076
┌ Info: Price and cut time (b-and-b)
└   t = 0.2432606
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1710
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 994
└   length(nodes) = 1715
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167343
└   sum(fire_plans.plans_per_fire) = 66064
┌ Info: Time check
└   time() - start_time = 1713.2709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1714
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257561
┌ Info: Price and cut time (b-and-b)
└   t = 0.897612
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1714
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 995
└   length(nodes) = 1717
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167349
└   sum(fire_plans.plans_per_fire) = 66094
┌ Info: Time check
└   time() - start_time = 1714.2269999980927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1715
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.024817
┌ Info: Price and cut time (b-and-b)
└   t = 1.3933105
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1715
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 996
└   length(nodes) = 1719
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167355
└   sum(fire_plans.plans_per_fire) = 66149
┌ Info: Time check
└   time() - start_time = 1715.6579999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1711
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0274119
┌ Info: Price and cut time (b-and-b)
└   t = 0.2182552
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1711
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 997
└   length(nodes) = 1721
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167390
└   sum(fire_plans.plans_per_fire) = 66159
┌ Info: Time check
└   time() - start_time = 1715.925999879837
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1720
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0248714
┌ Info: Price and cut time (b-and-b)
└   t = 1.1368571
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1720
│   lb = 2.7122717394317752
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 998
└   length(nodes) = 1723
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167430
└   sum(fire_plans.plans_per_fire) = 66202
┌ Info: Time check
└   time() - start_time = 1717.0969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1721
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0304537
┌ Info: Price and cut time (b-and-b)
└   t = 0.5733971
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1721
│   lb = 2.7122717394317757
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 999
└   length(nodes) = 1725
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167538
└   sum(fire_plans.plans_per_fire) = 66228
┌ Info: Time check
└   time() - start_time = 1717.7239999771118
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1706
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295558
┌ Info: Price and cut time (b-and-b)
└   t = 0.7363721
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1706
│   lb = 2.7122717394317757
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1000
└   length(nodes) = 1727
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167582
└   sum(fire_plans.plans_per_fire) = 66251
┌ Info: Time check
└   time() - start_time = 1718.5149998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1707
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1561575
┌ Info: Price and cut time (b-and-b)
└   t = 1.2033231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1707
│   lb = 2.712273512058864
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1001
└   length(nodes) = 1729
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167750
└   sum(fire_plans.plans_per_fire) = 66307
┌ Info: Time check
└   time() - start_time = 1719.9010000228882
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1572
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0315644
┌ Info: Price and cut time (b-and-b)
└   t = 1.0049521
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1572
│   lb = 2.712273512058864
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1002
└   length(nodes) = 1731
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167805
└   sum(fire_plans.plans_per_fire) = 66336
┌ Info: Time check
└   time() - start_time = 1720.9530000686646
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1573
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 14, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0298949
┌ Info: Price and cut time (b-and-b)
└   t = 0.8748578
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1573
│   lb = 2.7122809938080756
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1003
└   length(nodes) = 1733
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167849
└   sum(fire_plans.plans_per_fire) = 66368
┌ Info: Time check
└   time() - start_time = 1721.875
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1348
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0240975
┌ Info: Price and cut time (b-and-b)
└   t = 0.7748924
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1348
│   lb = 2.7122809938080756
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1004
└   length(nodes) = 1735
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167855
└   sum(fire_plans.plans_per_fire) = 66402
┌ Info: Time check
└   time() - start_time = 1722.6840000152588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1349
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302206
┌ Info: Price and cut time (b-and-b)
└   t = 1.036769
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1349
│   lb = 2.712281911534167
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1005
└   length(nodes) = 1737
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167861
└   sum(fire_plans.plans_per_fire) = 66434
┌ Info: Time check
└   time() - start_time = 1723.779000043869
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1184
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0278776
┌ Info: Price and cut time (b-and-b)
└   t = 1.4317089
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1184
│   lb = 2.712281911534167
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1006
└   length(nodes) = 1739
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167946
└   sum(fire_plans.plans_per_fire) = 66468
┌ Info: Time check
└   time() - start_time = 1725.2519998550415
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1185
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0414821
┌ Info: Price and cut time (b-and-b)
└   t = 1.3241353
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1185
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1007
└   length(nodes) = 1741
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167991
└   sum(fire_plans.plans_per_fire) = 66496
┌ Info: Time check
└   time() - start_time = 1726.6349999904633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1188
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0305046
┌ Info: Price and cut time (b-and-b)
└   t = 0.1296021
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1188
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1008
└   length(nodes) = 1743
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 167997
└   sum(fire_plans.plans_per_fire) = 66502
┌ Info: Time check
└   time() - start_time = 1726.819000005722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1742
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0382188
┌ Info: Price and cut time (b-and-b)
└   t = 1.141494
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1742
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1009
└   length(nodes) = 1745
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168003
└   sum(fire_plans.plans_per_fire) = 66538
┌ Info: Time check
└   time() - start_time = 1728.010999917984
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1743
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273814
┌ Info: Price and cut time (b-and-b)
└   t = 0.8499544
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1743
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1010
└   length(nodes) = 1747
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168009
└   sum(fire_plans.plans_per_fire) = 66565
┌ Info: Time check
└   time() - start_time = 1728.909999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1189
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0283459
┌ Info: Price and cut time (b-and-b)
└   t = 0.3127001
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1189
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1011
└   length(nodes) = 1749
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168044
└   sum(fire_plans.plans_per_fire) = 66575
┌ Info: Time check
└   time() - start_time = 1729.2690000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1748
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0279086
┌ Info: Price and cut time (b-and-b)
└   t = 1.7001606
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1748
│   lb = 2.7122819115341676
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1012
└   length(nodes) = 1751
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168132
└   sum(fire_plans.plans_per_fire) = 66617
┌ Info: Time check
└   time() - start_time = 1731.0220000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1749
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(3, 3, 1, true)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0406973
┌ Info: Price and cut time (b-and-b)
└   t = 1.0900202
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1749
│   lb = 2.712284202845884
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1013
└   length(nodes) = 1753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168167
└   sum(fire_plans.plans_per_fire) = 66647
┌ Info: Time check
└   time() - start_time = 1732.1740000247955
┌ Info: Exploring node
└   branch_and_bound_node.ix = 844
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307528
┌ Info: Price and cut time (b-and-b)
└   t = 0.5703867
┌ Info: current bounds
│   node_ix = 844
│   lb = 2.712284202845884
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1014
└   length(nodes) = 1753
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168292
└   sum(fire_plans.plans_per_fire) = 66671
┌ Info: Time check
└   time() - start_time = 1732.7779998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 845
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263737
┌ Info: Price and cut time (b-and-b)
└   t = 0.507012
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 845
│   lb = 2.7122842028458853
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1015
└   length(nodes) = 1755
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168340
└   sum(fire_plans.plans_per_fire) = 66688
┌ Info: Time check
└   time() - start_time = 1733.3369998931885
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1754
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0260827
┌ Info: Price and cut time (b-and-b)
└   t = 1.3554313
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1754
│   lb = 2.7122842028458853
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1016
└   length(nodes) = 1757
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168525
└   sum(fire_plans.plans_per_fire) = 66735
┌ Info: Time check
└   time() - start_time = 1734.7330000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1755
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270928
┌ Info: Price and cut time (b-and-b)
└   t = 1.3176179
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 11, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1755
│   lb = 2.712285392914117
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1017
└   length(nodes) = 1759
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168615
└   sum(fire_plans.plans_per_fire) = 66773
┌ Info: Time check
└   time() - start_time = 1736.085000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1496
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0317318
┌ Info: Price and cut time (b-and-b)
└   t = 0.1978919
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 2, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 2, true)
┌ Info: current bounds
│   node_ix = 1496
│   lb = 2.712285392914117
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1018
└   length(nodes) = 1761
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168621
└   sum(fire_plans.plans_per_fire) = 66781
┌ Info: Time check
└   time() - start_time = 1736.335000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1497
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285066
┌ Info: Price and cut time (b-and-b)
└   t = 1.6922805
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1497
│   lb = 2.7122853929141173
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1019
└   length(nodes) = 1763
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168627
└   sum(fire_plans.plans_per_fire) = 66822
┌ Info: Time check
└   time() - start_time = 1738.0739998817444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1492
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291904
┌ Info: Price and cut time (b-and-b)
└   t = 0.2617311
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1492
│   lb = 2.7122853929141173
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1020
└   length(nodes) = 1765
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168660
└   sum(fire_plans.plans_per_fire) = 66832
┌ Info: Time check
└   time() - start_time = 1738.388000011444
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1493
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0321809
┌ Info: Price and cut time (b-and-b)
└   t = 0.8199256
┌ Info: current bounds
│   node_ix = 1493
│   lb = 2.7122853929141173
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1021
└   length(nodes) = 1765
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168738
└   sum(fire_plans.plans_per_fire) = 66862
┌ Info: Time check
└   time() - start_time = 1739.2469999790192
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1500
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264444
┌ Info: Price and cut time (b-and-b)
└   t = 0.3169543
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(6, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(6, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1500
│   lb = 2.7122853929141173
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1022
└   length(nodes) = 1767
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168763
└   sum(fire_plans.plans_per_fire) = 66874
┌ Info: Time check
└   time() - start_time = 1739.62299990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1501
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.02937
┌ Info: Price and cut time (b-and-b)
└   t = 0.902495
┌ Info: current bounds
│   node_ix = 1501
│   lb = 2.7122864051479736
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1023
└   length(nodes) = 1767
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168862
└   sum(fire_plans.plans_per_fire) = 66905
┌ Info: Time check
└   time() - start_time = 1740.5620000362396
┌ Info: Exploring node
└   branch_and_bound_node.ix = 666
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289593
┌ Info: Price and cut time (b-and-b)
└   t = 0.850904
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 666
│   lb = 2.7122864051479736
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1024
└   length(nodes) = 1769
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 168982
└   sum(fire_plans.plans_per_fire) = 66941
┌ Info: Time check
└   time() - start_time = 1741.4539999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 667
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267479
┌ Info: Price and cut time (b-and-b)
└   t = 1.1563598
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 667
│   lb = 2.7122874935980006
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1025
└   length(nodes) = 1771
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169157
└   sum(fire_plans.plans_per_fire) = 66981
┌ Info: Time check
└   time() - start_time = 1742.664999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1480
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028725
┌ Info: Price and cut time (b-and-b)
└   t = 0.2231015
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1480
│   lb = 2.7122874935980006
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1026
└   length(nodes) = 1773
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169189
└   sum(fire_plans.plans_per_fire) = 66991
┌ Info: Time check
└   time() - start_time = 1742.9289999008179
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1481
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0290754
┌ Info: Price and cut time (b-and-b)
└   t = 0.6135635
┌ Info: current bounds
│   node_ix = 1481
│   lb = 2.7122901232388843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1027
└   length(nodes) = 1773
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169362
└   sum(fire_plans.plans_per_fire) = 67030
┌ Info: Time check
└   time() - start_time = 1743.585000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 984
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263268
┌ Info: Price and cut time (b-and-b)
└   t = 0.3148295
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 984
│   lb = 2.7122901232388843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1028
└   length(nodes) = 1775
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169427
└   sum(fire_plans.plans_per_fire) = 67045
┌ Info: Time check
└   time() - start_time = 1743.9459998607635
┌ Info: Exploring node
└   branch_and_bound_node.ix = 985
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0270758
┌ Info: Price and cut time (b-and-b)
└   t = 1.5238009
┌ Info: current bounds
│   node_ix = 985
│   lb = 2.7122907548292554
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1029
└   length(nodes) = 1775
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169599
└   sum(fire_plans.plans_per_fire) = 67117
┌ Info: Time check
└   time() - start_time = 1745.5120000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1410
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0310837
┌ Info: Price and cut time (b-and-b)
└   t = 1.1663112
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(5, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(5, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1410
│   lb = 2.7122907548292554
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1030
└   length(nodes) = 1777
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169633
└   sum(fire_plans.plans_per_fire) = 67154
┌ Info: Time check
└   time() - start_time = 1746.7170000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1411
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267103
┌ Info: Price and cut time (b-and-b)
└   t = 1.1357387
┌ Info: current bounds
│   node_ix = 1411
│   lb = 2.7122924811705227
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1031
└   length(nodes) = 1777
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169843
└   sum(fire_plans.plans_per_fire) = 67213
┌ Info: Time check
└   time() - start_time = 1747.9070000648499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 558
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0257182
┌ Info: Price and cut time (b-and-b)
└   t = 1.3954342
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 558
│   lb = 2.7122924811705227
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1032
└   length(nodes) = 1779
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 169963
└   sum(fire_plans.plans_per_fire) = 67260
┌ Info: Time check
└   time() - start_time = 1749.3399999141693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 559
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0262906
┌ Info: Price and cut time (b-and-b)
└   t = 1.4323597
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 559
│   lb = 2.712295294427155
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1033
└   length(nodes) = 1781
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170045
└   sum(fire_plans.plans_per_fire) = 67304
┌ Info: Time check
└   time() - start_time = 1750.8159999847412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 628
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280994
┌ Info: Price and cut time (b-and-b)
└   t = 1.310289
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 628
│   lb = 2.712295294427155
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1034
└   length(nodes) = 1783
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170082
└   sum(fire_plans.plans_per_fire) = 67333
┌ Info: Time check
└   time() - start_time = 1752.1619999408722
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1782
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0265676
┌ Info: Price and cut time (b-and-b)
└   t = 1.3181202
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 15, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 16, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1782
│   lb = 2.712295294427155
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1035
└   length(nodes) = 1785
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170162
└   sum(fire_plans.plans_per_fire) = 67371
┌ Info: Time check
└   time() - start_time = 1753.5360000133514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1783
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251709
┌ Info: Price and cut time (b-and-b)
└   t = 0.515513
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 14, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 15, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1783
│   lb = 2.712295294427155
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1036
└   length(nodes) = 1787
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170214
└   sum(fire_plans.plans_per_fire) = 67389
┌ Info: Time check
└   time() - start_time = 1754.085000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 629
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 15, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0467887
┌ Info: Price and cut time (b-and-b)
└   t = 1.2314451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 629
│   lb = 2.71231045129942
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1037
└   length(nodes) = 1789
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170296
└   sum(fire_plans.plans_per_fire) = 67417
┌ Info: Time check
└   time() - start_time = 1755.3899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1734
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0251898
┌ Info: Price and cut time (b-and-b)
└   t = 0.827589
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1734
│   lb = 2.71231045129942
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1038
└   length(nodes) = 1791
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170302
└   sum(fire_plans.plans_per_fire) = 67446
┌ Info: Time check
└   time() - start_time = 1756.24799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1735
┌ Info: rules
│   crew_rules =
│    4-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, false)
│     CrewSupplyBranchingRule(1, 3, 1, false)
│     CrewSupplyBranchingRule(16, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1345381
┌ Info: Price and cut time (b-and-b)
└   t = 0.8078365
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1735
│   lb = 2.7123135286973827
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1039
└   length(nodes) = 1793
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170308
└   sum(fire_plans.plans_per_fire) = 67472
┌ Info: Time check
└   time() - start_time = 1757.2039999961853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1152
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026404
┌ Info: Price and cut time (b-and-b)
└   t = 0.7367144
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1152
│   lb = 2.7123135286973827
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1040
└   length(nodes) = 1795
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170352
└   sum(fire_plans.plans_per_fire) = 67493
┌ Info: Time check
└   time() - start_time = 1757.9939999580383
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1153
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0275264
┌ Info: Price and cut time (b-and-b)
└   t = 0.8520663
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1153
│   lb = 2.712326172173969
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1041
└   length(nodes) = 1797
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170428
└   sum(fire_plans.plans_per_fire) = 67537
┌ Info: Time check
└   time() - start_time = 1758.8899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 490
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0312483
┌ Info: Price and cut time (b-and-b)
└   t = 0.9162683
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 490
│   lb = 2.712326172173969
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1042
└   length(nodes) = 1799
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170500
└   sum(fire_plans.plans_per_fire) = 67573
┌ Info: Time check
└   time() - start_time = 1759.8580000400543
┌ Info: Exploring node
└   branch_and_bound_node.ix = 491
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0311946
┌ Info: Price and cut time (b-and-b)
└   t = 0.7026564
┌ Info: current bounds
│   node_ix = 491
│   lb = 2.7123322193970436
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1043
└   length(nodes) = 1799
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170591
└   sum(fire_plans.plans_per_fire) = 67618
┌ Info: Time check
└   time() - start_time = 1760.6110000610352
┌ Info: Exploring node
└   branch_and_bound_node.ix = 472
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271515
┌ Info: Price and cut time (b-and-b)
└   t = 0.6045329
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 4, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 4, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 472
│   lb = 2.7123322193970436
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1044
└   length(nodes) = 1801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170656
└   sum(fire_plans.plans_per_fire) = 67646
┌ Info: Time check
└   time() - start_time = 1761.25
┌ Info: Exploring node
└   branch_and_bound_node.ix = 473
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.027176
┌ Info: Price and cut time (b-and-b)
└   t = 1.1447219
┌ Info: current bounds
│   node_ix = 473
│   lb = 2.7123379003945627
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1045
└   length(nodes) = 1801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 170913
└   sum(fire_plans.plans_per_fire) = 67704
┌ Info: Time check
└   time() - start_time = 1762.4389998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1026
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261121
┌ Info: Price and cut time (b-and-b)
└   t = 0.5453643
┌ Info: current bounds
│   node_ix = 1026
│   lb = 2.7123379003945627
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1046
└   length(nodes) = 1801
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171002
└   sum(fire_plans.plans_per_fire) = 67728
┌ Info: Time check
└   time() - start_time = 1763.016000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1027
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    13-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267009
┌ Info: Price and cut time (b-and-b)
└   t = 0.989368
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1027
│   lb = 2.7123379779378243
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1047
└   length(nodes) = 1803
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171156
└   sum(fire_plans.plans_per_fire) = 67776
┌ Info: Time check
└   time() - start_time = 1764.0650000572205
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1418
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 11, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273783
┌ Info: Price and cut time (b-and-b)
└   t = 0.4925032
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1418
│   lb = 2.7123379779378243
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1048
└   length(nodes) = 1805
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171180
└   sum(fire_plans.plans_per_fire) = 67787
┌ Info: Time check
└   time() - start_time = 1764.598000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1419
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 12, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 3, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 12, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0286631
┌ Info: Price and cut time (b-and-b)
└   t = 0.6325935
┌ Info: current bounds
│   node_ix = 1419
│   lb = 2.712345962260374
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1049
└   length(nodes) = 1805
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171364
└   sum(fire_plans.plans_per_fire) = 67825
┌ Info: Time check
└   time() - start_time = 1765.2690000534058
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1504
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.029646
┌ Info: Price and cut time (b-and-b)
└   t = 0.41646
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1504
│   lb = 2.712345962260374
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1050
└   length(nodes) = 1807
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171433
└   sum(fire_plans.plans_per_fire) = 67835
┌ Info: Time check
└   time() - start_time = 1765.7289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1505
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0301836
┌ Info: Price and cut time (b-and-b)
└   t = 1.1240916
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1505
│   lb = 2.712349935338876
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1051
└   length(nodes) = 1809
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171590
└   sum(fire_plans.plans_per_fire) = 67882
┌ Info: Time check
└   time() - start_time = 1766.9029998779297
┌ Info: Exploring node
└   branch_and_bound_node.ix = 238
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.025684
┌ Info: Price and cut time (b-and-b)
└   t = 1.2970331
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 238
│   lb = 2.712349935338876
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1052
└   length(nodes) = 1811
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171692
└   sum(fire_plans.plans_per_fire) = 67915
┌ Info: Time check
└   time() - start_time = 1768.25
┌ Info: Exploring node
└   branch_and_bound_node.ix = 239
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.026033
┌ Info: Price and cut time (b-and-b)
└   t = 1.0391275
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 239
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1053
└   length(nodes) = 1813
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171871
└   sum(fire_plans.plans_per_fire) = 67946
┌ Info: Time check
└   time() - start_time = 1769.3269999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1020
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0277601
┌ Info: Price and cut time (b-and-b)
└   t = 0.602287
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1020
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1054
└   length(nodes) = 1815
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171892
└   sum(fire_plans.plans_per_fire) = 67962
┌ Info: Time check
└   time() - start_time = 1769.973000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1021
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0285927
┌ Info: Price and cut time (b-and-b)
└   t = 0.5389425
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1021
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1055
└   length(nodes) = 1817
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171916
└   sum(fire_plans.plans_per_fire) = 67976
┌ Info: Time check
└   time() - start_time = 1770.5699999332428
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1816
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271873
┌ Info: Price and cut time (b-and-b)
└   t = 0.4959902
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1816
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1056
└   length(nodes) = 1819
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171946
└   sum(fire_plans.plans_per_fire) = 67995
┌ Info: Time check
└   time() - start_time = 1771.0999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1817
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0261684
┌ Info: Price and cut time (b-and-b)
└   t = 1.0599805
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(3, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(3, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1817
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1057
└   length(nodes) = 1821
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 171999
└   sum(fire_plans.plans_per_fire) = 68027
┌ Info: Time check
└   time() - start_time = 1772.210000038147
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1814
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295134
┌ Info: Price and cut time (b-and-b)
└   t = 0.6640521
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1814
│   lb = 2.712362682869089
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1058
└   length(nodes) = 1823
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172038
└   sum(fire_plans.plans_per_fire) = 68048
┌ Info: Time check
└   time() - start_time = 1772.9179999828339
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1815
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│   fire_rules =
│    15-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0326722
┌ Info: Price and cut time (b-and-b)
└   t = 1.094463
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1815
│   lb = 2.7123640118862773
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1059
└   length(nodes) = 1825
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172081
└   sum(fire_plans.plans_per_fire) = 68083
┌ Info: Time check
└   time() - start_time = 1774.066999912262
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1224
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0302517
┌ Info: Price and cut time (b-and-b)
└   t = 0.2742466
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(13, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(13, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1224
│   lb = 2.7123640118862773
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1060
└   length(nodes) = 1827
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172101
└   sum(fire_plans.plans_per_fire) = 68093
┌ Info: Time check
└   time() - start_time = 1774.3970000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1225
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0307477
┌ Info: Price and cut time (b-and-b)
└   t = 0.9176848
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 12, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 13, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1225
│   lb = 2.7123652816821453
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1061
└   length(nodes) = 1829
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172215
└   sum(fire_plans.plans_per_fire) = 68131
┌ Info: Time check
└   time() - start_time = 1775.3680000305176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 330
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0233529
┌ Info: Price and cut time (b-and-b)
└   t = 0.8331622
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 330
│   lb = 2.7123652816821453
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1062
└   length(nodes) = 1831
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172314
└   sum(fire_plans.plans_per_fire) = 68165
┌ Info: Time check
└   time() - start_time = 1776.231999874115
┌ Info: Exploring node
└   branch_and_bound_node.ix = 331
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0213568
┌ Info: Price and cut time (b-and-b)
└   t = 1.480043
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 331
│   lb = 2.712373477816408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1063
└   length(nodes) = 1833
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172594
└   sum(fire_plans.plans_per_fire) = 68231
┌ Info: Time check
└   time() - start_time = 1777.75
┌ Info: Exploring node
└   branch_and_bound_node.ix = 990
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 13, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1328149
┌ Info: Price and cut time (b-and-b)
└   t = 1.3771538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 990
│   lb = 2.712373477816408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1064
└   length(nodes) = 1835
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172600
└   sum(fire_plans.plans_per_fire) = 68271
┌ Info: Time check
└   time() - start_time = 1779.2720000743866
┌ Info: Exploring node
└   branch_and_bound_node.ix = 991
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 10, 14, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.1439809
┌ Info: Price and cut time (b-and-b)
└   t = 1.1591903
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 991
│   lb = 2.712373477816408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1065
└   length(nodes) = 1837
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172606
└   sum(fire_plans.plans_per_fire) = 68311
┌ Info: Time check
└   time() - start_time = 1780.5889999866486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 994
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0264266
┌ Info: Price and cut time (b-and-b)
└   t = 1.077963
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 994
│   lb = 2.712373477816408
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1066
└   length(nodes) = 1839
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172684
└   sum(fire_plans.plans_per_fire) = 68340
┌ Info: Time check
└   time() - start_time = 1781.7179999351501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 995
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, true)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028377
┌ Info: Price and cut time (b-and-b)
└   t = 0.4364516
┌ Info: current bounds
│   node_ix = 995
│   lb = 2.7123734778164086
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1067
└   length(nodes) = 1839
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172788
└   sum(fire_plans.plans_per_fire) = 68357
┌ Info: Time check
└   time() - start_time = 1782.1889998912811
┌ Info: Exploring node
└   branch_and_bound_node.ix = 998
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0267337
┌ Info: Price and cut time (b-and-b)
└   t = 1.8634807
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 998
│   lb = 2.7123734778164086
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1068
└   length(nodes) = 1841
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172844
└   sum(fire_plans.plans_per_fire) = 68398
┌ Info: Time check
└   time() - start_time = 1784.0999999046326
┌ Info: Exploring node
└   branch_and_bound_node.ix = 999
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(7, 3, 1, false)
│     CrewSupplyBranchingRule(5, 3, 1, false)
│   fire_rules =
│    14-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(4, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(4, 4, 15, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287363
┌ Info: Price and cut time (b-and-b)
└   t = 0.6200894
┌ Info: current bounds
│   node_ix = 999
│   lb = 2.7123798881358843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1069
└   length(nodes) = 1841
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 172886
└   sum(fire_plans.plans_per_fire) = 68420
┌ Info: Time check
└   time() - start_time = 1784.7709999084473
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1490
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0289818
┌ Info: Price and cut time (b-and-b)
└   t = 1.3164207
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1490
│   lb = 2.7123798881358843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1070
└   length(nodes) = 1843
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173014
└   sum(fire_plans.plans_per_fire) = 68456
┌ Info: Time check
└   time() - start_time = 1786.1310000419617
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1491
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, true)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0287361
┌ Info: Price and cut time (b-and-b)
└   t = 0.7657739
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(4, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(4, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1491
│   lb = 2.7123798881358843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1071
└   length(nodes) = 1845
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173062
└   sum(fire_plans.plans_per_fire) = 68478
┌ Info: Time check
└   time() - start_time = 1786.954999923706
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1494
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0295314
┌ Info: Price and cut time (b-and-b)
└   t = 1.1776819
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1494
│   lb = 2.7123798881358843
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1072
└   length(nodes) = 1847
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173068
└   sum(fire_plans.plans_per_fire) = 68511
┌ Info: Time check
└   time() - start_time = 1788.1779999732971
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1495
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, true)
│     CrewSupplyBranchingRule(3, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028624
┌ Info: Price and cut time (b-and-b)
└   t = 0.8676707
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1495
│   lb = 2.7123798881358847
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1073
└   length(nodes) = 1849
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173074
└   sum(fire_plans.plans_per_fire) = 68539
┌ Info: Time check
└   time() - start_time = 1789.0920000076294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1498
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 12, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.028672
┌ Info: Price and cut time (b-and-b)
└   t = 0.8809819
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1498
│   lb = 2.7123798881358847
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1074
└   length(nodes) = 1851
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173178
└   sum(fire_plans.plans_per_fire) = 68566
┌ Info: Time check
└   time() - start_time = 1790.0249998569489
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1499
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(13, 3, 1, false)
│   fire_rules =
│    18-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 13, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0271777
┌ Info: Price and cut time (b-and-b)
└   t = 1.0980633
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1499
│   lb = 2.712380753570695
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1075
└   length(nodes) = 1853
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173239
└   sum(fire_plans.plans_per_fire) = 68597
┌ Info: Time check
└   time() - start_time = 1791.1589999198914
┌ Info: Exploring node
└   branch_and_bound_node.ix = 286
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0280489
┌ Info: Price and cut time (b-and-b)
└   t = 0.5442625
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 286
│   lb = 2.712380753570695
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1076
└   length(nodes) = 1855
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173306
└   sum(fire_plans.plans_per_fire) = 68617
┌ Info: Time check
└   time() - start_time = 1791.74799990654
┌ Info: Exploring node
└   branch_and_bound_node.ix = 287
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0266272
┌ Info: Price and cut time (b-and-b)
└   t = 1.0664858
┌ Info: current bounds
│   node_ix = 287
│   lb = 2.712381016367309
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1077
└   length(nodes) = 1855
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173589
└   sum(fire_plans.plans_per_fire) = 68677
┌ Info: Time check
└   time() - start_time = 1792.848000049591
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1034
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.023377
┌ Info: Price and cut time (b-and-b)
└   t = 0.7002859
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1034
│   lb = 2.712381016367309
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1078
└   length(nodes) = 1857
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173681
└   sum(fire_plans.plans_per_fire) = 68711
┌ Info: Time check
└   time() - start_time = 1793.5969998836517
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1035
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(6, 1, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 10, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0252981
┌ Info: Price and cut time (b-and-b)
└   t = 0.5967674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1035
│   lb = 2.7123931547873346
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1079
└   length(nodes) = 1859
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173745
└   sum(fire_plans.plans_per_fire) = 68731
┌ Info: Time check
└   time() - start_time = 1794.2289998531342
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1372
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0284465
┌ Info: Price and cut time (b-and-b)
└   t = 0.8560875
┌ Info: current bounds
│   node_ix = 1372
│   lb = 2.7123931547873346
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1080
└   length(nodes) = 1859
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173751
└   sum(fire_plans.plans_per_fire) = 68752
┌ Info: Time check
└   time() - start_time = 1795.1370000839233
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1373
┌ Info: rules
│   crew_rules =
│    2-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, false)
│     CrewSupplyBranchingRule(13, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0416921
┌ Info: Price and cut time (b-and-b)
└   t = 0.5075119
┌ Info: current bounds
│   node_ix = 1373
│   lb = 2.712393154787335
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1081
└   length(nodes) = 1859
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173757
└   sum(fire_plans.plans_per_fire) = 68773
┌ Info: Time check
└   time() - start_time = 1795.7019999027252
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1358
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0294333
┌ Info: Price and cut time (b-and-b)
└   t = 0.5798471
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1358
│   lb = 2.712393154787335
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1082
└   length(nodes) = 1861
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173819
└   sum(fire_plans.plans_per_fire) = 68791
┌ Info: Time check
└   time() - start_time = 1796.3259999752045
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1359
┌ Info: rules
│   crew_rules =
│    1-element Vector{CrewSupplyBranchingRule}:
│     CrewSupplyBranchingRule(14, 3, 1, true)
│   fire_rules =
│    16-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(5, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 8, 10, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 8, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 9, 9, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291507
┌ Info: Price and cut time (b-and-b)
└   t = 0.3924813
┌ Info: current bounds
│   node_ix = 1359
│   lb = 2.712397842266544
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1083
└   length(nodes) = 1861
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173858
└   sum(fire_plans.plans_per_fire) = 68807
┌ Info: Time check
└   time() - start_time = 1796.7639999389648
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1120
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0291841
┌ Info: Price and cut time (b-and-b)
└   t = 1.1677982
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1120
│   lb = 2.712397842266544
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1084
└   length(nodes) = 1863
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 173967
└   sum(fire_plans.plans_per_fire) = 68847
┌ Info: Time check
└   time() - start_time = 1797.983999967575
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1121
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 11, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 5, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 6, "less_than_or_equal")
│     FireDemandBranchingRule(5, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0263994
┌ Info: Price and cut time (b-and-b)
└   t = 0.8299925
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(14, 3, 1, false)
└   right_branching_rule = CrewSupplyBranchingRule(14, 3, 1, true)
┌ Info: current bounds
│   node_ix = 1121
│   lb = 2.7124004599287357
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1085
└   length(nodes) = 1865
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174007
└   sum(fire_plans.plans_per_fire) = 68866
┌ Info: Time check
└   time() - start_time = 1798.845999956131
┌ Info: Exploring node
└   branch_and_bound_node.ix = 640
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0249826
┌ Info: Price and cut time (b-and-b)
└   t = 0.7509817
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(5, 8, 11, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(5, 8, 12, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 640
│   lb = 2.7124004599287357
└   ub = 2.7148342825001577
┌ Info: number of nodes
│   node_explored_count = 1086
└   length(nodes) = 1867
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 174086
└   sum(fire_plans.plans_per_fire) = 68888
┌ Info: Time check
└   time() - start_time = 1799.641000032425
┌ Info: Exploring node
└   branch_and_bound_node.ix = 641
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(4, 1, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(6, 1, 4, "less_than_or_equal")
│     FireDemandBranchingRule(5, 4, 10, "less_than_or_equal")
│     FireDemandBranchingRule(5, 5, 9, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(5, 6, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 7, 10, "greater_than_or_equal")
│     FireDemandBranchingRule(5, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0273991
┌ Info: Price and cut time (b-and-b)
└   t = 0.741196
[ Info: Full time limit reached
