[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 0.18900012969970703
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0081093
┌ Info: Price and cut time (b-and-b)
└   t = 0.4782074
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 352
└   sum(fire_plans.plans_per_fire) = 122
┌ Info: Time check
└   time() - start_time = 0.6800000667572021
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0122995
┌ Info: Price and cut time (b-and-b)
└   t = 0.2754526
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 2
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 5
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 385
└   sum(fire_plans.plans_per_fire) = 164
┌ Info: Time check
└   time() - start_time = 0.9810001850128174
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0108078
┌ Info: Price and cut time (b-and-b)
└   t = 0.1228856
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 3
│   lb = 1.1394932911329647
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 7
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 428
└   sum(fire_plans.plans_per_fire) = 182
┌ Info: Time check
└   time() - start_time = 1.125
┌ Info: Exploring node
└   branch_and_bound_node.ix = 4
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0097904
┌ Info: Price and cut time (b-and-b)
└   t = 0.2169502
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 4
│   lb = 1.1394932911329647
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 4
└   length(nodes) = 9
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 460
└   sum(fire_plans.plans_per_fire) = 209
┌ Info: Time check
└   time() - start_time = 1.3580000400543213
┌ Info: Exploring node
└   branch_and_bound_node.ix = 5
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0096587
┌ Info: Price and cut time (b-and-b)
└   t = 0.2421439
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 5
│   lb = 1.1400216063449233
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 5
└   length(nodes) = 11
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 492
└   sum(fire_plans.plans_per_fire) = 242
┌ Info: Time check
└   time() - start_time = 1.6070001125335693
┌ Info: Exploring node
└   branch_and_bound_node.ix = 8
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0125692
┌ Info: Price and cut time (b-and-b)
└   t = 0.0527839
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 8
│   lb = 1.1400216063449233
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 6
└   length(nodes) = 13
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 521
└   sum(fire_plans.plans_per_fire) = 249
┌ Info: Time check
└   time() - start_time = 1.6750001907348633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 9
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105011
┌ Info: Price and cut time (b-and-b)
└   t = 0.219416
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 9
│   lb = 1.1412974329150785
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 7
└   length(nodes) = 15
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 572
└   sum(fire_plans.plans_per_fire) = 280
┌ Info: Time check
└   time() - start_time = 1.9220001697540283
┌ Info: Exploring node
└   branch_and_bound_node.ix = 12
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105963
┌ Info: Price and cut time (b-and-b)
└   t = 0.112192
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 12
│   lb = 1.1412974329150785
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 8
└   length(nodes) = 17
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 596
└   sum(fire_plans.plans_per_fire) = 293
┌ Info: Time check
└   time() - start_time = 2.0490000247955322
┌ Info: Exploring node
└   branch_and_bound_node.ix = 13
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011939
┌ Info: Price and cut time (b-and-b)
└   t = 0.2343491
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 13
│   lb = 1.1425566883442646
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 9
└   length(nodes) = 19
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 628
└   sum(fire_plans.plans_per_fire) = 312
┌ Info: Time check
└   time() - start_time = 2.2990000247955322
┌ Info: Exploring node
└   branch_and_bound_node.ix = 16
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100519
┌ Info: Price and cut time (b-and-b)
└   t = 0.153376
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 16
│   lb = 1.1425566883442646
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 10
└   length(nodes) = 21
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 663
└   sum(fire_plans.plans_per_fire) = 331
┌ Info: Time check
└   time() - start_time = 2.4560000896453857
┌ Info: Exploring node
└   branch_and_bound_node.ix = 17
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0143765
┌ Info: Price and cut time (b-and-b)
└   t = 0.2514623
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 17
│   lb = 1.142589553658512
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 11
└   length(nodes) = 23
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 736
└   sum(fire_plans.plans_per_fire) = 361
┌ Info: Time check
└   time() - start_time = 2.7339999675750732
┌ Info: Exploring node
└   branch_and_bound_node.ix = 18
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0108019
┌ Info: Price and cut time (b-and-b)
└   t = 0.2105506
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 18
│   lb = 1.142589553658512
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 12
└   length(nodes) = 25
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 763
└   sum(fire_plans.plans_per_fire) = 385
┌ Info: Time check
└   time() - start_time = 2.953000068664551
┌ Info: Exploring node
└   branch_and_bound_node.ix = 19
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102858
┌ Info: Price and cut time (b-and-b)
└   t = 0.1303705
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 19
│   lb = 1.1428186717848638
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 13
└   length(nodes) = 27
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 808
└   sum(fire_plans.plans_per_fire) = 400
┌ Info: Time check
└   time() - start_time = 3.1040000915527344
┌ Info: Exploring node
└   branch_and_bound_node.ix = 26
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115921
┌ Info: Price and cut time (b-and-b)
└   t = 0.0728162
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 26
│   lb = 1.1428186717848638
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 14
└   length(nodes) = 29
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 819
└   sum(fire_plans.plans_per_fire) = 409
┌ Info: Time check
└   time() - start_time = 3.2009999752044678
┌ Info: Exploring node
└   branch_and_bound_node.ix = 27
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107455
┌ Info: Price and cut time (b-and-b)
└   t = 0.2038178
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 27
│   lb = 1.1430907935480137
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 15
└   length(nodes) = 31
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 852
└   sum(fire_plans.plans_per_fire) = 433
┌ Info: Time check
└   time() - start_time = 3.4210000038146973
┌ Info: Exploring node
└   branch_and_bound_node.ix = 6
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0097649
┌ Info: Price and cut time (b-and-b)
└   t = 0.1837717
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 6
│   lb = 1.1430907935480137
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 16
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 881
└   sum(fire_plans.plans_per_fire) = 458
┌ Info: Time check
└   time() - start_time = 3.616000175476074
┌ Info: Exploring node
└   branch_and_bound_node.ix = 7
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0096339
┌ Info: Price and cut time (b-and-b)
└   t = 0.2517156
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 7
│   lb = 1.1434420258439608
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 17
└   length(nodes) = 35
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 957
└   sum(fire_plans.plans_per_fire) = 499
┌ Info: Time check
└   time() - start_time = 3.876000165939331
┌ Info: Exploring node
└   branch_and_bound_node.ix = 20
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0144722
┌ Info: Price and cut time (b-and-b)
└   t = 0.0801533
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 20
│   lb = 1.1434420258439608
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 18
└   length(nodes) = 37
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 967
└   sum(fire_plans.plans_per_fire) = 507
┌ Info: Time check
└   time() - start_time = 3.9850001335144043
┌ Info: Exploring node
└   branch_and_bound_node.ix = 21
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0137039
┌ Info: Price and cut time (b-and-b)
└   t = 0.2164448
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 21
│   lb = 1.1435589719334984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 19
└   length(nodes) = 39
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1020
└   sum(fire_plans.plans_per_fire) = 530
┌ Info: Time check
└   time() - start_time = 4.2200000286102295
┌ Info: Exploring node
└   branch_and_bound_node.ix = 24
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0140972
┌ Info: Price and cut time (b-and-b)
└   t = 0.05543
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 24
│   lb = 1.1435589719334984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 20
└   length(nodes) = 41
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1030
└   sum(fire_plans.plans_per_fire) = 536
┌ Info: Time check
└   time() - start_time = 4.299000024795532
┌ Info: Exploring node
└   branch_and_bound_node.ix = 25
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109956
┌ Info: Price and cut time (b-and-b)
└   t = 0.1979792
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 25
│   lb = 1.1440083301212471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 21
└   length(nodes) = 43
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1112
└   sum(fire_plans.plans_per_fire) = 559
┌ Info: Time check
└   time() - start_time = 4.51800012588501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 40
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.012125
┌ Info: Price and cut time (b-and-b)
└   t = 0.1736562
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 40
│   lb = 1.1440083301212471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 22
└   length(nodes) = 45
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1152
└   sum(fire_plans.plans_per_fire) = 587
┌ Info: Time check
└   time() - start_time = 4.708000183105469
┌ Info: Exploring node
└   branch_and_bound_node.ix = 41
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0153938
┌ Info: Price and cut time (b-and-b)
└   t = 0.1827702
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 41
│   lb = 1.1443277432577144
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 23
└   length(nodes) = 47
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1166
└   sum(fire_plans.plans_per_fire) = 608
┌ Info: Time check
└   time() - start_time = 4.9049999713897705
┌ Info: Exploring node
└   branch_and_bound_node.ix = 14
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0129134
┌ Info: Price and cut time (b-and-b)
└   t = 0.1310151
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 14
│   lb = 1.1443277432577144
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 24
└   length(nodes) = 49
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1201
└   sum(fire_plans.plans_per_fire) = 631
┌ Info: Time check
└   time() - start_time = 5.06000018119812
┌ Info: Exploring node
└   branch_and_bound_node.ix = 15
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0099654
┌ Info: Price and cut time (b-and-b)
└   t = 0.3254066
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 15
│   lb = 1.1445150816742728
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 25
└   length(nodes) = 51
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1331
└   sum(fire_plans.plans_per_fire) = 686
┌ Info: Time check
└   time() - start_time = 5.398000001907349
┌ Info: Exploring node
└   branch_and_bound_node.ix = 22
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0112195
┌ Info: Price and cut time (b-and-b)
└   t = 0.1459217
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 22
│   lb = 1.1445150816742728
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 26
└   length(nodes) = 53
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1350
└   sum(fire_plans.plans_per_fire) = 701
┌ Info: Time check
└   time() - start_time = 5.564000129699707
┌ Info: Exploring node
└   branch_and_bound_node.ix = 23
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102915
┌ Info: Price and cut time (b-and-b)
└   t = 0.144185
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 23
│   lb = 1.144663188839368
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 27
└   length(nodes) = 55
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1371
└   sum(fire_plans.plans_per_fire) = 718
┌ Info: Time check
└   time() - start_time = 5.710000038146973
┌ Info: Exploring node
└   branch_and_bound_node.ix = 32
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103238
┌ Info: Price and cut time (b-and-b)
└   t = 0.1099642
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 32
│   lb = 1.144663188839368
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 28
└   length(nodes) = 57
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1411
└   sum(fire_plans.plans_per_fire) = 736
┌ Info: Time check
└   time() - start_time = 5.8440001010894775
┌ Info: Exploring node
└   branch_and_bound_node.ix = 33
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0111859
┌ Info: Price and cut time (b-and-b)
└   t = 0.1625281
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 33
│   lb = 1.1450370656700721
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 29
└   length(nodes) = 59
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1498
└   sum(fire_plans.plans_per_fire) = 769
┌ Info: Time check
└   time() - start_time = 6.027000188827515
┌ Info: Exploring node
└   branch_and_bound_node.ix = 10
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098946
┌ Info: Price and cut time (b-and-b)
└   t = 0.1362062
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 10
│   lb = 1.1450370656700721
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 30
└   length(nodes) = 61
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1515
└   sum(fire_plans.plans_per_fire) = 789
┌ Info: Time check
└   time() - start_time = 6.176000118255615
┌ Info: Exploring node
└   branch_and_bound_node.ix = 11
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114672
┌ Info: Price and cut time (b-and-b)
└   t = 0.1764681
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 11
│   lb = 1.145295998249471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 31
└   length(nodes) = 63
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1548
└   sum(fire_plans.plans_per_fire) = 813
┌ Info: Time check
└   time() - start_time = 6.374000072479248
┌ Info: Exploring node
└   branch_and_bound_node.ix = 52
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102763
┌ Info: Price and cut time (b-and-b)
└   t = 0.1487738
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 52
│   lb = 1.145295998249471
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 32
└   length(nodes) = 65
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1583
└   sum(fire_plans.plans_per_fire) = 828
┌ Info: Time check
└   time() - start_time = 6.538000106811523
┌ Info: Exploring node
└   branch_and_bound_node.ix = 53
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116409
┌ Info: Price and cut time (b-and-b)
└   t = 0.1093282
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 53
│   lb = 1.1453254820913483
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 33
└   length(nodes) = 67
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1640
└   sum(fire_plans.plans_per_fire) = 839
┌ Info: Time check
└   time() - start_time = 6.6620001792907715
┌ Info: Exploring node
└   branch_and_bound_node.ix = 56
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100969
┌ Info: Price and cut time (b-and-b)
└   t = 0.0707749
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 56
│   lb = 1.1453254820913483
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 34
└   length(nodes) = 69
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1670
└   sum(fire_plans.plans_per_fire) = 852
┌ Info: Time check
└   time() - start_time = 6.755000114440918
┌ Info: Exploring node
└   branch_and_bound_node.ix = 57
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011752
┌ Info: Price and cut time (b-and-b)
└   t = 0.2239885
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 57
│   lb = 1.1453725520003326
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 35
└   length(nodes) = 71
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1720
└   sum(fire_plans.plans_per_fire) = 886
┌ Info: Time check
└   time() - start_time = 6.996000051498413
┌ Info: Exploring node
└   branch_and_bound_node.ix = 60
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0134983
┌ Info: Price and cut time (b-and-b)
└   t = 0.0724114
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 60
│   lb = 1.1453725520003326
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 36
└   length(nodes) = 73
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1748
└   sum(fire_plans.plans_per_fire) = 895
┌ Info: Time check
└   time() - start_time = 7.085999965667725
┌ Info: Exploring node
└   branch_and_bound_node.ix = 61
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101403
┌ Info: Price and cut time (b-and-b)
└   t = 0.2337568
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 61
│   lb = 1.1453887837742394
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 37
└   length(nodes) = 75
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1791
└   sum(fire_plans.plans_per_fire) = 923
┌ Info: Time check
└   time() - start_time = 7.333000183105469
┌ Info: Exploring node
└   branch_and_bound_node.ix = 34
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104548
┌ Info: Price and cut time (b-and-b)
└   t = 0.2293806
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 34
│   lb = 1.1453887837742394
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 38
└   length(nodes) = 77
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1845
└   sum(fire_plans.plans_per_fire) = 952
┌ Info: Time check
└   time() - start_time = 7.571000099182129
┌ Info: Exploring node
└   branch_and_bound_node.ix = 35
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116514
┌ Info: Price and cut time (b-and-b)
└   t = 0.143405
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 35
│   lb = 1.145416331992123
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 39
└   length(nodes) = 79
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1931
└   sum(fire_plans.plans_per_fire) = 978
┌ Info: Time check
└   time() - start_time = 7.738000154495239
┌ Info: Exploring node
└   branch_and_bound_node.ix = 36
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104554
┌ Info: Price and cut time (b-and-b)
└   t = 0.1508615
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 36
│   lb = 1.145416331992123
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 40
└   length(nodes) = 81
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1957
└   sum(fire_plans.plans_per_fire) = 996
┌ Info: Time check
└   time() - start_time = 7.903000116348267
┌ Info: Exploring node
└   branch_and_bound_node.ix = 37
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104178
┌ Info: Price and cut time (b-and-b)
└   t = 0.1451809
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 37
│   lb = 1.1460669764956979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 41
└   length(nodes) = 83
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1974
└   sum(fire_plans.plans_per_fire) = 1011
┌ Info: Time check
└   time() - start_time = 8.057000160217285
┌ Info: Exploring node
└   branch_and_bound_node.ix = 48
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102583
┌ Info: Price and cut time (b-and-b)
└   t = 0.1216503
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 48
│   lb = 1.1460669764956979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 42
└   length(nodes) = 85
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1984
└   sum(fire_plans.plans_per_fire) = 1028
┌ Info: Time check
└   time() - start_time = 8.190000057220459
┌ Info: Exploring node
└   branch_and_bound_node.ix = 49
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103179
┌ Info: Price and cut time (b-and-b)
└   t = 0.1673599
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 49
│   lb = 1.1460699632362816
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 43
└   length(nodes) = 87
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2008
└   sum(fire_plans.plans_per_fire) = 1056
┌ Info: Time check
└   time() - start_time = 8.386000156402588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 28
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102867
┌ Info: Price and cut time (b-and-b)
└   t = 0.1730471
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 28
│   lb = 1.1460699632362816
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 44
└   length(nodes) = 89
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2025
└   sum(fire_plans.plans_per_fire) = 1078
┌ Info: Time check
└   time() - start_time = 8.570000171661377
┌ Info: Exploring node
└   branch_and_bound_node.ix = 29
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117617
┌ Info: Price and cut time (b-and-b)
└   t = 0.1080936
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 29
│   lb = 1.1462386666504847
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 45
└   length(nodes) = 91
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2049
└   sum(fire_plans.plans_per_fire) = 1091
┌ Info: Time check
└   time() - start_time = 8.690000057220459
┌ Info: Exploring node
└   branch_and_bound_node.ix = 44
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115445
┌ Info: Price and cut time (b-and-b)
└   t = 0.1233216
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 44
│   lb = 1.1462386666504847
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 46
└   length(nodes) = 93
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2070
└   sum(fire_plans.plans_per_fire) = 1110
┌ Info: Time check
└   time() - start_time = 8.83899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 45
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104068
┌ Info: Price and cut time (b-and-b)
└   t = 0.2088539
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 45
│   lb = 1.1462869208508457
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 47
└   length(nodes) = 95
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2109
└   sum(fire_plans.plans_per_fire) = 1146
┌ Info: Time check
└   time() - start_time = 9.059000015258789
┌ Info: Exploring node
└   branch_and_bound_node.ix = 92
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106188
┌ Info: Price and cut time (b-and-b)
└   t = 0.2524674
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 92
│   lb = 1.1462869208508457
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 48
└   length(nodes) = 97
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2131
└   sum(fire_plans.plans_per_fire) = 1173
┌ Info: Time check
└   time() - start_time = 9.335000038146973
┌ Info: Exploring node
└   branch_and_bound_node.ix = 93
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0113538
┌ Info: Price and cut time (b-and-b)
└   t = 0.1289223
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 93
│   lb = 1.1462886231447984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 49
└   length(nodes) = 99
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2176
└   sum(fire_plans.plans_per_fire) = 1186
┌ Info: Time check
└   time() - start_time = 9.480000019073486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 76
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0129888
┌ Info: Price and cut time (b-and-b)
└   t = 0.2120955
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 76
│   lb = 1.1462886231447984
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 50
└   length(nodes) = 101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2210
└   sum(fire_plans.plans_per_fire) = 1212
┌ Info: Time check
└   time() - start_time = 9.700000047683716
┌ Info: Exploring node
└   branch_and_bound_node.ix = 77
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0132218
┌ Info: Price and cut time (b-and-b)
└   t = 0.1787456
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 77
│   lb = 1.1465635748151224
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 51
└   length(nodes) = 103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2263
└   sum(fire_plans.plans_per_fire) = 1242
┌ Info: Time check
└   time() - start_time = 9.894999980926514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 88
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104596
┌ Info: Price and cut time (b-and-b)
└   t = 0.1746539
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 88
│   lb = 1.1465635748151224
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 52
└   length(nodes) = 105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2277
└   sum(fire_plans.plans_per_fire) = 1265
┌ Info: Time check
└   time() - start_time = 10.088000059127808
┌ Info: Exploring node
└   branch_and_bound_node.ix = 89
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0157782
┌ Info: Price and cut time (b-and-b)
└   t = 0.1462961
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 89
│   lb = 1.1465635748151226
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 53
└   length(nodes) = 107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2335
└   sum(fire_plans.plans_per_fire) = 1284
┌ Info: Time check
└   time() - start_time = 10.26200008392334
┌ Info: Exploring node
└   branch_and_bound_node.ix = 104
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0120709
┌ Info: Price and cut time (b-and-b)
└   t = 0.1201417
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 104
│   lb = 1.1465635748151226
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 54
└   length(nodes) = 109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2372
└   sum(fire_plans.plans_per_fire) = 1303
┌ Info: Time check
└   time() - start_time = 10.39300012588501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 105
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0152881
┌ Info: Price and cut time (b-and-b)
└   t = 0.1514129
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 105
│   lb = 1.1465707856607565
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 55
└   length(nodes) = 111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2397
└   sum(fire_plans.plans_per_fire) = 1328
┌ Info: Time check
└   time() - start_time = 10.574000120162964
┌ Info: Exploring node
└   branch_and_bound_node.ix = 86
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103347
┌ Info: Price and cut time (b-and-b)
└   t = 0.234483
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 86
│   lb = 1.1465707856607565
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 56
└   length(nodes) = 113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2425
└   sum(fire_plans.plans_per_fire) = 1360
┌ Info: Time check
└   time() - start_time = 10.818000078201294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 87
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.012381
┌ Info: Price and cut time (b-and-b)
└   t = 0.1796442
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 87
│   lb = 1.1466275707189861
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 57
└   length(nodes) = 115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2456
└   sum(fire_plans.plans_per_fire) = 1386
┌ Info: Time check
└   time() - start_time = 11.022000074386597
┌ Info: Exploring node
└   branch_and_bound_node.ix = 38
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0113296
┌ Info: Price and cut time (b-and-b)
└   t = 0.1332219
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 38
│   lb = 1.1466275707189861
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 58
└   length(nodes) = 117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2485
└   sum(fire_plans.plans_per_fire) = 1408
┌ Info: Time check
└   time() - start_time = 11.16700005531311
┌ Info: Exploring node
└   branch_and_bound_node.ix = 39
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0132966
┌ Info: Price and cut time (b-and-b)
└   t = 0.1879504
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 39
│   lb = 1.1466960842598979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 59
└   length(nodes) = 119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2546
└   sum(fire_plans.plans_per_fire) = 1439
┌ Info: Time check
└   time() - start_time = 11.365000009536743
┌ Info: Exploring node
└   branch_and_bound_node.ix = 100
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0110217
┌ Info: Price and cut time (b-and-b)
└   t = 0.1010678
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 100
│   lb = 1.1466960842598979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 60
└   length(nodes) = 121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2590
└   sum(fire_plans.plans_per_fire) = 1457
┌ Info: Time check
└   time() - start_time = 11.496999979019165
┌ Info: Exploring node
└   branch_and_bound_node.ix = 101
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102913
┌ Info: Price and cut time (b-and-b)
└   t = 0.20258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 101
│   lb = 1.1467428469012018
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 61
└   length(nodes) = 123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2676
└   sum(fire_plans.plans_per_fire) = 1493
┌ Info: Time check
└   time() - start_time = 11.70900011062622
┌ Info: Exploring node
└   branch_and_bound_node.ix = 84
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011563
┌ Info: Price and cut time (b-and-b)
└   t = 0.1579973
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 84
│   lb = 1.1467428469012018
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 62
└   length(nodes) = 125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2707
└   sum(fire_plans.plans_per_fire) = 1516
┌ Info: Time check
└   time() - start_time = 11.878000020980835
┌ Info: Exploring node
└   branch_and_bound_node.ix = 85
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104042
┌ Info: Price and cut time (b-and-b)
└   t = 0.1854892
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 85
│   lb = 1.146797799855884
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 63
└   length(nodes) = 127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2761
└   sum(fire_plans.plans_per_fire) = 1541
┌ Info: Time check
└   time() - start_time = 12.082000017166138
┌ Info: Exploring node
└   branch_and_bound_node.ix = 54
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105184
┌ Info: Price and cut time (b-and-b)
└   t = 0.1370618
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 54
│   lb = 1.146797799855884
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 64
└   length(nodes) = 129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2794
└   sum(fire_plans.plans_per_fire) = 1561
┌ Info: Time check
└   time() - start_time = 12.229000091552734
┌ Info: Exploring node
└   branch_and_bound_node.ix = 55
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106376
┌ Info: Price and cut time (b-and-b)
└   t = 0.2471659
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 55
│   lb = 1.1468388769214621
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 65
└   length(nodes) = 131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2865
└   sum(fire_plans.plans_per_fire) = 1605
┌ Info: Time check
└   time() - start_time = 12.506999969482422
┌ Info: Exploring node
└   branch_and_bound_node.ix = 128
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107717
┌ Info: Price and cut time (b-and-b)
└   t = 0.1579873
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 128
│   lb = 1.1468388769214621
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 66
└   length(nodes) = 133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2885
└   sum(fire_plans.plans_per_fire) = 1625
┌ Info: Time check
└   time() - start_time = 12.675000190734863
┌ Info: Exploring node
└   branch_and_bound_node.ix = 129
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0162313
┌ Info: Price and cut time (b-and-b)
└   t = 0.1690951
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 129
│   lb = 1.1468905260404565
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 67
└   length(nodes) = 135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2903
└   sum(fire_plans.plans_per_fire) = 1650
┌ Info: Time check
└   time() - start_time = 12.865000009536743
┌ Info: Exploring node
└   branch_and_bound_node.ix = 96
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010787
┌ Info: Price and cut time (b-and-b)
└   t = 0.1161865
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 96
│   lb = 1.1468905260404565
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 68
└   length(nodes) = 137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2913
└   sum(fire_plans.plans_per_fire) = 1661
┌ Info: Time check
└   time() - start_time = 13.004000186920166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 97
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0112279
┌ Info: Price and cut time (b-and-b)
└   t = 0.1312536
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 7, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 7, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 97
│   lb = 1.1470128664926216
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 69
└   length(nodes) = 139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2965
└   sum(fire_plans.plans_per_fire) = 1678
┌ Info: Time check
└   time() - start_time = 13.140000104904175
┌ Info: Exploring node
└   branch_and_bound_node.ix = 68
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010864
┌ Info: Price and cut time (b-and-b)
└   t = 0.114226
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 68
│   lb = 1.1470128664926216
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 70
└   length(nodes) = 141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2997
└   sum(fire_plans.plans_per_fire) = 1694
┌ Info: Time check
└   time() - start_time = 13.275000095367432
┌ Info: Exploring node
└   branch_and_bound_node.ix = 69
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0135337
┌ Info: Price and cut time (b-and-b)
└   t = 0.0851357
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 69
│   lb = 1.1470736888673838
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 71
└   length(nodes) = 143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3024
└   sum(fire_plans.plans_per_fire) = 1709
┌ Info: Time check
└   time() - start_time = 13.386000156402588
┌ Info: Exploring node
└   branch_and_bound_node.ix = 64
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105342
┌ Info: Price and cut time (b-and-b)
└   t = 0.225223
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 64
│   lb = 1.1470736888673838
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 72
└   length(nodes) = 145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3050
└   sum(fire_plans.plans_per_fire) = 1745
┌ Info: Time check
└   time() - start_time = 13.61899995803833
┌ Info: Exploring node
└   branch_and_bound_node.ix = 65
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0132522
┌ Info: Price and cut time (b-and-b)
└   t = 0.2306362
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 65
│   lb = 1.1471374434680908
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 73
└   length(nodes) = 147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3113
└   sum(fire_plans.plans_per_fire) = 1783
┌ Info: Time check
└   time() - start_time = 13.876000165939331
┌ Info: Exploring node
└   branch_and_bound_node.ix = 114
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103207
┌ Info: Price and cut time (b-and-b)
└   t = 0.2129538
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 114
│   lb = 1.1471374434680908
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 74
└   length(nodes) = 149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3137
└   sum(fire_plans.plans_per_fire) = 1811
┌ Info: Time check
└   time() - start_time = 14.091000080108643
┌ Info: Exploring node
└   branch_and_bound_node.ix = 115
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103832
┌ Info: Price and cut time (b-and-b)
└   t = 0.1641131
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 115
│   lb = 1.1471869537288577
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 75
└   length(nodes) = 151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3151
└   sum(fire_plans.plans_per_fire) = 1833
┌ Info: Time check
└   time() - start_time = 14.27400016784668
┌ Info: Exploring node
└   branch_and_bound_node.ix = 80
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0131574
┌ Info: Price and cut time (b-and-b)
└   t = 0.193161
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 80
│   lb = 1.1471869537288577
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 76
└   length(nodes) = 153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3190
└   sum(fire_plans.plans_per_fire) = 1864
┌ Info: Time check
└   time() - start_time = 14.493000030517578
┌ Info: Exploring node
└   branch_and_bound_node.ix = 81
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107523
┌ Info: Price and cut time (b-and-b)
└   t = 0.1481928
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 81
│   lb = 1.1472446799587979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 77
└   length(nodes) = 155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3217
└   sum(fire_plans.plans_per_fire) = 1890
┌ Info: Time check
└   time() - start_time = 14.652000188827515
┌ Info: Exploring node
└   branch_and_bound_node.ix = 72
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0146034
┌ Info: Price and cut time (b-and-b)
└   t = 0.0985942
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 72
│   lb = 1.1472446799587979
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 78
└   length(nodes) = 157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3244
└   sum(fire_plans.plans_per_fire) = 1903
┌ Info: Time check
└   time() - start_time = 14.77400016784668
┌ Info: Exploring node
└   branch_and_bound_node.ix = 73
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116303
┌ Info: Price and cut time (b-and-b)
└   t = 0.1963081
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 73
│   lb = 1.1473606223497654
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 79
└   length(nodes) = 159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3283
└   sum(fire_plans.plans_per_fire) = 1930
┌ Info: Time check
└   time() - start_time = 14.989000082015991
┌ Info: Exploring node
└   branch_and_bound_node.ix = 118
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0112672
┌ Info: Price and cut time (b-and-b)
└   t = 0.0959085
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 118
│   lb = 1.1473606223497654
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 80
└   length(nodes) = 161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3293
└   sum(fire_plans.plans_per_fire) = 1942
┌ Info: Time check
└   time() - start_time = 15.103000164031982
┌ Info: Exploring node
└   branch_and_bound_node.ix = 119
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104461
┌ Info: Price and cut time (b-and-b)
└   t = 0.2496792
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 119
│   lb = 1.1473957621855067
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 81
└   length(nodes) = 163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3336
└   sum(fire_plans.plans_per_fire) = 1978
┌ Info: Time check
└   time() - start_time = 15.370000123977661
┌ Info: Exploring node
└   branch_and_bound_node.ix = 142
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0157162
┌ Info: Price and cut time (b-and-b)
└   t = 0.1115528
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 142
│   lb = 1.1473957621855067
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 82
└   length(nodes) = 165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3362
└   sum(fire_plans.plans_per_fire) = 1993
┌ Info: Time check
└   time() - start_time = 15.503000020980835
┌ Info: Exploring node
└   branch_and_bound_node.ix = 143
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116627
┌ Info: Price and cut time (b-and-b)
└   t = 0.1674845
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 143
│   lb = 1.1474137573629024
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 83
└   length(nodes) = 167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3392
└   sum(fire_plans.plans_per_fire) = 2017
┌ Info: Time check
└   time() - start_time = 15.677000045776367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 46
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0144695
┌ Info: Price and cut time (b-and-b)
└   t = 0.1976861
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 46
│   lb = 1.1474137573629024
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 84
└   length(nodes) = 169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3454
└   sum(fire_plans.plans_per_fire) = 2050
┌ Info: Time check
└   time() - start_time = 15.891999959945679
┌ Info: Exploring node
└   branch_and_bound_node.ix = 47
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103182
┌ Info: Price and cut time (b-and-b)
└   t = 0.2206447
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 47
│   lb = 1.1474186720611819
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 85
└   length(nodes) = 171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3496
└   sum(fire_plans.plans_per_fire) = 2080
┌ Info: Time check
└   time() - start_time = 16.141000032424927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 132
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0126018
┌ Info: Price and cut time (b-and-b)
└   t = 0.1036664
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 132
│   lb = 1.1474186720611819
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 86
└   length(nodes) = 173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3522
└   sum(fire_plans.plans_per_fire) = 2090
┌ Info: Time check
└   time() - start_time = 16.258000135421753
┌ Info: Exploring node
└   branch_and_bound_node.ix = 133
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0137485
┌ Info: Price and cut time (b-and-b)
└   t = 0.2311487
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 133
│   lb = 1.1474683874011022
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 87
└   length(nodes) = 175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3542
└   sum(fire_plans.plans_per_fire) = 2122
┌ Info: Time check
└   time() - start_time = 16.51900005340576
┌ Info: Exploring node
└   branch_and_bound_node.ix = 120
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0111362
┌ Info: Price and cut time (b-and-b)
└   t = 0.0664148
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 120
│   lb = 1.1474683874011022
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 88
└   length(nodes) = 177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3562
└   sum(fire_plans.plans_per_fire) = 2130
┌ Info: Time check
└   time() - start_time = 16.593000173568726
┌ Info: Exploring node
└   branch_and_bound_node.ix = 121
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.013136
┌ Info: Price and cut time (b-and-b)
└   t = 0.2028343
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 121
│   lb = 1.1475473953411728
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 89
└   length(nodes) = 179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3608
└   sum(fire_plans.plans_per_fire) = 2165
┌ Info: Time check
└   time() - start_time = 16.818000078201294
┌ Info: Exploring node
└   branch_and_bound_node.ix = 174
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.012875
┌ Info: Price and cut time (b-and-b)
└   t = 0.1463711
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 174
│   lb = 1.1475473953411728
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 90
└   length(nodes) = 181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3618
└   sum(fire_plans.plans_per_fire) = 2182
┌ Info: Time check
└   time() - start_time = 16.986999988555908
┌ Info: Exploring node
└   branch_and_bound_node.ix = 175
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128313
┌ Info: Price and cut time (b-and-b)
└   t = 0.2639723
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 175
│   lb = 1.14774875907822
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 91
└   length(nodes) = 183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3653
└   sum(fire_plans.plans_per_fire) = 2211
┌ Info: Time check
└   time() - start_time = 17.27300000190735
┌ Info: Exploring node
└   branch_and_bound_node.ix = 124
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0126208
┌ Info: Price and cut time (b-and-b)
└   t = 0.3197998
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 124
│   lb = 1.14774875907822
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 92
└   length(nodes) = 185
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3692
└   sum(fire_plans.plans_per_fire) = 2252
┌ Info: Time check
└   time() - start_time = 17.608999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 125
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102336
┌ Info: Price and cut time (b-and-b)
└   t = 0.2016769
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 125
│   lb = 1.1477788173948027
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 93
└   length(nodes) = 187
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3728
└   sum(fire_plans.plans_per_fire) = 2284
┌ Info: Time check
└   time() - start_time = 17.825000047683716
┌ Info: Exploring node
└   branch_and_bound_node.ix = 148
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118443
┌ Info: Price and cut time (b-and-b)
└   t = 0.3036321
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 148
│   lb = 1.1477788173948027
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 94
└   length(nodes) = 189
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3772
└   sum(fire_plans.plans_per_fire) = 2309
┌ Info: Time check
└   time() - start_time = 18.141000032424927
┌ Info: Exploring node
└   branch_and_bound_node.ix = 149
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0154608
┌ Info: Price and cut time (b-and-b)
└   t = 0.177783
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 149
│   lb = 1.1478391132134143
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 95
└   length(nodes) = 191
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3791
└   sum(fire_plans.plans_per_fire) = 2340
┌ Info: Time check
└   time() - start_time = 18.344000101089478
┌ Info: Exploring node
└   branch_and_bound_node.ix = 160
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0162319
┌ Info: Price and cut time (b-and-b)
└   t = 0.188231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 160
│   lb = 1.1478391132134143
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 96
└   length(nodes) = 193
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3803
└   sum(fire_plans.plans_per_fire) = 2362
┌ Info: Time check
└   time() - start_time = 18.54700016975403
┌ Info: Exploring node
└   branch_and_bound_node.ix = 161
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011296
┌ Info: Price and cut time (b-and-b)
└   t = 0.1018157
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 161
│   lb = 1.1482882483387225
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 97
└   length(nodes) = 195
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3841
└   sum(fire_plans.plans_per_fire) = 2378
┌ Info: Time check
└   time() - start_time = 18.675000190734863
┌ Info: Exploring node
└   branch_and_bound_node.ix = 136
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106683
┌ Info: Price and cut time (b-and-b)
└   t = 0.093112
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 136
│   lb = 1.1482882483387225
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 98
└   length(nodes) = 197
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3854
└   sum(fire_plans.plans_per_fire) = 2387
┌ Info: Time check
└   time() - start_time = 18.77999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 137
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.013299
┌ Info: Price and cut time (b-and-b)
└   t = 0.2932823
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 137
│   lb = 1.1482895285650496
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 99
└   length(nodes) = 199
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3926
└   sum(fire_plans.plans_per_fire) = 2435
┌ Info: Time check
└   time() - start_time = 19.093000173568726
┌ Info: Exploring node
└   branch_and_bound_node.ix = 196
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.012505
┌ Info: Price and cut time (b-and-b)
└   t = 0.1138135
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 196
│   lb = 1.1482895285650496
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 100
└   length(nodes) = 201
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3949
└   sum(fire_plans.plans_per_fire) = 2450
┌ Info: Time check
└   time() - start_time = 19.23200011253357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 197
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104937
┌ Info: Price and cut time (b-and-b)
└   t = 0.2399629
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 197
│   lb = 1.148474358045871
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 101
└   length(nodes) = 203
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3988
└   sum(fire_plans.plans_per_fire) = 2477
┌ Info: Time check
└   time() - start_time = 19.486999988555908
┌ Info: Exploring node
└   branch_and_bound_node.ix = 82
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0135314
┌ Info: Price and cut time (b-and-b)
└   t = 0.1797799
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 82
│   lb = 1.148474358045871
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 102
└   length(nodes) = 205
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4016
└   sum(fire_plans.plans_per_fire) = 2508
┌ Info: Time check
└   time() - start_time = 19.676000118255615
┌ Info: Exploring node
└   branch_and_bound_node.ix = 83
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0148598
┌ Info: Price and cut time (b-and-b)
└   t = 0.2456187
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 83
│   lb = 1.1485403782764905
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 103
└   length(nodes) = 207
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4085
└   sum(fire_plans.plans_per_fire) = 2546
┌ Info: Time check
└   time() - start_time = 19.94099998474121
┌ Info: Exploring node
└   branch_and_bound_node.ix = 156
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102259
┌ Info: Price and cut time (b-and-b)
└   t = 0.0984018
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 156
│   lb = 1.1485403782764905
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 104
└   length(nodes) = 209
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4106
└   sum(fire_plans.plans_per_fire) = 2558
┌ Info: Time check
└   time() - start_time = 20.07200002670288
┌ Info: Exploring node
└   branch_and_bound_node.ix = 157
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105917
┌ Info: Price and cut time (b-and-b)
└   t = 0.202892
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 157
│   lb = 1.1485578466109847
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 105
└   length(nodes) = 211
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4172
└   sum(fire_plans.plans_per_fire) = 2581
┌ Info: Time check
└   time() - start_time = 20.28500008583069
┌ Info: Exploring node
└   branch_and_bound_node.ix = 158
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114201
┌ Info: Price and cut time (b-and-b)
└   t = 0.1171451
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 158
│   lb = 1.1485578466109847
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 106
└   length(nodes) = 213
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4200
└   sum(fire_plans.plans_per_fire) = 2600
┌ Info: Time check
└   time() - start_time = 20.42200016975403
┌ Info: Exploring node
└   branch_and_bound_node.ix = 159
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101152
┌ Info: Price and cut time (b-and-b)
└   t = 0.1107795
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 159
│   lb = 1.1487009472807204
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 107
└   length(nodes) = 215
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4234
└   sum(fire_plans.plans_per_fire) = 2614
┌ Info: Time check
└   time() - start_time = 20.539999961853027
┌ Info: Exploring node
└   branch_and_bound_node.ix = 180
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0139252
┌ Info: Price and cut time (b-and-b)
└   t = 0.1525915
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(3, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(3, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 180
│   lb = 1.1487009472807204
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 108
└   length(nodes) = 217
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4244
└   sum(fire_plans.plans_per_fire) = 2631
┌ Info: Time check
└   time() - start_time = 20.719000101089478
┌ Info: Exploring node
└   branch_and_bound_node.ix = 181
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010544
┌ Info: Price and cut time (b-and-b)
└   t = 0.1214648
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 181
│   lb = 1.1487515161210409
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 109
└   length(nodes) = 219
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4270
└   sum(fire_plans.plans_per_fire) = 2647
┌ Info: Time check
└   time() - start_time = 20.854000091552734
┌ Info: Exploring node
└   branch_and_bound_node.ix = 146
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0158521
┌ Info: Price and cut time (b-and-b)
└   t = 0.1513133
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 146
│   lb = 1.1487515161210409
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 110
└   length(nodes) = 221
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4283
└   sum(fire_plans.plans_per_fire) = 2664
┌ Info: Time check
└   time() - start_time = 21.032999992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 147
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106766
┌ Info: Price and cut time (b-and-b)
└   t = 0.0849736
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 147
│   lb = 1.1489150275769577
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 111
└   length(nodes) = 223
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4295
└   sum(fire_plans.plans_per_fire) = 2673
┌ Info: Time check
└   time() - start_time = 21.134999990463257
┌ Info: Exploring node
└   branch_and_bound_node.ix = 90
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011041
┌ Info: Price and cut time (b-and-b)
└   t = 0.1088369
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 90
│   lb = 1.1489150275769577
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 112
└   length(nodes) = 225
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4311
└   sum(fire_plans.plans_per_fire) = 2690
┌ Info: Time check
└   time() - start_time = 21.25600004196167
┌ Info: Exploring node
└   branch_and_bound_node.ix = 91
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109594
┌ Info: Price and cut time (b-and-b)
└   t = 0.1071145
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 91
│   lb = 1.1490446771236467
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 113
└   length(nodes) = 227
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4355
└   sum(fire_plans.plans_per_fire) = 2705
┌ Info: Time check
└   time() - start_time = 21.379000186920166
┌ Info: Exploring node
└   branch_and_bound_node.ix = 110
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0201553
┌ Info: Price and cut time (b-and-b)
└   t = 0.2539987
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 110
│   lb = 1.1490446771236467
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 114
└   length(nodes) = 229
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4388
└   sum(fire_plans.plans_per_fire) = 2739
┌ Info: Time check
└   time() - start_time = 21.64900016784668
┌ Info: Exploring node
└   branch_and_bound_node.ix = 111
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010529
┌ Info: Price and cut time (b-and-b)
└   t = 0.0891883
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 111
│   lb = 1.1490510448355367
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 115
└   length(nodes) = 231
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4417
└   sum(fire_plans.plans_per_fire) = 2751
┌ Info: Time check
└   time() - start_time = 21.76800012588501
┌ Info: Exploring node
└   branch_and_bound_node.ix = 164
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0112991
┌ Info: Price and cut time (b-and-b)
└   t = 0.206846
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 164
│   lb = 1.1490510448355367
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 116
└   length(nodes) = 233
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4429
└   sum(fire_plans.plans_per_fire) = 2777
┌ Info: Time check
└   time() - start_time = 21.983999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 165
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0121656
┌ Info: Price and cut time (b-and-b)
└   t = 0.1418107
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 165
│   lb = 1.1490586591476726
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 117
└   length(nodes) = 235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4467
└   sum(fire_plans.plans_per_fire) = 2797
┌ Info: Time check
└   time() - start_time = 22.144999980926514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 220
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.013372
┌ Info: Price and cut time (b-and-b)
└   t = 0.1003135
┌ Info: current bounds
│   node_ix = 220
│   lb = 1.1490586591476726
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 118
└   length(nodes) = 235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4488
└   sum(fire_plans.plans_per_fire) = 2812
┌ Info: Time check
└   time() - start_time = 22.265000104904175
┌ Info: Exploring node
└   branch_and_bound_node.ix = 221
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0154359
┌ Info: Price and cut time (b-and-b)
└   t = 0.2244395
┌ Info: current bounds
│   node_ix = 221
│   lb = 1.149059588203299
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 119
└   length(nodes) = 235
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4506
└   sum(fire_plans.plans_per_fire) = 2838
┌ Info: Time check
└   time() - start_time = 22.521000146865845
┌ Info: Exploring node
└   branch_and_bound_node.ix = 98
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107449
┌ Info: Price and cut time (b-and-b)
└   t = 0.0447445
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 98
│   lb = 1.149059588203299
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 120
└   length(nodes) = 237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4526
└   sum(fire_plans.plans_per_fire) = 2843
┌ Info: Time check
└   time() - start_time = 22.580000162124634
┌ Info: Exploring node
└   branch_and_bound_node.ix = 99
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115922
┌ Info: Price and cut time (b-and-b)
└   t = 0.1099982
┌ Info: current bounds
│   node_ix = 99
│   lb = 1.1490649603954712
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 121
└   length(nodes) = 237
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4588
└   sum(fire_plans.plans_per_fire) = 2860
┌ Info: Time check
└   time() - start_time = 22.70900011062622
┌ Info: Exploring node
└   branch_and_bound_node.ix = 192
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106893
┌ Info: Price and cut time (b-and-b)
└   t = 0.2146486
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 192
│   lb = 1.1490649603954712
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 122
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4616
└   sum(fire_plans.plans_per_fire) = 2885
┌ Info: Time check
└   time() - start_time = 22.937000036239624
┌ Info: Exploring node
└   branch_and_bound_node.ix = 193
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117653
┌ Info: Price and cut time (b-and-b)
└   t = 0.0851732
┌ Info: current bounds
│   node_ix = 193
│   lb = 1.1490939106566216
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 123
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4649
└   sum(fire_plans.plans_per_fire) = 2895
┌ Info: Time check
└   time() - start_time = 23.042999982833862
┌ Info: Exploring node
└   branch_and_bound_node.ix = 94
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128102
┌ Info: Price and cut time (b-and-b)
└   t = 0.0682587
┌ Info: current bounds
│   node_ix = 94
│   lb = 1.1490939106566216
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 124
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4663
└   sum(fire_plans.plans_per_fire) = 2907
┌ Info: Time check
└   time() - start_time = 23.128000020980835
┌ Info: Exploring node
└   branch_and_bound_node.ix = 95
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106575
┌ Info: Price and cut time (b-and-b)
└   t = 0.1384889
┌ Info: current bounds
│   node_ix = 95
│   lb = 1.1490978432956853
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 125
└   length(nodes) = 239
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4697
└   sum(fire_plans.plans_per_fire) = 2928
┌ Info: Time check
└   time() - start_time = 23.2810001373291
┌ Info: Exploring node
└   branch_and_bound_node.ix = 224
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101696
┌ Info: Price and cut time (b-and-b)
└   t = 0.2137887
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 224
│   lb = 1.1490978432956853
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 126
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4717
└   sum(fire_plans.plans_per_fire) = 2960
┌ Info: Time check
└   time() - start_time = 23.502000093460083
┌ Info: Exploring node
└   branch_and_bound_node.ix = 225
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010717
┌ Info: Price and cut time (b-and-b)
└   t = 0.1602048
┌ Info: current bounds
│   node_ix = 225
│   lb = 1.1491667485919628
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 127
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4766
└   sum(fire_plans.plans_per_fire) = 2990
┌ Info: Time check
└   time() - start_time = 23.682000160217285
┌ Info: Exploring node
└   branch_and_bound_node.ix = 214
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0144542
┌ Info: Price and cut time (b-and-b)
└   t = 0.0949084
┌ Info: current bounds
│   node_ix = 214
│   lb = 1.1491667485919628
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 128
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4778
└   sum(fire_plans.plans_per_fire) = 3007
┌ Info: Time check
└   time() - start_time = 23.79800009727478
┌ Info: Exploring node
└   branch_and_bound_node.ix = 215
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128132
┌ Info: Price and cut time (b-and-b)
└   t = 0.1013485
┌ Info: current bounds
│   node_ix = 215
│   lb = 1.1492531221767743
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 129
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4850
└   sum(fire_plans.plans_per_fire) = 3026
┌ Info: Time check
└   time() - start_time = 23.913000106811523
┌ Info: Exploring node
└   branch_and_bound_node.ix = 70
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128644
┌ Info: Price and cut time (b-and-b)
└   t = 0.1800553
┌ Info: current bounds
│   node_ix = 70
│   lb = 1.1492531221767743
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 130
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4871
└   sum(fire_plans.plans_per_fire) = 3050
┌ Info: Time check
└   time() - start_time = 24.11300015449524
┌ Info: Exploring node
└   branch_and_bound_node.ix = 71
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117949
┌ Info: Price and cut time (b-and-b)
└   t = 0.0866942
┌ Info: current bounds
│   node_ix = 71
│   lb = 1.1492727078619056
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 131
└   length(nodes) = 241
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4929
└   sum(fire_plans.plans_per_fire) = 3062
┌ Info: Time check
└   time() - start_time = 24.2260000705719
┌ Info: Exploring node
└   branch_and_bound_node.ix = 206
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0108053
┌ Info: Price and cut time (b-and-b)
└   t = 0.1840086
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 206
│   lb = 1.1492727078619056
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 132
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4947
└   sum(fire_plans.plans_per_fire) = 3084
┌ Info: Time check
└   time() - start_time = 24.426000118255615
┌ Info: Exploring node
└   branch_and_bound_node.ix = 207
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105098
┌ Info: Price and cut time (b-and-b)
└   t = 0.1663472
┌ Info: current bounds
│   node_ix = 207
│   lb = 1.1492897974490763
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 133
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4982
└   sum(fire_plans.plans_per_fire) = 3105
┌ Info: Time check
└   time() - start_time = 24.606000185012817
┌ Info: Exploring node
└   branch_and_bound_node.ix = 216
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(3, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0120108
┌ Info: Price and cut time (b-and-b)
└   t = 0.1273866
┌ Info: current bounds
│   node_ix = 216
│   lb = 1.1492897974490763
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 134
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 4998
└   sum(fire_plans.plans_per_fire) = 3129
┌ Info: Time check
└   time() - start_time = 24.741000175476074
┌ Info: Exploring node
└   branch_and_bound_node.ix = 217
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(3, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114032
┌ Info: Price and cut time (b-and-b)
└   t = 0.0894036
┌ Info: current bounds
│   node_ix = 217
│   lb = 1.1493188261859926
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 135
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5018
└   sum(fire_plans.plans_per_fire) = 3141
┌ Info: Time check
└   time() - start_time = 24.858999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 232
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0111185
┌ Info: Price and cut time (b-and-b)
└   t = 0.0481586
┌ Info: current bounds
│   node_ix = 232
│   lb = 1.1493188261859926
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 136
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5032
└   sum(fire_plans.plans_per_fire) = 3148
┌ Info: Time check
└   time() - start_time = 24.909000158309937
┌ Info: Exploring node
└   branch_and_bound_node.ix = 233
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115176
┌ Info: Price and cut time (b-and-b)
└   t = 0.1519051
┌ Info: current bounds
│   node_ix = 233
│   lb = 1.1493195403219454
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 137
└   length(nodes) = 243
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5069
└   sum(fire_plans.plans_per_fire) = 3169
┌ Info: Time check
└   time() - start_time = 25.08899998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 30
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0108534
┌ Info: Price and cut time (b-and-b)
└   t = 0.1245078
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 30
│   lb = 1.1493195403219454
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 138
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5087
└   sum(fire_plans.plans_per_fire) = 3182
┌ Info: Time check
└   time() - start_time = 25.223000049591064
┌ Info: Exploring node
└   branch_and_bound_node.ix = 31
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 7, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0111419
┌ Info: Price and cut time (b-and-b)
└   t = 0.107209
┌ Info: current bounds
│   node_ix = 31
│   lb = 1.1493314961546732
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 139
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5104
└   sum(fire_plans.plans_per_fire) = 3202
┌ Info: Time check
└   time() - start_time = 25.35800004005432
┌ Info: Exploring node
└   branch_and_bound_node.ix = 208
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117305
┌ Info: Price and cut time (b-and-b)
└   t = 0.0741291
┌ Info: current bounds
│   node_ix = 208
│   lb = 1.1493314961546732
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 140
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5131
└   sum(fire_plans.plans_per_fire) = 3217
┌ Info: Time check
└   time() - start_time = 25.45800018310547
┌ Info: Exploring node
└   branch_and_bound_node.ix = 209
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010369
┌ Info: Price and cut time (b-and-b)
└   t = 0.2083158
┌ Info: current bounds
│   node_ix = 209
│   lb = 1.1494400748029845
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 141
└   length(nodes) = 245
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5200
└   sum(fire_plans.plans_per_fire) = 3252
┌ Info: Time check
└   time() - start_time = 25.667999982833862
┌ Info: Exploring node
└   branch_and_bound_node.ix = 184
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109914
┌ Info: Price and cut time (b-and-b)
└   t = 0.226993
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 184
│   lb = 1.1494400748029845
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 142
└   length(nodes) = 247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5221
└   sum(fire_plans.plans_per_fire) = 3278
┌ Info: Time check
└   time() - start_time = 25.91200017929077
┌ Info: Exploring node
└   branch_and_bound_node.ix = 185
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114054
┌ Info: Price and cut time (b-and-b)
└   t = 0.0959576
┌ Info: current bounds
│   node_ix = 185
│   lb = 1.1494438261528297
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 143
└   length(nodes) = 247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5244
└   sum(fire_plans.plans_per_fire) = 3290
┌ Info: Time check
└   time() - start_time = 26.03500008583069
┌ Info: Exploring node
└   branch_and_bound_node.ix = 238
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114317
┌ Info: Price and cut time (b-and-b)
└   t = 0.1404275
┌ Info: current bounds
│   node_ix = 238
│   lb = 1.1494438261528297
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 144
└   length(nodes) = 247
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5267
└   sum(fire_plans.plans_per_fire) = 3313
┌ Info: Time check
└   time() - start_time = 26.18400001525879
┌ Info: Exploring node
└   branch_and_bound_node.ix = 239
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011168
┌ Info: Price and cut time (b-and-b)
└   t = 0.0591879
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 239
│   lb = 1.149653532046518
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 145
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5283
└   sum(fire_plans.plans_per_fire) = 3320
┌ Info: Time check
└   time() - start_time = 26.271000146865845
┌ Info: Exploring node
└   branch_and_bound_node.ix = 188
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109288
┌ Info: Price and cut time (b-and-b)
└   t = 0.0789088
┌ Info: current bounds
│   node_ix = 188
│   lb = 1.149653532046518
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 146
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5298
└   sum(fire_plans.plans_per_fire) = 3333
┌ Info: Time check
└   time() - start_time = 26.367000102996826
┌ Info: Exploring node
└   branch_and_bound_node.ix = 189
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105828
┌ Info: Price and cut time (b-and-b)
└   t = 0.1377354
┌ Info: current bounds
│   node_ix = 189
│   lb = 1.149725812671068
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 147
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5349
└   sum(fire_plans.plans_per_fire) = 3351
┌ Info: Time check
└   time() - start_time = 26.519999980926514
┌ Info: Exploring node
└   branch_and_bound_node.ix = 240
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010441
┌ Info: Price and cut time (b-and-b)
└   t = 0.1227304
┌ Info: current bounds
│   node_ix = 240
│   lb = 1.149725812671068
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 148
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5373
└   sum(fire_plans.plans_per_fire) = 3363
┌ Info: Time check
└   time() - start_time = 26.652000188827515
┌ Info: Exploring node
└   branch_and_bound_node.ix = 241
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118731
┌ Info: Price and cut time (b-and-b)
└   t = 0.0842871
┌ Info: current bounds
│   node_ix = 241
│   lb = 1.1497500673606948
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 149
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5391
└   sum(fire_plans.plans_per_fire) = 3373
┌ Info: Time check
└   time() - start_time = 26.759000062942505
┌ Info: Exploring node
└   branch_and_bound_node.ix = 166
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115597
┌ Info: Price and cut time (b-and-b)
└   t = 0.0892518
┌ Info: current bounds
│   node_ix = 166
│   lb = 1.1497500673606948
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 150
└   length(nodes) = 249
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5419
└   sum(fire_plans.plans_per_fire) = 3384
┌ Info: Time check
└   time() - start_time = 26.865000009536743
┌ Info: Exploring node
└   branch_and_bound_node.ix = 167
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102905
┌ Info: Price and cut time (b-and-b)
└   t = 0.2775285
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 167
│   lb = 1.1498332400189228
└   ub = 1.1504953481740918
┌ Info: number of nodes
│   node_explored_count = 151
└   length(nodes) = 251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5475
└   sum(fire_plans.plans_per_fire) = 3420
┌ Info: Time check
└   time() - start_time = 27.146000146865845
┌ Info: Exploring node
└   branch_and_bound_node.ix = 108
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109564
┌ Info: Price and cut time (b-and-b)
└   t = 0.1899157
┌ Info: current bounds
│   node_ix = 108
│   lb = 1.1498332400189228
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 152
└   length(nodes) = 251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5510
└   sum(fire_plans.plans_per_fire) = 3444
┌ Info: Time check
└   time() - start_time = 27.361000061035156
┌ Info: Exploring node
└   branch_and_bound_node.ix = 109
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.01068
┌ Info: Price and cut time (b-and-b)
└   t = 0.0651009
┌ Info: current bounds
│   node_ix = 109
│   lb = 1.1498410085665283
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 153
└   length(nodes) = 251
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5527
└   sum(fire_plans.plans_per_fire) = 3454
┌ Info: Time check
└   time() - start_time = 27.445000171661377
┌ Info: Exploring node
└   branch_and_bound_node.ix = 242
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106356
┌ Info: Price and cut time (b-and-b)
└   t = 0.2412901
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 242
│   lb = 1.1498410085665283
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 154
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5555
└   sum(fire_plans.plans_per_fire) = 3478
┌ Info: Time check
└   time() - start_time = 27.694000005722046
┌ Info: Exploring node
└   branch_and_bound_node.ix = 243
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0134331
┌ Info: Price and cut time (b-and-b)
└   t = 0.0950499
┌ Info: current bounds
│   node_ix = 243
│   lb = 1.1498597820555985
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 155
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5586
└   sum(fire_plans.plans_per_fire) = 3493
┌ Info: Time check
└   time() - start_time = 27.812000036239624
┌ Info: Exploring node
└   branch_and_bound_node.ix = 134
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0162403
┌ Info: Price and cut time (b-and-b)
└   t = 0.0772193
┌ Info: current bounds
│   node_ix = 134
│   lb = 1.1498597820555985
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 156
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5596
└   sum(fire_plans.plans_per_fire) = 3503
┌ Info: Time check
└   time() - start_time = 27.914999961853027
┌ Info: Exploring node
└   branch_and_bound_node.ix = 135
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116832
┌ Info: Price and cut time (b-and-b)
└   t = 0.1696679
┌ Info: current bounds
│   node_ix = 135
│   lb = 1.1498702541638295
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 157
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5634
└   sum(fire_plans.plans_per_fire) = 3529
┌ Info: Time check
└   time() - start_time = 28.09000015258789
┌ Info: Exploring node
└   branch_and_bound_node.ix = 150
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104832
┌ Info: Price and cut time (b-and-b)
└   t = 0.1625752
┌ Info: current bounds
│   node_ix = 150
│   lb = 1.1498702541638295
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 158
└   length(nodes) = 253
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5656
└   sum(fire_plans.plans_per_fire) = 3550
┌ Info: Time check
└   time() - start_time = 28.272000074386597
┌ Info: Exploring node
└   branch_and_bound_node.ix = 151
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109521
┌ Info: Price and cut time (b-and-b)
└   t = 0.0796071
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 151
│   lb = 1.1498730240865644
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 159
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5666
└   sum(fire_plans.plans_per_fire) = 3561
┌ Info: Time check
└   time() - start_time = 28.37600016593933
┌ Info: Exploring node
└   branch_and_bound_node.ix = 112
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103559
┌ Info: Price and cut time (b-and-b)
└   t = 0.0734449
┌ Info: current bounds
│   node_ix = 112
│   lb = 1.1498730240865644
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 160
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5676
└   sum(fire_plans.plans_per_fire) = 3570
┌ Info: Time check
└   time() - start_time = 28.46399998664856
┌ Info: Exploring node
└   branch_and_bound_node.ix = 113
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0131871
┌ Info: Price and cut time (b-and-b)
└   t = 0.1306409
┌ Info: current bounds
│   node_ix = 113
│   lb = 1.1498996989263808
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 161
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5712
└   sum(fire_plans.plans_per_fire) = 3592
┌ Info: Time check
└   time() - start_time = 28.605000019073486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 62
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0150865
┌ Info: Price and cut time (b-and-b)
└   t = 0.1244001
┌ Info: current bounds
│   node_ix = 62
│   lb = 1.1498996989263808
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 162
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5781
└   sum(fire_plans.plans_per_fire) = 3608
┌ Info: Time check
└   time() - start_time = 28.755000114440918
┌ Info: Exploring node
└   branch_and_bound_node.ix = 63
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0119132
┌ Info: Price and cut time (b-and-b)
└   t = 0.1184057
┌ Info: current bounds
│   node_ix = 63
│   lb = 1.149946990333016
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 163
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5848
└   sum(fire_plans.plans_per_fire) = 3629
┌ Info: Time check
└   time() - start_time = 28.889000177383423
┌ Info: Exploring node
└   branch_and_bound_node.ix = 246
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0155027
┌ Info: Price and cut time (b-and-b)
└   t = 0.0932492
┌ Info: current bounds
│   node_ix = 246
│   lb = 1.149946990333016
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 164
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5867
└   sum(fire_plans.plans_per_fire) = 3644
┌ Info: Time check
└   time() - start_time = 29.008000135421753
┌ Info: Exploring node
└   branch_and_bound_node.ix = 247
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106508
┌ Info: Price and cut time (b-and-b)
└   t = 0.0279122
┌ Info: current bounds
│   node_ix = 247
│   lb = 1.1499496847502442
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 165
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5879
└   sum(fire_plans.plans_per_fire) = 3649
┌ Info: Time check
└   time() - start_time = 29.04700016975403
┌ Info: Exploring node
└   branch_and_bound_node.ix = 252
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0123152
┌ Info: Price and cut time (b-and-b)
└   t = 0.0975119
┌ Info: current bounds
│   node_ix = 252
│   lb = 1.1499496847502442
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 166
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5900
└   sum(fire_plans.plans_per_fire) = 3665
┌ Info: Time check
└   time() - start_time = 29.167999982833862
┌ Info: Exploring node
└   branch_and_bound_node.ix = 253
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109306
┌ Info: non optimal termination status
└   termination_status(rmp.model) = INFEASIBLE::TerminationStatusCode = 2
┌ Info: Price and cut time (b-and-b)
└   t = 0.3829774
┌ Info: current bounds
│   node_ix = 253
│   lb = 1.1500391719852596
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 167
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5910
└   sum(fire_plans.plans_per_fire) = 3668
┌ Info: Time check
└   time() - start_time = 29.561000108718872
┌ Info: Exploring node
└   branch_and_bound_node.ix = 254
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0137017
┌ Info: Price and cut time (b-and-b)
└   t = 0.0474543
┌ Info: current bounds
│   node_ix = 254
│   lb = 1.1500391719852596
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 168
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 5929
└   sum(fire_plans.plans_per_fire) = 3674
┌ Info: Time check
└   time() - start_time = 29.624000072479248
┌ Info: Exploring node
└   branch_and_bound_node.ix = 255
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0141919
┌ Info: Price and cut time (b-and-b)
└   t = 0.1601762
┌ Info: current bounds
│   node_ix = 255
│   lb = 1.1500825433494317
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 169
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6001
└   sum(fire_plans.plans_per_fire) = 3699
┌ Info: Time check
└   time() - start_time = 29.80299997329712
┌ Info: Exploring node
└   branch_and_bound_node.ix = 176
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0136529
┌ Info: Price and cut time (b-and-b)
└   t = 0.1148557
┌ Info: current bounds
│   node_ix = 176
│   lb = 1.1500825433494317
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 170
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6025
└   sum(fire_plans.plans_per_fire) = 3716
┌ Info: Time check
└   time() - start_time = 29.94600009918213
┌ Info: Exploring node
└   branch_and_bound_node.ix = 177
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114555
┌ Info: Price and cut time (b-and-b)
└   t = 0.1161985
┌ Info: current bounds
│   node_ix = 177
│   lb = 1.1501420420324961
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 171
└   length(nodes) = 255
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 6064
└   sum(fire_plans.plans_per_fire) = 3738
┌ Info: Time check
└   time() - start_time = 30.070000171661377
┌ Info: Solved to tolerance
│   min_lb = 1.1501681413571412
└   ub = 1.1501420420324961
