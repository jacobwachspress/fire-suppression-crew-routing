[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 0.25300002098083496
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0079394
┌ Info: halting cut generation early, too small improvement
└   loop_ix = 10
┌ Info: Price and cut time (b-and-b)
└   t = 2.2705447
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 2, "greater_than_or_equal")
┌ Info: Finding heuristic upper bound
└   explored_bb_node.ix = 1
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    3×14 Matrix{Int64}:
│      0   1   1  2  2  7  9  8  8  6  3  0  0  0
│      0  10  10  7  5  1  1  0  0  0  0  0  0  0
└     10   1   0  0  0  0  0  0  0  0  0  0  0  0
┌ Info: Price and cut time (heuristic)
└   t = 0.2258512
┌ Info: found sol
│   t = 0.0353775
│   obj = 1.1551874711985284
└   obj_bound = 1.1551874711985284
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    3×14 Matrix{Int64}:
│      1   2   2  3  3  8  10  9  9  7  4  1  1  1
│      1  11  11  8  6  2   2  1  1  1  1  1  1  1
└     11   2   1  1  1  1   1  1  1  1  1  1  1  1
┌ Info: Price and cut time (heuristic)
└   t = 0.2922524
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0565729
│   obj = 1.1501420420324961
└   obj_bound = 1.1501420420324957
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    3×14 Matrix{Int64}:
│      2   3   3  4  4  9  11  10  10  8  5  2  2  2
│      2  12  12  9  7  3   3   2   2  2  2  2  2  2
└     12   3   2  2  2  2   2   2   2  2  2  2  2  2
┌ Info: Price and cut time (heuristic)
└   t = 0.2068719
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0214496
│   obj = 1.1501420420324964
└   obj_bound = 1.1501357457874548
┌ Info: entering heuristic round
│   branching_rule.allotment_matrix =
│    3×14 Matrix{Int64}:
│      3   4   4   5  5  10  12  11  11  9  6  3  3  3
│      3  13  13  10  8   4   4   3   3  3  3  3  3  3
└     13   4   3   3  3   3   3   3   3  3  3  3  3  3
┌ Info: Price and cut time (heuristic)
└   t = 0.1518525
[ Info: pushing solution to IP
┌ Info: found sol
│   t = 0.0181547
│   obj = 1.1501420420324964
└   obj_bound = 1.1501370050364632
┌ Info: Too long since improvement in heuristic, killing early
└   rounds_since_improvement = 2
┌ Info: Found heuristic upper bound
└   ub = 1.1501420420324961
┌ Info: current bounds
│   node_ix = 1
│   lb = 1.1501346271028576
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 626
└   sum(fire_plans.plans_per_fire) = 528
┌ Info: Time check
└   time() - start_time = 3.7310001850128174
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 5, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0164665
┌ Info: Price and cut time (b-and-b)
└   t = 0.1569494
┌ Info: current bounds
│   node_ix = 2
│   lb = 1.1501346271028576
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 644
└   sum(fire_plans.plans_per_fire) = 553
┌ Info: Time check
└   time() - start_time = 3.9079999923706055
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 5, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0182094
┌ Info: Price and cut time (b-and-b)
└   t = 0.2794435
┌ Info: current bounds
│   node_ix = 3
│   lb = 1.1501420420324961
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 689
└   sum(fire_plans.plans_per_fire) = 601
┌ Info: Time check
└   time() - start_time = 4.202000141143799
