[ Info: Initializing data structures
┌ Info: Checkpoint after initializing data structures
└   time() - start_time = 0.2089998722076416
┌ Warning: Node with no parent
│   i = 1
└ @ Main C:\Users\jacob\Coding\MIT\ihc_routing\BranchAndPrice.jl:127
┌ Info: Exploring node
└   branch_and_bound_node.ix = 1
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules = FireDemandBranchingRule[]
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0180269
┌ Info: Price and cut time (b-and-b)
└   t = 0.4653079
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 1
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 1
└   length(nodes) = 3
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 352
└   sum(fire_plans.plans_per_fire) = 122
┌ Info: Time check
└   time() - start_time = 0.7000000476837158
┌ Info: Exploring node
└   branch_and_bound_node.ix = 2
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098476
┌ Info: Price and cut time (b-and-b)
└   t = 0.067726
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 2
│   lb = 1.1388005347712324
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 2
└   length(nodes) = 5
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 389
└   sum(fire_plans.plans_per_fire) = 130
┌ Info: Time check
└   time() - start_time = 0.7839999198913574
┌ Info: Exploring node
└   branch_and_bound_node.ix = 3
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    1-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010598
┌ Info: Price and cut time (b-and-b)
└   t = 0.2840601
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 3
│   lb = 1.1400936508941035
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 3
└   length(nodes) = 7
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 446
└   sum(fire_plans.plans_per_fire) = 176
┌ Info: Time check
└   time() - start_time = 1.0820000171661377
┌ Info: Exploring node
└   branch_and_bound_node.ix = 4
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098948
┌ Info: Price and cut time (b-and-b)
└   t = 0.0643875
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 4
│   lb = 1.1400936508941035
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 4
└   length(nodes) = 9
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 466
└   sum(fire_plans.plans_per_fire) = 185
┌ Info: Time check
└   time() - start_time = 1.1649999618530273
┌ Info: Exploring node
└   branch_and_bound_node.ix = 5
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100747
┌ Info: Price and cut time (b-and-b)
└   t = 0.2533448
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 5
│   lb = 1.143212179170231
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 5
└   length(nodes) = 11
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 509
└   sum(fire_plans.plans_per_fire) = 220
┌ Info: Time check
└   time() - start_time = 1.432999849319458
┌ Info: Exploring node
└   branch_and_bound_node.ix = 8
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098327
┌ Info: Price and cut time (b-and-b)
└   t = 0.0742542
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 8
│   lb = 1.143212179170231
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 6
└   length(nodes) = 13
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 535
└   sum(fire_plans.plans_per_fire) = 233
┌ Info: Time check
└   time() - start_time = 1.5219998359680176
┌ Info: Exploring node
└   branch_and_bound_node.ix = 9
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.013109
┌ Info: Price and cut time (b-and-b)
└   t = 0.2254776
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 9
│   lb = 1.1438914394442756
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 7
└   length(nodes) = 15
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 605
└   sum(fire_plans.plans_per_fire) = 267
┌ Info: Time check
└   time() - start_time = 1.7619998455047607
┌ Info: Exploring node
└   branch_and_bound_node.ix = 6
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128978
┌ Info: Price and cut time (b-and-b)
└   t = 0.1158231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 6
│   lb = 1.1438914394442756
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 8
└   length(nodes) = 17
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 649
└   sum(fire_plans.plans_per_fire) = 289
┌ Info: Time check
└   time() - start_time = 1.8980000019073486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 7
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    2-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098705
┌ Info: Price and cut time (b-and-b)
└   t = 0.2440377
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 7
│   lb = 1.1442668743284943
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 9
└   length(nodes) = 19
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 756
└   sum(fire_plans.plans_per_fire) = 335
┌ Info: Time check
└   time() - start_time = 2.1559998989105225
┌ Info: Exploring node
└   branch_and_bound_node.ix = 12
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098312
┌ Info: Price and cut time (b-and-b)
└   t = 0.1051364
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 12
│   lb = 1.1442668743284943
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 10
└   length(nodes) = 21
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 780
└   sum(fire_plans.plans_per_fire) = 347
┌ Info: Time check
└   time() - start_time = 2.2769999504089355
┌ Info: Exploring node
└   branch_and_bound_node.ix = 13
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0099587
┌ Info: Price and cut time (b-and-b)
└   t = 0.1656445
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 13
│   lb = 1.1448912481861853
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 11
└   length(nodes) = 23
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 851
└   sum(fire_plans.plans_per_fire) = 375
┌ Info: Time check
└   time() - start_time = 2.4579999446868896
┌ Info: Exploring node
└   branch_and_bound_node.ix = 20
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0098083
┌ Info: Price and cut time (b-and-b)
└   t = 0.2502513
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 20
│   lb = 1.1448912481861853
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 12
└   length(nodes) = 25
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 885
└   sum(fire_plans.plans_per_fire) = 408
┌ Info: Time check
└   time() - start_time = 2.7230000495910645
┌ Info: Exploring node
└   branch_and_bound_node.ix = 21
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101918
┌ Info: Price and cut time (b-and-b)
└   t = 0.0935877
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 21
│   lb = 1.14505920939623
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 13
└   length(nodes) = 27
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 911
└   sum(fire_plans.plans_per_fire) = 421
┌ Info: Time check
└   time() - start_time = 2.822000026702881
┌ Info: Exploring node
└   branch_and_bound_node.ix = 10
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0111629
┌ Info: Price and cut time (b-and-b)
└   t = 0.2118213
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 10
│   lb = 1.14505920939623
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 14
└   length(nodes) = 29
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 958
└   sum(fire_plans.plans_per_fire) = 451
┌ Info: Time check
└   time() - start_time = 3.0490000247955322
┌ Info: Exploring node
└   branch_and_bound_node.ix = 11
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0154947
┌ Info: Price and cut time (b-and-b)
└   t = 0.1654582
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 11
│   lb = 1.145506977671166
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 15
└   length(nodes) = 31
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1044
└   sum(fire_plans.plans_per_fire) = 481
┌ Info: Time check
└   time() - start_time = 3.246000051498413
┌ Info: Exploring node
└   branch_and_bound_node.ix = 16
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011076
┌ Info: Price and cut time (b-and-b)
└   t = 0.1678622
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 16
│   lb = 1.145506977671166
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 16
└   length(nodes) = 33
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1091
└   sum(fire_plans.plans_per_fire) = 511
┌ Info: Time check
└   time() - start_time = 3.419999837875366
┌ Info: Exploring node
└   branch_and_bound_node.ix = 17
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    3-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104293
┌ Info: Price and cut time (b-and-b)
└   t = 0.0528968
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 17
│   lb = 1.1457049738100973
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 17
└   length(nodes) = 35
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1121
└   sum(fire_plans.plans_per_fire) = 517
┌ Info: Time check
└   time() - start_time = 3.484999895095825
┌ Info: Exploring node
└   branch_and_bound_node.ix = 24
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0145115
┌ Info: Price and cut time (b-and-b)
└   t = 0.1716893
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 24
│   lb = 1.1457049738100973
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 18
└   length(nodes) = 37
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1141
└   sum(fire_plans.plans_per_fire) = 538
┌ Info: Time check
└   time() - start_time = 3.69599986076355
┌ Info: Exploring node
└   branch_and_bound_node.ix = 25
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105643
┌ Info: Price and cut time (b-and-b)
└   t = 0.1425099
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 25
│   lb = 1.1457752868779694
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 19
└   length(nodes) = 39
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1164
└   sum(fire_plans.plans_per_fire) = 557
┌ Info: Time check
└   time() - start_time = 3.8469998836517334
┌ Info: Exploring node
└   branch_and_bound_node.ix = 22
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0174642
┌ Info: Price and cut time (b-and-b)
└   t = 0.1943418
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 22
│   lb = 1.1457752868779694
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 20
└   length(nodes) = 41
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1184
└   sum(fire_plans.plans_per_fire) = 568
┌ Info: Time check
└   time() - start_time = 4.062999963760376
┌ Info: Exploring node
└   branch_and_bound_node.ix = 23
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0122193
┌ Info: Price and cut time (b-and-b)
└   t = 0.2388225
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 23
│   lb = 1.1459003084834622
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 21
└   length(nodes) = 43
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1256
└   sum(fire_plans.plans_per_fire) = 618
┌ Info: Time check
└   time() - start_time = 4.328999996185303
┌ Info: Exploring node
└   branch_and_bound_node.ix = 36
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106102
┌ Info: Price and cut time (b-and-b)
└   t = 0.173258
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 36
│   lb = 1.1459003084834622
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 22
└   length(nodes) = 45
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1294
└   sum(fire_plans.plans_per_fire) = 650
┌ Info: Time check
└   time() - start_time = 4.507999897003174
┌ Info: Exploring node
└   branch_and_bound_node.ix = 37
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118725
┌ Info: Price and cut time (b-and-b)
└   t = 0.0764999
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 37
│   lb = 1.145955397893692
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 23
└   length(nodes) = 47
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1306
└   sum(fire_plans.plans_per_fire) = 659
┌ Info: Time check
└   time() - start_time = 4.611999988555908
┌ Info: Exploring node
└   branch_and_bound_node.ix = 14
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102376
┌ Info: Price and cut time (b-and-b)
└   t = 0.0932829
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 14
│   lb = 1.145955397893692
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 24
└   length(nodes) = 49
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1325
└   sum(fire_plans.plans_per_fire) = 671
┌ Info: Time check
└   time() - start_time = 4.7200000286102295
┌ Info: Exploring node
└   branch_and_bound_node.ix = 15
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118822
┌ Info: Price and cut time (b-and-b)
└   t = 0.2201604
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 15
│   lb = 1.146295130002316
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 25
└   length(nodes) = 51
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1364
└   sum(fire_plans.plans_per_fire) = 710
┌ Info: Time check
└   time() - start_time = 4.95799994468689
┌ Info: Exploring node
└   branch_and_bound_node.ix = 40
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104226
┌ Info: Price and cut time (b-and-b)
└   t = 0.0753444
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 1, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 40
│   lb = 1.146295130002316
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 26
└   length(nodes) = 53
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1376
└   sum(fire_plans.plans_per_fire) = 721
┌ Info: Time check
└   time() - start_time = 5.049000024795532
┌ Info: Exploring node
└   branch_and_bound_node.ix = 41
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118147
┌ Info: Price and cut time (b-and-b)
└   t = 0.2391526
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 41
│   lb = 1.146585604615311
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 27
└   length(nodes) = 55
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1416
└   sum(fire_plans.plans_per_fire) = 752
┌ Info: Time check
└   time() - start_time = 5.302000045776367
┌ Info: Exploring node
└   branch_and_bound_node.ix = 28
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0128941
┌ Info: Price and cut time (b-and-b)
└   t = 0.1553658
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 28
│   lb = 1.146585604615311
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 28
└   length(nodes) = 57
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1458
└   sum(fire_plans.plans_per_fire) = 778
┌ Info: Time check
└   time() - start_time = 5.471999883651733
┌ Info: Exploring node
└   branch_and_bound_node.ix = 29
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0120866
┌ Info: Price and cut time (b-and-b)
└   t = 0.0805843
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 29
│   lb = 1.1466434654264777
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 29
└   length(nodes) = 59
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1490
└   sum(fire_plans.plans_per_fire) = 792
┌ Info: Time check
└   time() - start_time = 5.57699990272522
┌ Info: Exploring node
└   branch_and_bound_node.ix = 48
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116804
┌ Info: Price and cut time (b-and-b)
└   t = 0.1400927
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 48
│   lb = 1.1466434654264777
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 30
└   length(nodes) = 61
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1534
└   sum(fire_plans.plans_per_fire) = 818
┌ Info: Time check
└   time() - start_time = 5.7209999561309814
┌ Info: Exploring node
└   branch_and_bound_node.ix = 49
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010353
┌ Info: Price and cut time (b-and-b)
└   t = 0.0785059
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 49
│   lb = 1.1474807820772877
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 31
└   length(nodes) = 63
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1544
└   sum(fire_plans.plans_per_fire) = 831
┌ Info: Time check
└   time() - start_time = 5.827999830245972
┌ Info: Exploring node
└   branch_and_bound_node.ix = 32
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011897
┌ Info: Price and cut time (b-and-b)
└   t = 0.1335126
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 32
│   lb = 1.1474807820772877
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 32
└   length(nodes) = 65
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1577
└   sum(fire_plans.plans_per_fire) = 852
┌ Info: Time check
└   time() - start_time = 5.971999883651733
┌ Info: Exploring node
└   branch_and_bound_node.ix = 33
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0125912
┌ Info: Price and cut time (b-and-b)
└   t = 0.1200462
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 2, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 33
│   lb = 1.1477045406210657
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 33
└   length(nodes) = 67
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1610
└   sum(fire_plans.plans_per_fire) = 872
┌ Info: Time check
└   time() - start_time = 6.105000019073486
┌ Info: Exploring node
└   branch_and_bound_node.ix = 66
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104614
┌ Info: Price and cut time (b-and-b)
└   t = 0.0542297
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 66
│   lb = 1.1477045406210657
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 34
└   length(nodes) = 69
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1620
└   sum(fire_plans.plans_per_fire) = 877
┌ Info: Time check
└   time() - start_time = 6.184999942779541
┌ Info: Exploring node
└   branch_and_bound_node.ix = 67
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 2, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0124804
┌ Info: Price and cut time (b-and-b)
└   t = 0.3166624
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 67
│   lb = 1.147710080994624
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 35
└   length(nodes) = 71
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1679
└   sum(fire_plans.plans_per_fire) = 922
┌ Info: Time check
└   time() - start_time = 6.511999845504761
┌ Info: Exploring node
└   branch_and_bound_node.ix = 52
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.014918
┌ Info: Price and cut time (b-and-b)
└   t = 0.0680396
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 52
│   lb = 1.147710080994624
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 36
└   length(nodes) = 73
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1690
└   sum(fire_plans.plans_per_fire) = 928
┌ Info: Time check
└   time() - start_time = 6.608000040054321
┌ Info: Exploring node
└   branch_and_bound_node.ix = 53
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011689
┌ Info: Price and cut time (b-and-b)
└   t = 0.2389201
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 53
│   lb = 1.1478013758178558
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 37
└   length(nodes) = 75
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1757
└   sum(fire_plans.plans_per_fire) = 964
┌ Info: Time check
└   time() - start_time = 6.858000040054321
┌ Info: Exploring node
└   branch_and_bound_node.ix = 72
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0142746
┌ Info: Price and cut time (b-and-b)
└   t = 0.1451851
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 72
│   lb = 1.1478013758178558
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 38
└   length(nodes) = 77
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1775
└   sum(fire_plans.plans_per_fire) = 983
┌ Info: Time check
└   time() - start_time = 7.021999835968018
┌ Info: Exploring node
└   branch_and_bound_node.ix = 73
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0145613
┌ Info: Price and cut time (b-and-b)
└   t = 0.0942078
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 73
│   lb = 1.1478919099408194
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 39
└   length(nodes) = 79
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1804
└   sum(fire_plans.plans_per_fire) = 994
┌ Info: Time check
└   time() - start_time = 7.139999866485596
┌ Info: Exploring node
└   branch_and_bound_node.ix = 50
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105642
┌ Info: Price and cut time (b-and-b)
└   t = 0.1172956
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 50
│   lb = 1.1478919099408194
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 40
└   length(nodes) = 81
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1814
└   sum(fire_plans.plans_per_fire) = 1008
┌ Info: Time check
└   time() - start_time = 7.273999929428101
┌ Info: Exploring node
└   branch_and_bound_node.ix = 51
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100638
┌ Info: Price and cut time (b-and-b)
└   t = 0.2067549
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 51
│   lb = 1.148189783000295
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 41
└   length(nodes) = 83
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1845
└   sum(fire_plans.plans_per_fire) = 1039
┌ Info: Time check
└   time() - start_time = 7.498999834060669
┌ Info: Exploring node
└   branch_and_bound_node.ix = 26
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109219
┌ Info: Price and cut time (b-and-b)
└   t = 0.1582667
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 26
│   lb = 1.148189783000295
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 42
└   length(nodes) = 85
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1857
└   sum(fire_plans.plans_per_fire) = 1063
┌ Info: Time check
└   time() - start_time = 7.674999952316284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 27
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0161573
┌ Info: Price and cut time (b-and-b)
└   t = 0.1373231
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 27
│   lb = 1.1483746603732277
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 43
└   length(nodes) = 87
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1912
└   sum(fire_plans.plans_per_fire) = 1084
┌ Info: Time check
└   time() - start_time = 7.822999954223633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 46
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102153
┌ Info: Price and cut time (b-and-b)
└   t = 0.1796635
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 1, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 46
│   lb = 1.1483746603732277
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 44
└   length(nodes) = 89
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 1960
└   sum(fire_plans.plans_per_fire) = 1113
┌ Info: Time check
└   time() - start_time = 8.02999997138977
┌ Info: Exploring node
└   branch_and_bound_node.ix = 47
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0159828
┌ Info: Price and cut time (b-and-b)
└   t = 0.1903531
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 47
│   lb = 1.1484271562737076
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 45
└   length(nodes) = 91
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2017
└   sum(fire_plans.plans_per_fire) = 1141
┌ Info: Time check
└   time() - start_time = 8.233999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 76
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0130242
┌ Info: Price and cut time (b-and-b)
└   t = 0.1745211
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 76
│   lb = 1.1484271562737076
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 46
└   length(nodes) = 93
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2058
└   sum(fire_plans.plans_per_fire) = 1164
┌ Info: Time check
└   time() - start_time = 8.424000024795532
┌ Info: Exploring node
└   branch_and_bound_node.ix = 77
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0134857
┌ Info: Price and cut time (b-and-b)
└   t = 0.1207597
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 77
│   lb = 1.148570697083524
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 47
└   length(nodes) = 95
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2074
└   sum(fire_plans.plans_per_fire) = 1179
┌ Info: Time check
└   time() - start_time = 8.572999954223633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 56
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.012104
┌ Info: Price and cut time (b-and-b)
└   t = 0.150312
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 56
│   lb = 1.148570697083524
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 48
└   length(nodes) = 97
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2104
└   sum(fire_plans.plans_per_fire) = 1200
┌ Info: Time check
└   time() - start_time = 8.73799991607666
┌ Info: Exploring node
└   branch_and_bound_node.ix = 57
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106361
┌ Info: Price and cut time (b-and-b)
└   t = 0.0817428
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 3, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 3, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 57
│   lb = 1.148601492190893
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 49
└   length(nodes) = 99
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2123
└   sum(fire_plans.plans_per_fire) = 1212
┌ Info: Time check
└   time() - start_time = 8.839999914169312
┌ Info: Exploring node
└   branch_and_bound_node.ix = 34
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101493
┌ Info: Price and cut time (b-and-b)
└   t = 0.0934425
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 34
│   lb = 1.148601492190893
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 50
└   length(nodes) = 101
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2134
└   sum(fire_plans.plans_per_fire) = 1229
┌ Info: Time check
└   time() - start_time = 8.947999954223633
┌ Info: Exploring node
└   branch_and_bound_node.ix = 35
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    4-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0117914
┌ Info: Price and cut time (b-and-b)
└   t = 0.2827843
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 35
│   lb = 1.1486960981189593
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 51
└   length(nodes) = 103
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2197
└   sum(fire_plans.plans_per_fire) = 1278
┌ Info: Time check
└   time() - start_time = 9.238999843597412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 98
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0101744
┌ Info: Price and cut time (b-and-b)
└   t = 0.1489475
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 98
│   lb = 1.1486960981189593
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 52
└   length(nodes) = 105
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2218
└   sum(fire_plans.plans_per_fire) = 1300
┌ Info: Time check
└   time() - start_time = 9.404000043869019
┌ Info: Exploring node
└   branch_and_bound_node.ix = 99
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 3, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0140076
┌ Info: Price and cut time (b-and-b)
└   t = 0.2176515
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 99
│   lb = 1.1487312619358547
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 53
└   length(nodes) = 107
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2248
└   sum(fire_plans.plans_per_fire) = 1332
┌ Info: Time check
└   time() - start_time = 9.639999866485596
┌ Info: Exploring node
└   branch_and_bound_node.ix = 80
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0129432
┌ Info: Price and cut time (b-and-b)
└   t = 0.1382852
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 80
│   lb = 1.1487312619358547
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 54
└   length(nodes) = 109
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2295
└   sum(fire_plans.plans_per_fire) = 1355
┌ Info: Time check
└   time() - start_time = 9.803999900817871
┌ Info: Exploring node
└   branch_and_bound_node.ix = 81
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102357
┌ Info: Price and cut time (b-and-b)
└   t = 0.0862904
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 81
│   lb = 1.1488732418608891
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 55
└   length(nodes) = 111
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2305
└   sum(fire_plans.plans_per_fire) = 1366
┌ Info: Time check
└   time() - start_time = 9.906999826431274
┌ Info: Exploring node
└   branch_and_bound_node.ix = 68
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104504
┌ Info: Price and cut time (b-and-b)
└   t = 0.1395404
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 68
│   lb = 1.1488732418608891
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 56
└   length(nodes) = 113
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2325
└   sum(fire_plans.plans_per_fire) = 1384
┌ Info: Time check
└   time() - start_time = 10.054999828338623
┌ Info: Exploring node
└   branch_and_bound_node.ix = 69
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0118493
┌ Info: Price and cut time (b-and-b)
└   t = 0.1559376
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 3, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 69
│   lb = 1.148918889072534
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 57
└   length(nodes) = 115
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2370
└   sum(fire_plans.plans_per_fire) = 1409
┌ Info: Time check
└   time() - start_time = 10.223000049591064
┌ Info: Exploring node
└   branch_and_bound_node.ix = 94
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011079
┌ Info: Price and cut time (b-and-b)
└   t = 0.1400472
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 94
│   lb = 1.148918889072534
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 58
└   length(nodes) = 117
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2397
└   sum(fire_plans.plans_per_fire) = 1424
┌ Info: Time check
└   time() - start_time = 10.389999866485596
┌ Info: Exploring node
└   branch_and_bound_node.ix = 95
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0125876
┌ Info: Price and cut time (b-and-b)
└   t = 0.13571
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 95
│   lb = 1.1490088139035126
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 59
└   length(nodes) = 119
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2419
└   sum(fire_plans.plans_per_fire) = 1442
┌ Info: Time check
└   time() - start_time = 10.539999961853027
┌ Info: Exploring node
└   branch_and_bound_node.ix = 58
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0121794
┌ Info: Price and cut time (b-and-b)
└   t = 0.1857375
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 58
│   lb = 1.1490088139035126
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 60
└   length(nodes) = 121
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2466
└   sum(fire_plans.plans_per_fire) = 1470
┌ Info: Time check
└   time() - start_time = 10.738999843597412
┌ Info: Exploring node
└   branch_and_bound_node.ix = 59
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 3, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109498
┌ Info: Price and cut time (b-and-b)
└   t = 0.1032587
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(3, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(3, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 59
│   lb = 1.1492389825839624
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 61
└   length(nodes) = 123
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2498
└   sum(fire_plans.plans_per_fire) = 1485
┌ Info: Time check
└   time() - start_time = 10.85699987411499
┌ Info: Exploring node
└   branch_and_bound_node.ix = 84
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0115535
┌ Info: Price and cut time (b-and-b)
└   t = 0.1341
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 84
│   lb = 1.1492389825839624
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 62
└   length(nodes) = 125
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2533
└   sum(fire_plans.plans_per_fire) = 1507
┌ Info: Time check
└   time() - start_time = 11.00600004196167
┌ Info: Exploring node
└   branch_and_bound_node.ix = 85
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0108156
┌ Info: Price and cut time (b-and-b)
└   t = 0.1739644
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 85
│   lb = 1.1493217844496504
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 63
└   length(nodes) = 127
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2603
└   sum(fire_plans.plans_per_fire) = 1539
┌ Info: Time check
└   time() - start_time = 11.211999893188477
┌ Info: Exploring node
└   branch_and_bound_node.ix = 64
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.013281
┌ Info: Price and cut time (b-and-b)
└   t = 0.0533265
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 64
│   lb = 1.1493217844496504
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 64
└   length(nodes) = 129
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2623
└   sum(fire_plans.plans_per_fire) = 1546
┌ Info: Time check
└   time() - start_time = 11.283999919891357
┌ Info: Exploring node
└   branch_and_bound_node.ix = 65
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
│     FireDemandBranchingRule(1, 2, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0113754
┌ Info: Price and cut time (b-and-b)
└   t = 0.182065
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 2, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 65
│   lb = 1.1494983216511145
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 65
└   length(nodes) = 131
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2643
└   sum(fire_plans.plans_per_fire) = 1574
┌ Info: Time check
└   time() - start_time = 11.474999904632568
┌ Info: Exploring node
└   branch_and_bound_node.ix = 54
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0148263
┌ Info: Price and cut time (b-and-b)
└   t = 0.1774218
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 54
│   lb = 1.1494983216511145
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 66
└   length(nodes) = 133
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2653
└   sum(fire_plans.plans_per_fire) = 1599
┌ Info: Time check
└   time() - start_time = 11.674999952316284
┌ Info: Exploring node
└   branch_and_bound_node.ix = 55
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 3, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0106957
┌ Info: Price and cut time (b-and-b)
└   t = 0.222995
┌ Info: branching rules
│   left_branching_rule = CrewSupplyBranchingRule(9, 1, 4, false)
└   right_branching_rule = CrewSupplyBranchingRule(9, 1, 4, true)
┌ Info: current bounds
│   node_ix = 55
│   lb = 1.149510599103566
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 67
└   length(nodes) = 135
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2701
└   sum(fire_plans.plans_per_fire) = 1631
┌ Info: Time check
└   time() - start_time = 11.983999967575073
┌ Info: Exploring node
└   branch_and_bound_node.ix = 44
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.011427
┌ Info: Price and cut time (b-and-b)
└   t = 0.1917557
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 44
│   lb = 1.149510599103566
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 68
└   length(nodes) = 137
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2726
└   sum(fire_plans.plans_per_fire) = 1655
┌ Info: Time check
└   time() - start_time = 12.179999828338623
┌ Info: Exploring node
└   branch_and_bound_node.ix = 45
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    8-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0103276
┌ Info: Price and cut time (b-and-b)
└   t = 0.1392936
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 45
│   lb = 1.1495167197606593
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 69
└   length(nodes) = 139
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2740
└   sum(fire_plans.plans_per_fire) = 1672
┌ Info: Time check
└   time() - start_time = 12.348000049591064
┌ Info: Exploring node
└   branch_and_bound_node.ix = 92
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114381
┌ Info: Price and cut time (b-and-b)
└   t = 0.1049043
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 92
│   lb = 1.1495167197606593
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 70
└   length(nodes) = 141
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2753
└   sum(fire_plans.plans_per_fire) = 1683
┌ Info: Time check
└   time() - start_time = 12.467999935150146
┌ Info: Exploring node
└   branch_and_bound_node.ix = 93
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0107426
┌ Info: Price and cut time (b-and-b)
└   t = 0.2013971
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 93
│   lb = 1.1496589420836827
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 71
└   length(nodes) = 143
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2790
└   sum(fire_plans.plans_per_fire) = 1712
┌ Info: Time check
└   time() - start_time = 12.679999828338623
┌ Info: Exploring node
└   branch_and_bound_node.ix = 118
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 0, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0116074
┌ Info: Price and cut time (b-and-b)
└   t = 0.0844933
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 118
│   lb = 1.1496589420836827
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 72
└   length(nodes) = 145
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2805
└   sum(fire_plans.plans_per_fire) = 1725
┌ Info: Time check
└   time() - start_time = 12.789000034332275
┌ Info: Exploring node
└   branch_and_bound_node.ix = 119
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 5, 1, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0130185
┌ Info: Price and cut time (b-and-b)
└   t = 0.1922446
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 119
│   lb = 1.1496710429015644
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 73
└   length(nodes) = 147
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2822
└   sum(fire_plans.plans_per_fire) = 1746
┌ Info: Time check
└   time() - start_time = 13.0
┌ Info: Exploring node
└   branch_and_bound_node.ix = 62
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0102321
┌ Info: Price and cut time (b-and-b)
└   t = 0.1374039
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 62
│   lb = 1.1496710429015644
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 74
└   length(nodes) = 149
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2860
└   sum(fire_plans.plans_per_fire) = 1765
┌ Info: Time check
└   time() - start_time = 13.149999856948853
┌ Info: Exploring node
└   branch_and_bound_node.ix = 63
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 9, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0100983
┌ Info: Price and cut time (b-and-b)
└   t = 0.1290861
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(3, 2, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(3, 2, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 63
│   lb = 1.1497086799299918
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 75
└   length(nodes) = 151
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2896
└   sum(fire_plans.plans_per_fire) = 1791
┌ Info: Time check
└   time() - start_time = 13.28499984741211
┌ Info: Exploring node
└   branch_and_bound_node.ix = 108
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0109342
┌ Info: Price and cut time (b-and-b)
└   t = 0.0965925
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 108
│   lb = 1.1497086799299918
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 76
└   length(nodes) = 153
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2908
└   sum(fire_plans.plans_per_fire) = 1806
┌ Info: Time check
└   time() - start_time = 13.40999984741211
┌ Info: Exploring node
└   branch_and_bound_node.ix = 109
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    7-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 1, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0143567
┌ Info: Price and cut time (b-and-b)
└   t = 0.1970598
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 109
│   lb = 1.1497517049580115
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 77
└   length(nodes) = 155
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2918
└   sum(fire_plans.plans_per_fire) = 1837
┌ Info: Time check
└   time() - start_time = 13.615000009536743
┌ Info: Exploring node
└   branch_and_bound_node.ix = 142
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0110309
┌ Info: Price and cut time (b-and-b)
└   t = 0.1440158
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 5, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 5, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 142
│   lb = 1.1497517049580115
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 78
└   length(nodes) = 157
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2945
└   sum(fire_plans.plans_per_fire) = 1853
┌ Info: Time check
└   time() - start_time = 13.782999992370605
┌ Info: Exploring node
└   branch_and_bound_node.ix = 143
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0158287
┌ Info: Price and cut time (b-and-b)
└   t = 0.1690794
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 143
│   lb = 1.1498555204543788
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 79
└   length(nodes) = 159
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2960
└   sum(fire_plans.plans_per_fire) = 1873
┌ Info: Time check
└   time() - start_time = 13.974999904632568
┌ Info: Exploring node
└   branch_and_bound_node.ix = 60
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0170955
┌ Info: Price and cut time (b-and-b)
└   t = 0.1429477
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 6, 4, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 6, 5, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 60
│   lb = 1.1498555204543788
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 80
└   length(nodes) = 161
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2974
└   sum(fire_plans.plans_per_fire) = 1892
┌ Info: Time check
└   time() - start_time = 14.131999969482422
┌ Info: Exploring node
└   branch_and_bound_node.ix = 61
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    6-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 4, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 5, 0, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104902
┌ Info: Price and cut time (b-and-b)
└   t = 0.2602861
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 61
│   lb = 1.1498591560405613
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 81
└   length(nodes) = 163
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2986
└   sum(fire_plans.plans_per_fire) = 1923
┌ Info: Time check
└   time() - start_time = 14.414000034332275
┌ Info: Exploring node
└   branch_and_bound_node.ix = 102
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0141771
┌ Info: Price and cut time (b-and-b)
└   t = 0.1527343
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 5, 5, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 5, 6, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 102
│   lb = 1.1498591560405613
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 82
└   length(nodes) = 165
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 2997
└   sum(fire_plans.plans_per_fire) = 1948
┌ Info: Time check
└   time() - start_time = 14.592000007629395
┌ Info: Exploring node
└   branch_and_bound_node.ix = 103
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    5-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 7, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 2, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 8, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0104782
┌ Info: Price and cut time (b-and-b)
└   t = 0.2733376
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 103
│   lb = 1.1498639052451616
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 83
└   length(nodes) = 167
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3074
└   sum(fire_plans.plans_per_fire) = 1991
┌ Info: Time check
└   time() - start_time = 14.88100004196167
┌ Info: Exploring node
└   branch_and_bound_node.ix = 158
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105383
┌ Info: Price and cut time (b-and-b)
└   t = 0.1264823
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 158
│   lb = 1.1498639052451616
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 84
└   length(nodes) = 169
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3098
└   sum(fire_plans.plans_per_fire) = 2006
┌ Info: Time check
└   time() - start_time = 15.016999959945679
┌ Info: Exploring node
└   branch_and_bound_node.ix = 159
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    12-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 5, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 10, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0130952
┌ Info: Price and cut time (b-and-b)
└   t = 0.0949969
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 7, 7, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 7, 8, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 159
│   lb = 1.1499118942161046
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 85
└   length(nodes) = 171
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3112
└   sum(fire_plans.plans_per_fire) = 2016
┌ Info: Time check
└   time() - start_time = 15.134000062942505
┌ Info: Exploring node
└   branch_and_bound_node.ix = 136
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.010554
┌ Info: Price and cut time (b-and-b)
└   t = 0.1241641
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 136
│   lb = 1.1499118942161046
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 86
└   length(nodes) = 173
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3129
└   sum(fire_plans.plans_per_fire) = 2032
┌ Info: Time check
└   time() - start_time = 15.276999950408936
┌ Info: Exploring node
└   branch_and_bound_node.ix = 137
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0123474
┌ Info: Price and cut time (b-and-b)
└   t = 0.1497255
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 9, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 137
│   lb = 1.1499987615040244
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 87
└   length(nodes) = 175
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3169
└   sum(fire_plans.plans_per_fire) = 2056
┌ Info: Time check
└   time() - start_time = 15.434999942779541
┌ Info: Exploring node
└   branch_and_bound_node.ix = 78
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0114118
┌ Info: Price and cut time (b-and-b)
└   t = 0.096027
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 1, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 2, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 78
│   lb = 1.1499987615040244
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 88
└   length(nodes) = 177
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3190
└   sum(fire_plans.plans_per_fire) = 2067
┌ Info: Time check
└   time() - start_time = 15.550999879837036
┌ Info: Exploring node
└   branch_and_bound_node.ix = 79
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    9-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 9, "greater_than_or_equal")
│     FireDemandBranchingRule(1, 6, 7, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0126359
┌ Info: Price and cut time (b-and-b)
└   t = 0.1423684
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(3, 1, 9, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(3, 1, 10, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 79
│   lb = 1.1500206221731843
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 89
└   length(nodes) = 179
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3236
└   sum(fire_plans.plans_per_fire) = 2084
┌ Info: Time check
└   time() - start_time = 15.714999914169312
┌ Info: Exploring node
└   branch_and_bound_node.ix = 140
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 5, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0105151
┌ Info: Price and cut time (b-and-b)
└   t = 0.1837771
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(1, 8, 9, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 140
│   lb = 1.1500206221731843
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 90
└   length(nodes) = 181
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3273
└   sum(fire_plans.plans_per_fire) = 2105
┌ Info: Time check
└   time() - start_time = 15.918999910354614
┌ Info: Exploring node
└   branch_and_bound_node.ix = 141
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    11-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "greater_than_or_equal")
│     FireDemandBranchingRule(2, 4, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 2, "less_than_or_equal")
│     FireDemandBranchingRule(1, 1, 0, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(2, 5, 4, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "greater_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0134851
┌ Info: Price and cut time (b-and-b)
└   t = 0.0672597
┌ Info: branching rules
│   left_branching_rule = FireDemandBranchingRule(2, 6, 0, "less_than_or_equal")
└   right_branching_rule = FireDemandBranchingRule(2, 6, 1, "greater_than_or_equal")
┌ Info: current bounds
│   node_ix = 141
│   lb = 1.1501420420324964
└   ub = Inf
┌ Info: number of nodes
│   node_explored_count = 91
└   length(nodes) = 183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3284
└   sum(fire_plans.plans_per_fire) = 2111
┌ Info: Time check
└   time() - start_time = 15.996999979019165
┌ Info: Exploring node
└   branch_and_bound_node.ix = 172
┌ Info: rules
│   crew_rules = CrewSupplyBranchingRule[]
│   fire_rules =
│    10-element Vector{FireDemandBranchingRule}:
│     FireDemandBranchingRule(1, 2, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 3, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 5, 3, "less_than_or_equal")
│     FireDemandBranchingRule(1, 4, 1, "less_than_or_equal")
│     FireDemandBranchingRule(1, 7, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 8, 8, "less_than_or_equal")
│     FireDemandBranchingRule(2, 4, 8, "less_than_or_equal")
│     FireDemandBranchingRule(1, 10, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 6, 6, "less_than_or_equal")
│     FireDemandBranchingRule(1, 9, 8, "less_than_or_equal")
└   global_rules = GlobalFireAllotmentBranchingRule[]
┌ Info: Define rmp time (b-and-b)
└   t = 0.0133061
┌ Info: Price and cut time (b-and-b)
└   t = 0.1920505
┌ Info: current bounds
│   node_ix = 172
│   lb = 1.1501420420324964
└   ub = 1.1501420420324961
┌ Info: number of nodes
│   node_explored_count = 92
└   length(nodes) = 183
┌ Info: columns
│   sum(crew_routes.routes_per_crew) = 3309
└   sum(fire_plans.plans_per_fire) = 2131
┌ Info: Time check
└   time() - start_time = 16.20899987220764
┌ Info: Solved to tolerance
│   min_lb = 1.1501420420324964
└   ub = 1.1501420420324961
